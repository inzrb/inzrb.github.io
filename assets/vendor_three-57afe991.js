import{r as t,R as e,c as n,s as i,p as r,a as s,b as a,d as o,F as l,_ as c,u as h,e as u,g as d,f as p,h as f,i as m,j as g,k as v,m as _,l as y,S as x,n as M,t as S,o as b}from"./vendor-34e4b27b.js";
/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const w="153",T=1,E=2,A=3,C=0,R=1,P=100,U=0,L=1,I=2,D=0,O=1,N=2,F=3,B=4,z=5,k=300,G=301,V=302,H=303,W=304,j=306,X=1e3,q=1001,Y=1002,Z=1003,J=1004,K=1005,$=1006,Q=1007,tt=1008,et=1009,nt=1012,it=1013,rt=1014,st=1015,at=1016,ot=1017,lt=1018,ct=1020,ht=1023,ut=1026,dt=1027,pt=1028,ft=1029,mt=1031,gt=1033,vt=33776,_t=33777,yt=33778,xt=33779,Mt=35840,St=35841,bt=35842,wt=35843,Tt=37492,Et=37496,At=37808,Ct=37809,Rt=37810,Pt=37811,Ut=37812,Lt=37813,It=37814,Dt=37815,Ot=37816,Nt=37817,Ft=37818,Bt=37819,zt=37820,kt=37821,Gt=36492,Vt=36284,Ht=36285,Wt=36286,jt=2300,Xt=2301,qt=2302,Yt=2400,Zt=2401,Jt=2402,Kt=2500,$t=2501,Qt=3e3,te=3001,ee=3201,ne="",ie="srgb",re="srgb-linear",se="display-p3",ae=7680,oe=7681,le=35044,ce="300 es",he=1035,ue=2e3,de=2001;class pe{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t);t.target=null}}}const fe=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let me=1234567;const ge=Math.PI/180,ve=180/Math.PI;function _e(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(fe[255&t]+fe[t>>8&255]+fe[t>>16&255]+fe[t>>24&255]+"-"+fe[255&e]+fe[e>>8&255]+"-"+fe[e>>16&15|64]+fe[e>>24&255]+"-"+fe[63&n|128]+fe[n>>8&255]+"-"+fe[n>>16&255]+fe[n>>24&255]+fe[255&i]+fe[i>>8&255]+fe[i>>16&255]+fe[i>>24&255]).toLowerCase()}function ye(t,e,n){return Math.max(e,Math.min(n,t))}function xe(t,e){return(t%e+e)%e}function Me(t,e,n){return(1-n)*t+n*e}function Se(t){return 0==(t&t-1)&&0!==t}function be(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function we(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}function Te(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function Ee(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}const Ae={DEG2RAD:ge,RAD2DEG:ve,generateUUID:_e,clamp:ye,euclideanModulo:xe,mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},inverseLerp:function(t,e,n){return t!==e?(n-t)/(e-t):0},lerp:Me,damp:function(t,e,n,i){return Me(t,e,1-Math.exp(-n*i))},pingpong:function(t,e=1){return e-Math.abs(xe(t,2*e)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){void 0!==t&&(me=t);let e=me+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function(t){return t*ge},radToDeg:function(t){return t*ve},isPowerOfTwo:Se,ceilPowerOfTwo:be,floorPowerOfTwo:we,setQuaternionFromProperEuler:function(t,e,n,i,r){const s=Math.cos,a=Math.sin,o=s(n/2),l=a(n/2),c=s((e+i)/2),h=a((e+i)/2),u=s((e-i)/2),d=a((e-i)/2),p=s((i-e)/2),f=a((i-e)/2);switch(r){case"XYX":t.set(o*h,l*u,l*d,o*c);break;case"YZY":t.set(l*d,o*h,l*u,o*c);break;case"ZXZ":t.set(l*u,l*d,o*h,o*c);break;case"XZX":t.set(o*h,l*f,l*p,o*c);break;case"YXY":t.set(l*p,o*h,l*f,o*c);break;case"ZYZ":t.set(l*f,l*p,o*h,o*c)}},normalize:Ee,denormalize:Te};class Ce{constructor(t=0,e=0){Ce.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(ye(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,s=this.y-t.y;return this.x=r*n-s*i+t.x,this.y=r*i+s*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Re{constructor(t,e,n,i,r,s,a,o,l){Re.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,e,n,i,r,s,a,o,l)}set(t,e,n,i,r,s,a,o,l){const c=this.elements;return c[0]=t,c[1]=i,c[2]=a,c[3]=e,c[4]=r,c[5]=o,c[6]=n,c[7]=s,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,s=n[0],a=n[3],o=n[6],l=n[1],c=n[4],h=n[7],u=n[2],d=n[5],p=n[8],f=i[0],m=i[3],g=i[6],v=i[1],_=i[4],y=i[7],x=i[2],M=i[5],S=i[8];return r[0]=s*f+a*v+o*x,r[3]=s*m+a*_+o*M,r[6]=s*g+a*y+o*S,r[1]=l*f+c*v+h*x,r[4]=l*m+c*_+h*M,r[7]=l*g+c*y+h*S,r[2]=u*f+d*v+p*x,r[5]=u*m+d*_+p*M,r[8]=u*g+d*y+p*S,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8];return e*s*c-e*a*l-n*r*c+n*a*o+i*r*l-i*s*o}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8],h=c*s-a*l,u=a*o-c*r,d=l*r-s*o,p=e*h+n*u+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=h*f,t[1]=(i*l-c*n)*f,t[2]=(a*n-i*s)*f,t[3]=u*f,t[4]=(c*e-i*o)*f,t[5]=(i*r-a*e)*f,t[6]=d*f,t[7]=(n*o-l*e)*f,t[8]=(s*e-n*r)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,s,a){const o=Math.cos(r),l=Math.sin(r);return this.set(n*o,n*l,-n*(o*s+l*a)+s+t,-i*l,i*o,-i*(-l*s+o*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Pe.makeScale(t,e)),this}rotate(t){return this.premultiply(Pe.makeRotation(-t)),this}translate(t,e){return this.premultiply(Pe.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const Pe=new Re;function Ue(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}const Le={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Ie(t,e){return new Le[t](e)}function De(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}const Oe={};function Ne(t){t in Oe||(Oe[t]=!0)}function Fe(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Be(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}const ze=(new Re).fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),ke=(new Re).fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);const Ge={[re]:t=>t,[ie]:t=>t.convertSRGBToLinear(),[se]:function(t){return t.convertSRGBToLinear().applyMatrix3(ke)}},Ve={[re]:t=>t,[ie]:t=>t.convertLinearToSRGB(),[se]:function(t){return t.applyMatrix3(ze).convertLinearToSRGB()}},He={enabled:!0,get legacyMode(){return!this.enabled},set legacyMode(t){this.enabled=!t},get workingColorSpace(){return re},set workingColorSpace(t){},convert:function(t,e,n){if(!1===this.enabled||e===n||!e||!n)return t;const i=Ge[e],r=Ve[n];if(void 0===i||void 0===r)throw new Error(`Unsupported color space conversion, "${e}" to "${n}".`);return r(i(t))},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)}};let We;class je{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===We&&(We=De("canvas")),We.width=t.width,We.height=t.height;const n=We.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=We}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=De("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let t=0;t<r.length;t++)r[t]=255*Fe(r[t]/255);return n.putImageData(i,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*Fe(e[t]/255)):e[t]=Fe(e[t]);return{data:e,width:t.width,height:t.height}}return t}}let Xe=0;class qe{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Xe++}),this.uuid=_e(),this.data=t,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let t;if(Array.isArray(i)){t=[];for(let e=0,n=i.length;e<n;e++)i[e].isDataTexture?t.push(Ye(i[e].image)):t.push(Ye(i[e]))}else t=Ye(i);n.url=t}return e||(t.images[this.uuid]=n),n}}function Ye(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?je.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:{}}let Ze=0;class Je extends pe{constructor(t=Je.DEFAULT_IMAGE,e=Je.DEFAULT_MAPPING,n=1001,i=1001,r=$,s=1008,a=ht,o=et,l=Je.DEFAULT_ANISOTROPY,c=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ze++}),this.uuid=_e(),this.name="",this.source=new qe(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new Ce(0,0),this.repeat=new Ce(1,1),this.center=new Ce(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Re,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,"string"==typeof c?this.colorSpace=c:(Ne("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=c===te?ie:ne),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==k)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case X:t.x=t.x-Math.floor(t.x);break;case q:t.x=t.x<0?0:1;break;case Y:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case X:t.y=t.y-Math.floor(t.y);break;case q:t.y=t.y<0?0:1;break;case Y:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Ne("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===ie?te:Qt}set encoding(t){Ne("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=t===te?ie:ne}}Je.DEFAULT_IMAGE=null,Je.DEFAULT_MAPPING=k,Je.DEFAULT_ANISOTROPY=1;class Ke{constructor(t=0,e=0,n=0,i=1){Ke.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i+s[12]*r,this.y=s[1]*e+s[5]*n+s[9]*i+s[13]*r,this.z=s[2]*e+s[6]*n+s[10]*i+s[14]*r,this.w=s[3]*e+s[7]*n+s[11]*i+s[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const s=.01,a=.1,o=t.elements,l=o[0],c=o[4],h=o[8],u=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(c-u)<s&&Math.abs(h-f)<s&&Math.abs(p-m)<s){if(Math.abs(c+u)<a&&Math.abs(h+f)<a&&Math.abs(p+m)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(d+1)/2,v=(g+1)/2,_=(c+u)/4,y=(h+f)/4,x=(p+m)/4;return t>o&&t>v?t<s?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(t),i=_/n,r=y/n):o>v?o<s?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(o),n=_/i,r=x/i):v<s?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(v),n=y/r,i=x/r),this.set(n,i,r,e),this}let v=Math.sqrt((m-p)*(m-p)+(h-f)*(h-f)+(u-c)*(u-c));return Math.abs(v)<.001&&(v=1),this.x=(m-p)/v,this.y=(h-f)/v,this.z=(u-c)/v,this.w=Math.acos((l+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class $e extends pe{constructor(t=1,e=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Ke(0,0,t,e),this.scissorTest=!1,this.viewport=new Ke(0,0,t,e);const i={width:t,height:e,depth:1};void 0!==n.encoding&&(Ne("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===te?ie:ne),this.texture=new Je(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:$,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null,this.samples=void 0!==n.samples?n.samples:0}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new qe(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Qe extends Je{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Z,this.minFilter=Z,this.wrapR=q,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class tn extends Je{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Z,this.minFilter=Z,this.wrapR=q,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class en{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,s,a){let o=n[i+0],l=n[i+1],c=n[i+2],h=n[i+3];const u=r[s+0],d=r[s+1],p=r[s+2],f=r[s+3];if(0===a)return t[e+0]=o,t[e+1]=l,t[e+2]=c,void(t[e+3]=h);if(1===a)return t[e+0]=u,t[e+1]=d,t[e+2]=p,void(t[e+3]=f);if(h!==f||o!==u||l!==d||c!==p){let t=1-a;const e=o*u+l*d+c*p+h*f,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const r=Math.sqrt(i),s=Math.atan2(r,e*n);t=Math.sin(t*s)/r,a=Math.sin(a*s)/r}const r=a*n;if(o=o*t+u*r,l=l*t+d*r,c=c*t+p*r,h=h*t+f*r,t===1-a){const t=1/Math.sqrt(o*o+l*l+c*c+h*h);o*=t,l*=t,c*=t,h*=t}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,s){const a=n[i],o=n[i+1],l=n[i+2],c=n[i+3],h=r[s],u=r[s+1],d=r[s+2],p=r[s+3];return t[e]=a*p+c*h+o*d-l*u,t[e+1]=o*p+c*u+l*h-a*d,t[e+2]=l*p+c*d+a*u-o*h,t[e+3]=c*p-a*h-o*u-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const n=t._x,i=t._y,r=t._z,s=t._order,a=Math.cos,o=Math.sin,l=a(n/2),c=a(i/2),h=a(r/2),u=o(n/2),d=o(i/2),p=o(r/2);switch(s){case"XYZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"YXZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"ZXY":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"ZYX":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"YZX":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case"XZY":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],s=e[1],a=e[5],o=e[9],l=e[2],c=e[6],h=e[10],u=n+a+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(c-o)*t,this._y=(r-l)*t,this._z=(s-i)*t}else if(n>a&&n>h){const t=2*Math.sqrt(1+n-a-h);this._w=(c-o)/t,this._x=.25*t,this._y=(i+s)/t,this._z=(r+l)/t}else if(a>h){const t=2*Math.sqrt(1+a-n-h);this._w=(r-l)/t,this._x=(i+s)/t,this._y=.25*t,this._z=(o+c)/t}else{const t=2*Math.sqrt(1+h-n-a);this._w=(s-i)/t,this._x=(r+l)/t,this._y=(o+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(ye(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,s=t._w,a=e._x,o=e._y,l=e._z,c=e._w;return this._x=n*c+s*a+i*l-r*o,this._y=i*c+s*o+r*a-n*l,this._z=r*c+s*l+n*o-i*a,this._w=s*c-n*a-i*o-r*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,r=this._z,s=this._w;let a=s*t._w+n*t._x+i*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=s,this._x=n,this._y=i,this._z=r,this;const o=1-a*a;if(o<=Number.EPSILON){const t=1-e;return this._w=t*s+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),c=Math.atan2(l,a),h=Math.sin((1-e)*c)/l,u=Math.sin(e*c)/l;return this._w=s*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(r),n*Math.cos(r),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class nn{constructor(t=0,e=0,n=0){nn.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(sn.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(sn.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,s=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*s,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*s,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*s,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,s=t.y,a=t.z,o=t.w,l=o*e+s*i-a*n,c=o*n+a*e-r*i,h=o*i+r*n-s*e,u=-r*e-s*n-a*i;return this.x=l*o+u*-r+c*-a-h*-s,this.y=c*o+u*-s+h*-r-l*-a,this.z=h*o+u*-a+l*-s-c*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,s=e.x,a=e.y,o=e.z;return this.x=i*o-r*a,this.y=r*s-n*o,this.z=n*a-i*s,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return rn.copy(this).projectOnVector(t),this.sub(rn)}reflect(t){return this.sub(rn.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(ye(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const rn=new nn,sn=new en;class an{constructor(t=new nn(1/0,1/0,1/0),e=new nn(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(ln.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(ln.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=ln.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){if(t.updateWorldMatrix(!1,!1),void 0!==t.boundingBox)null===t.boundingBox&&t.computeBoundingBox(),cn.copy(t.boundingBox),cn.applyMatrix4(t.matrixWorld),this.union(cn);else{const n=t.geometry;if(void 0!==n)if(e&&void 0!==n.attributes&&void 0!==n.attributes.position){const e=n.attributes.position;for(let n=0,i=e.count;n<i;n++)ln.fromBufferAttribute(e,n).applyMatrix4(t.matrixWorld),this.expandByPoint(ln)}else null===n.boundingBox&&n.computeBoundingBox(),cn.copy(n.boundingBox),cn.applyMatrix4(t.matrixWorld),this.union(cn)}const n=t.children;for(let i=0,r=n.length;i<r;i++)this.expandByObject(n[i],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,ln),ln.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(gn),vn.subVectors(this.max,gn),hn.subVectors(t.a,gn),un.subVectors(t.b,gn),dn.subVectors(t.c,gn),pn.subVectors(un,hn),fn.subVectors(dn,un),mn.subVectors(hn,dn);let e=[0,-pn.z,pn.y,0,-fn.z,fn.y,0,-mn.z,mn.y,pn.z,0,-pn.x,fn.z,0,-fn.x,mn.z,0,-mn.x,-pn.y,pn.x,0,-fn.y,fn.x,0,-mn.y,mn.x,0];return!!xn(e,hn,un,dn,vn)&&(e=[1,0,0,0,1,0,0,0,1],!!xn(e,hn,un,dn,vn)&&(_n.crossVectors(pn,fn),e=[_n.x,_n.y,_n.z],xn(e,hn,un,dn,vn)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,ln).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(ln).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(on[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),on[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),on[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),on[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),on[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),on[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),on[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),on[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(on)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const on=[new nn,new nn,new nn,new nn,new nn,new nn,new nn,new nn],ln=new nn,cn=new an,hn=new nn,un=new nn,dn=new nn,pn=new nn,fn=new nn,mn=new nn,gn=new nn,vn=new nn,_n=new nn,yn=new nn;function xn(t,e,n,i,r){for(let s=0,a=t.length-3;s<=a;s+=3){yn.fromArray(t,s);const a=r.x*Math.abs(yn.x)+r.y*Math.abs(yn.y)+r.z*Math.abs(yn.z),o=e.dot(yn),l=n.dot(yn),c=i.dot(yn);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>a)return!1}return!0}const Mn=new an,Sn=new nn,bn=new nn;class wn{constructor(t=new nn,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):Mn.setFromPoints(t).getCenter(n);let i=0;for(let r=0,s=t.length;r<s;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Sn.subVectors(t,this.center);const e=Sn.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.addScaledVector(Sn,n/t),this.radius+=n}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(bn.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Sn.copy(t.center).add(bn)),this.expandByPoint(Sn.copy(t.center).sub(bn))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Tn=new nn,En=new nn,An=new nn,Cn=new nn,Rn=new nn,Pn=new nn,Un=new nn;class Ln{constructor(t=new nn,e=new nn(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Tn)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Tn.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Tn.copy(this.origin).addScaledVector(this.direction,e),Tn.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){En.copy(t).add(e).multiplyScalar(.5),An.copy(e).sub(t).normalize(),Cn.copy(this.origin).sub(En);const r=.5*t.distanceTo(e),s=-this.direction.dot(An),a=Cn.dot(this.direction),o=-Cn.dot(An),l=Cn.lengthSq(),c=Math.abs(1-s*s);let h,u,d,p;if(c>0)if(h=s*o-a,u=s*a-o,p=r*c,h>=0)if(u>=-p)if(u<=p){const t=1/c;h*=t,u*=t,d=h*(h+s*u+2*a)+u*(s*h+u+2*o)+l}else u=r,h=Math.max(0,-(s*u+a)),d=-h*h+u*(u+2*o)+l;else u=-r,h=Math.max(0,-(s*u+a)),d=-h*h+u*(u+2*o)+l;else u<=-p?(h=Math.max(0,-(-s*r+a)),u=h>0?-r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+l):u<=p?(h=0,u=Math.min(Math.max(-r,-o),r),d=u*(u+2*o)+l):(h=Math.max(0,-(s*r+a)),u=h>0?r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+l);else u=s>0?-r:r,h=Math.max(0,-(s*u+a)),d=-h*h+u*(u+2*o)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(En).addScaledVector(An,u),d}intersectSphere(t,e){Tn.subVectors(t.center,this.origin);const n=Tn.dot(this.direction),i=Tn.dot(Tn)-n*n,r=t.radius*t.radius;if(i>r)return null;const s=Math.sqrt(r-i),a=n-s,o=n+s;return o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,s,a,o;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(n=(t.min.x-u.x)*l,i=(t.max.x-u.x)*l):(n=(t.max.x-u.x)*l,i=(t.min.x-u.x)*l),c>=0?(r=(t.min.y-u.y)*c,s=(t.max.y-u.y)*c):(r=(t.max.y-u.y)*c,s=(t.min.y-u.y)*c),n>s||r>i?null:((r>n||isNaN(n))&&(n=r),(s<i||isNaN(i))&&(i=s),h>=0?(a=(t.min.z-u.z)*h,o=(t.max.z-u.z)*h):(a=(t.max.z-u.z)*h,o=(t.min.z-u.z)*h),n>o||a>i?null:((a>n||n!=n)&&(n=a),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,Tn)}intersectTriangle(t,e,n,i,r){Rn.subVectors(e,t),Pn.subVectors(n,t),Un.crossVectors(Rn,Pn);let s,a=this.direction.dot(Un);if(a>0){if(i)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}Cn.subVectors(this.origin,t);const o=s*this.direction.dot(Pn.crossVectors(Cn,Pn));if(o<0)return null;const l=s*this.direction.dot(Rn.cross(Cn));if(l<0)return null;if(o+l>a)return null;const c=-s*Cn.dot(Un);return c<0?null:this.at(c/a,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class In{constructor(t,e,n,i,r,s,a,o,l,c,h,u,d,p,f,m){In.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,n,i,r,s,a,o,l,c,h,u,d,p,f,m)}set(t,e,n,i,r,s,a,o,l,c,h,u,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=r,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new In).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Dn.setFromMatrixColumn(t,0).length(),r=1/Dn.setFromMatrixColumn(t,1).length(),s=1/Dn.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*s,e[9]=n[9]*s,e[10]=n[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,s=Math.cos(n),a=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){const t=s*c,n=s*h,i=a*c,r=a*h;e[0]=o*c,e[4]=-o*h,e[8]=l,e[1]=n+i*l,e[5]=t-r*l,e[9]=-a*o,e[2]=r-t*l,e[6]=i+n*l,e[10]=s*o}else if("YXZ"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t+r*a,e[4]=i*a-n,e[8]=s*l,e[1]=s*h,e[5]=s*c,e[9]=-a,e[2]=n*a-i,e[6]=r+t*a,e[10]=s*o}else if("ZXY"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t-r*a,e[4]=-s*h,e[8]=i+n*a,e[1]=n+i*a,e[5]=s*c,e[9]=r-t*a,e[2]=-s*l,e[6]=a,e[10]=s*o}else if("ZYX"===t.order){const t=s*c,n=s*h,i=a*c,r=a*h;e[0]=o*c,e[4]=i*l-n,e[8]=t*l+r,e[1]=o*h,e[5]=r*l+t,e[9]=n*l-i,e[2]=-l,e[6]=a*o,e[10]=s*o}else if("YZX"===t.order){const t=s*o,n=s*l,i=a*o,r=a*l;e[0]=o*c,e[4]=r-t*h,e[8]=i*h+n,e[1]=h,e[5]=s*c,e[9]=-a*c,e[2]=-l*c,e[6]=n*h+i,e[10]=t-r*h}else if("XZY"===t.order){const t=s*o,n=s*l,i=a*o,r=a*l;e[0]=o*c,e[4]=-h,e[8]=l*c,e[1]=t*h+r,e[5]=s*c,e[9]=n*h-i,e[2]=i*h-n,e[6]=a*c,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Nn,t,Fn)}lookAt(t,e,n){const i=this.elements;return kn.subVectors(t,e),0===kn.lengthSq()&&(kn.z=1),kn.normalize(),Bn.crossVectors(n,kn),0===Bn.lengthSq()&&(1===Math.abs(n.z)?kn.x+=1e-4:kn.z+=1e-4,kn.normalize(),Bn.crossVectors(n,kn)),Bn.normalize(),zn.crossVectors(kn,Bn),i[0]=Bn.x,i[4]=zn.x,i[8]=kn.x,i[1]=Bn.y,i[5]=zn.y,i[9]=kn.y,i[2]=Bn.z,i[6]=zn.z,i[10]=kn.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,s=n[0],a=n[4],o=n[8],l=n[12],c=n[1],h=n[5],u=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],_=n[7],y=n[11],x=n[15],M=i[0],S=i[4],b=i[8],w=i[12],T=i[1],E=i[5],A=i[9],C=i[13],R=i[2],P=i[6],U=i[10],L=i[14],I=i[3],D=i[7],O=i[11],N=i[15];return r[0]=s*M+a*T+o*R+l*I,r[4]=s*S+a*E+o*P+l*D,r[8]=s*b+a*A+o*U+l*O,r[12]=s*w+a*C+o*L+l*N,r[1]=c*M+h*T+u*R+d*I,r[5]=c*S+h*E+u*P+d*D,r[9]=c*b+h*A+u*U+d*O,r[13]=c*w+h*C+u*L+d*N,r[2]=p*M+f*T+m*R+g*I,r[6]=p*S+f*E+m*P+g*D,r[10]=p*b+f*A+m*U+g*O,r[14]=p*w+f*C+m*L+g*N,r[3]=v*M+_*T+y*R+x*I,r[7]=v*S+_*E+y*P+x*D,r[11]=v*b+_*A+y*U+x*O,r[15]=v*w+_*C+y*L+x*N,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],s=t[1],a=t[5],o=t[9],l=t[13],c=t[2],h=t[6],u=t[10],d=t[14];return t[3]*(+r*o*h-i*l*h-r*a*u+n*l*u+i*a*d-n*o*d)+t[7]*(+e*o*d-e*l*u+r*s*u-i*s*d+i*l*c-r*o*c)+t[11]*(+e*l*h-e*a*d-r*s*h+n*s*d+r*a*c-n*l*c)+t[15]*(-i*a*c-e*o*h+e*a*u+i*s*h-n*s*u+n*o*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8],h=t[9],u=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],v=h*m*l-f*u*l+f*o*d-a*m*d-h*o*g+a*u*g,_=p*u*l-c*m*l-p*o*d+s*m*d+c*o*g-s*u*g,y=c*f*l-p*h*l+p*a*d-s*f*d-c*a*g+s*h*g,x=p*h*o-c*f*o-p*a*u+s*f*u+c*a*m-s*h*m,M=e*v+n*_+i*y+r*x;if(0===M)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const S=1/M;return t[0]=v*S,t[1]=(f*u*r-h*m*r-f*i*d+n*m*d+h*i*g-n*u*g)*S,t[2]=(a*m*r-f*o*r+f*i*l-n*m*l-a*i*g+n*o*g)*S,t[3]=(h*o*r-a*u*r-h*i*l+n*u*l+a*i*d-n*o*d)*S,t[4]=_*S,t[5]=(c*m*r-p*u*r+p*i*d-e*m*d-c*i*g+e*u*g)*S,t[6]=(p*o*r-s*m*r-p*i*l+e*m*l+s*i*g-e*o*g)*S,t[7]=(s*u*r-c*o*r+c*i*l-e*u*l-s*i*d+e*o*d)*S,t[8]=y*S,t[9]=(p*h*r-c*f*r-p*n*d+e*f*d+c*n*g-e*h*g)*S,t[10]=(s*f*r-p*a*r+p*n*l-e*f*l-s*n*g+e*a*g)*S,t[11]=(c*a*r-s*h*r-c*n*l+e*h*l+s*n*d-e*a*d)*S,t[12]=x*S,t[13]=(c*f*i-p*h*i+p*n*u-e*f*u-c*n*m+e*h*m)*S,t[14]=(p*a*i-s*f*i-p*n*o+e*f*o+s*n*m-e*a*m)*S,t[15]=(s*h*i-c*a*i+c*n*o-e*h*o-s*n*u+e*a*u)*S,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,s=t.x,a=t.y,o=t.z,l=r*s,c=r*a;return this.set(l*s+n,l*a-i*o,l*o+i*a,0,l*a+i*o,c*a+n,c*o-i*s,0,l*o-i*a,c*o+i*s,r*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,s){return this.set(1,n,r,0,t,1,s,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,s=e._y,a=e._z,o=e._w,l=r+r,c=s+s,h=a+a,u=r*l,d=r*c,p=r*h,f=s*c,m=s*h,g=a*h,v=o*l,_=o*c,y=o*h,x=n.x,M=n.y,S=n.z;return i[0]=(1-(f+g))*x,i[1]=(d+y)*x,i[2]=(p-_)*x,i[3]=0,i[4]=(d-y)*M,i[5]=(1-(u+g))*M,i[6]=(m+v)*M,i[7]=0,i[8]=(p+_)*S,i[9]=(m-v)*S,i[10]=(1-(u+f))*S,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=Dn.set(i[0],i[1],i[2]).length();const s=Dn.set(i[4],i[5],i[6]).length(),a=Dn.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],On.copy(this);const o=1/r,l=1/s,c=1/a;return On.elements[0]*=o,On.elements[1]*=o,On.elements[2]*=o,On.elements[4]*=l,On.elements[5]*=l,On.elements[6]*=l,On.elements[8]*=c,On.elements[9]*=c,On.elements[10]*=c,e.setFromRotationMatrix(On),n.x=r,n.y=s,n.z=a,this}makePerspective(t,e,n,i,r,s,a=2e3){const o=this.elements,l=2*r/(e-t),c=2*r/(n-i),h=(e+t)/(e-t),u=(n+i)/(n-i);let d,p;if(a===ue)d=-(s+r)/(s-r),p=-2*s*r/(s-r);else{if(a!==de)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);d=-s/(s-r),p=-s*r/(s-r)}return o[0]=l,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=c,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,n,i,r,s,a=2e3){const o=this.elements,l=1/(e-t),c=1/(n-i),h=1/(s-r),u=(e+t)*l,d=(n+i)*c;let p,f;if(a===ue)p=(s+r)*h,f=-2*h;else{if(a!==de)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);p=r*h,f=-1*h}return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=f,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Dn=new nn,On=new In,Nn=new nn(0,0,0),Fn=new nn(1,1,1),Bn=new nn,zn=new nn,kn=new nn,Gn=new In,Vn=new en;class Hn{constructor(t=0,e=0,n=0,i=Hn.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],s=i[4],a=i[8],o=i[1],l=i[5],c=i[9],h=i[2],u=i[6],d=i[10];switch(e){case"XYZ":this._y=Math.asin(ye(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-s,r)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-ye(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(ye(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-ye(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(ye(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-ye(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-c,d),this._y=0)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Gn.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Gn,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Vn.setFromEuler(this),this.setFromQuaternion(Vn,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Hn.DEFAULT_ORDER="XYZ";class Wn{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}let jn=0;const Xn=new nn,qn=new en,Yn=new In,Zn=new nn,Jn=new nn,Kn=new nn,$n=new en,Qn=new nn(1,0,0),ti=new nn(0,1,0),ei=new nn(0,0,1),ni={type:"added"},ii={type:"removed"};class ri extends pe{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:jn++}),this.uuid=_e(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ri.DEFAULT_UP.clone();const t=new nn,e=new Hn,n=new en,i=new nn(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new In},normalMatrix:{value:new Re}}),this.matrix=new In,this.matrixWorld=new In,this.matrixAutoUpdate=ri.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=ri.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new Wn,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return qn.setFromAxisAngle(t,e),this.quaternion.multiply(qn),this}rotateOnWorldAxis(t,e){return qn.setFromAxisAngle(t,e),this.quaternion.premultiply(qn),this}rotateX(t){return this.rotateOnAxis(Qn,t)}rotateY(t){return this.rotateOnAxis(ti,t)}rotateZ(t){return this.rotateOnAxis(ei,t)}translateOnAxis(t,e){return Xn.copy(t).applyQuaternion(this.quaternion),this.position.add(Xn.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Qn,t)}translateY(t){return this.translateOnAxis(ti,t)}translateZ(t){return this.translateOnAxis(ei,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Yn.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Zn.copy(t):Zn.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Jn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Yn.lookAt(Jn,Zn,this.up):Yn.lookAt(Zn,Jn,this.up),this.quaternion.setFromRotationMatrix(Yn),i&&(Yn.extractRotation(i.matrixWorld),qn.setFromRotationMatrix(Yn),this.quaternion.premultiply(qn.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this||t&&t.isObject3D&&(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(ni)),this}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(ii)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(ii)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),Yn.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Yn.multiply(t.parent.matrixWorld)),t.applyMatrix4(Yn),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}}getObjectsByProperty(t,e){let n=[];this[t]===e&&n.push(this);for(let i=0,r=this.children.length;i<r;i++){const r=this.children[i].getObjectsByProperty(t,e);r.length>0&&(n=n.concat(r))}return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Jn,t,Kn),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Jn,$n,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++){const i=e[n];!0!==i.matrixWorldAutoUpdate&&!0!==t||i.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++){const n=t[e];!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};function r(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];r(t.shapes,i)}else r(t.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(r(t.materials,this.material[n]));i.material=e}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];i.animations.push(r(t.animations,n))}}if(e){const e=s(t.geometries),i=s(t.materials),r=s(t.textures),a=s(t.images),o=s(t.shapes),l=s(t.skeletons),c=s(t.animations),h=s(t.nodes);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),a.length>0&&(n.images=a),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c),h.length>0&&(n.nodes=h)}return n.object=i,n;function s(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let n=0;n<t.children.length;n++){const e=t.children[n];this.add(e.clone())}return this}}ri.DEFAULT_UP=new nn(0,1,0),ri.DEFAULT_MATRIX_AUTO_UPDATE=!0,ri.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const si=new nn,ai=new nn,oi=new nn,li=new nn,ci=new nn,hi=new nn,ui=new nn,di=new nn,pi=new nn,fi=new nn;let mi=!1;class gi{constructor(t=new nn,e=new nn,n=new nn){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),si.subVectors(t,e),i.cross(si);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){si.subVectors(i,e),ai.subVectors(n,e),oi.subVectors(t,e);const s=si.dot(si),a=si.dot(ai),o=si.dot(oi),l=ai.dot(ai),c=ai.dot(oi),h=s*l-a*a;if(0===h)return r.set(-2,-1,-1);const u=1/h,d=(l*o-a*c)*u,p=(s*c-a*o)*u;return r.set(1-d-p,p,d)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,li),li.x>=0&&li.y>=0&&li.x+li.y<=1}static getUV(t,e,n,i,r,s,a,o){return!1===mi&&(mi=!0),this.getInterpolation(t,e,n,i,r,s,a,o)}static getInterpolation(t,e,n,i,r,s,a,o){return this.getBarycoord(t,e,n,i,li),o.setScalar(0),o.addScaledVector(r,li.x),o.addScaledVector(s,li.y),o.addScaledVector(a,li.z),o}static isFrontFacing(t,e,n,i){return si.subVectors(n,e),ai.subVectors(t,e),si.cross(ai).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return si.subVectors(this.c,this.b),ai.subVectors(this.a,this.b),.5*si.cross(ai).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return gi.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return gi.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,r){return!1===mi&&(mi=!0),gi.getInterpolation(t,this.a,this.b,this.c,e,n,i,r)}getInterpolation(t,e,n,i,r){return gi.getInterpolation(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return gi.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return gi.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let s,a;ci.subVectors(i,n),hi.subVectors(r,n),di.subVectors(t,n);const o=ci.dot(di),l=hi.dot(di);if(o<=0&&l<=0)return e.copy(n);pi.subVectors(t,i);const c=ci.dot(pi),h=hi.dot(pi);if(c>=0&&h<=c)return e.copy(i);const u=o*h-c*l;if(u<=0&&o>=0&&c<=0)return s=o/(o-c),e.copy(n).addScaledVector(ci,s);fi.subVectors(t,r);const d=ci.dot(fi),p=hi.dot(fi);if(p>=0&&d<=p)return e.copy(r);const f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(n).addScaledVector(hi,a);const m=c*p-d*h;if(m<=0&&h-c>=0&&d-p>=0)return ui.subVectors(r,i),a=(h-c)/(h-c+(d-p)),e.copy(i).addScaledVector(ui,a);const g=1/(m+f+u);return s=f*g,a=u*g,e.copy(n).addScaledVector(ci,s).addScaledVector(hi,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let vi=0;class _i extends pe{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:vi++}),this.uuid=_e(),this.name="",this.type="Material",this.blending=1,this.side=C,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=P,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ae,this.stencilZFail=ae,this.stencilZPass=ae,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n)continue;const i=this[e];void 0!==i&&(i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n)}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),this.side!==C&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.forceSinglePass&&(n.forceSinglePass=this.forceSinglePass),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),e){const e=i(t.textures),r=i(t.images);e.length>0&&(n.textures=e),r.length>0&&(n.images=r)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}const yi={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},xi={h:0,s:0,l:0},Mi={h:0,s:0,l:0};function Si(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}class bi{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(void 0===e&&void 0===n){const e=t;e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=ie){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,He.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=He.workingColorSpace){return this.r=t,this.g=e,this.b=n,He.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=He.workingColorSpace){if(t=xe(t,1),e=ye(e,0,1),n=ye(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,r=2*n-i;this.r=Si(r,i,t+1/3),this.g=Si(r,i,t),this.b=Si(r,i,t-1/3)}return He.toWorkingColorSpace(this,i),this}setStyle(t,e=ie){function n(t){void 0!==t&&parseFloat(t)}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let t;const r=i[1],s=i[2];switch(r){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return n(t[4]),this.setRGB(Math.min(255,parseInt(t[1],10))/255,Math.min(255,parseInt(t[2],10))/255,Math.min(255,parseInt(t[3],10))/255,e);if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return n(t[4]),this.setRGB(Math.min(100,parseInt(t[1],10))/100,Math.min(100,parseInt(t[2],10))/100,Math.min(100,parseInt(t[3],10))/100,e);break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return n(t[4]),this.setHSL(parseFloat(t[1])/360,parseFloat(t[2])/100,parseFloat(t[3])/100,e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=i[1],n=t.length;if(3===n)return this.setRGB(parseInt(t.charAt(0),16)/15,parseInt(t.charAt(1),16)/15,parseInt(t.charAt(2),16)/15,e);if(6===n)return this.setHex(parseInt(t,16),e)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=ie){const n=yi[t.toLowerCase()];return void 0!==n&&this.setHex(n,e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Fe(t.r),this.g=Fe(t.g),this.b=Fe(t.b),this}copyLinearToSRGB(t){return this.r=Be(t.r),this.g=Be(t.g),this.b=Be(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=ie){return He.fromWorkingColorSpace(wi.copy(this),t),65536*Math.round(ye(255*wi.r,0,255))+256*Math.round(ye(255*wi.g,0,255))+Math.round(ye(255*wi.b,0,255))}getHexString(t=ie){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=He.workingColorSpace){He.fromWorkingColorSpace(wi.copy(this),e);const n=wi.r,i=wi.g,r=wi.b,s=Math.max(n,i,r),a=Math.min(n,i,r);let o,l;const c=(a+s)/2;if(a===s)o=0,l=0;else{const t=s-a;switch(l=c<=.5?t/(s+a):t/(2-s-a),s){case n:o=(i-r)/t+(i<r?6:0);break;case i:o=(r-n)/t+2;break;case r:o=(n-i)/t+4}o/=6}return t.h=o,t.s=l,t.l=c,t}getRGB(t,e=He.workingColorSpace){return He.fromWorkingColorSpace(wi.copy(this),e),t.r=wi.r,t.g=wi.g,t.b=wi.b,t}getStyle(t=ie){He.fromWorkingColorSpace(wi.copy(this),t);const e=wi.r,n=wi.g,i=wi.b;return t!==ie?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(255*e)},${Math.round(255*n)},${Math.round(255*i)})`}offsetHSL(t,e,n){return this.getHSL(xi),xi.h+=t,xi.s+=e,xi.l+=n,this.setHSL(xi.h,xi.s,xi.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(xi),t.getHSL(Mi);const n=Me(xi.h,Mi.h,e),i=Me(xi.s,Mi.s,e),r=Me(xi.l,Mi.l,e);return this.setHSL(n,i,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,r=t.elements;return this.r=r[0]*e+r[3]*n+r[6]*i,this.g=r[1]*e+r[4]*n+r[7]*i,this.b=r[2]*e+r[5]*n+r[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const wi=new bi;bi.NAMES=yi;class Ti extends _i{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new bi(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=U,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Ei=Ai();function Ai(){const t=new ArrayBuffer(4),e=new Float32Array(t),n=new Uint32Array(t),i=new Uint32Array(512),r=new Uint32Array(512);for(let l=0;l<256;++l){const t=l-127;t<-27?(i[l]=0,i[256|l]=32768,r[l]=24,r[256|l]=24):t<-14?(i[l]=1024>>-t-14,i[256|l]=1024>>-t-14|32768,r[l]=-t-1,r[256|l]=-t-1):t<=15?(i[l]=t+15<<10,i[256|l]=t+15<<10|32768,r[l]=13,r[256|l]=13):t<128?(i[l]=31744,i[256|l]=64512,r[l]=24,r[256|l]=24):(i[l]=31744,i[256|l]=64512,r[l]=13,r[256|l]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let t=l<<13,e=0;for(;0==(8388608&t);)t<<=1,e-=8388608;t&=-8388609,e+=947912704,s[l]=t|e}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)a[l]=l<<23;a[31]=1199570944,a[32]=2147483648;for(let l=33;l<63;++l)a[l]=2147483648+(l-32<<23);a[63]=3347054592;for(let l=1;l<64;++l)32!==l&&(o[l]=1024);return{floatView:e,uint32View:n,baseTable:i,shiftTable:r,mantissaTable:s,exponentTable:a,offsetTable:o}}function Ci(t){Math.abs(t),t=ye(t,-65504,65504),Ei.floatView[0]=t;const e=Ei.uint32View[0],n=e>>23&511;return Ei.baseTable[n]+((8388607&e)>>Ei.shiftTable[n])}function Ri(t){const e=t>>10;return Ei.uint32View[0]=Ei.mantissaTable[Ei.offsetTable[e]+(1023&t)]+Ei.exponentTable[e],Ei.floatView[0]}const Pi={toHalfFloat:Ci,fromHalfFloat:Ri},Ui=new nn,Li=new Ce;class Ii{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=n,this.usage=le,this.updateRange={offset:0,count:-1},this.gpuType=st,this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)Li.fromBufferAttribute(this,e),Li.applyMatrix3(t),this.setXY(e,Li.x,Li.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Ui.fromBufferAttribute(this,e),Ui.applyMatrix3(t),this.setXYZ(e,Ui.x,Ui.y,Ui.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Ui.fromBufferAttribute(this,e),Ui.applyMatrix4(t),this.setXYZ(e,Ui.x,Ui.y,Ui.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Ui.fromBufferAttribute(this,e),Ui.applyNormalMatrix(t),this.setXYZ(e,Ui.x,Ui.y,Ui.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Ui.fromBufferAttribute(this,e),Ui.transformDirection(t),this.setXYZ(e,Ui.x,Ui.y,Ui.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Te(e,this.array)),e}setX(t,e){return this.normalized&&(e=Ee(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Te(e,this.array)),e}setY(t,e){return this.normalized&&(e=Ee(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Te(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Ee(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Te(e,this.array)),e}setW(t,e){return this.normalized&&(e=Ee(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Ee(e,this.array),n=Ee(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=Ee(e,this.array),n=Ee(n,this.array),i=Ee(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=Ee(e,this.array),n=Ee(n,this.array),i=Ee(i,this.array),r=Ee(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==le&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}copyColorsArray(){}copyVector2sArray(){}copyVector3sArray(){}copyVector4sArray(){}}class Di extends Ii{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Oi extends Ii{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Ni extends Ii{constructor(t,e,n){super(new Float32Array(t),e,n)}}let Fi=0;const Bi=new In,zi=new ri,ki=new nn,Gi=new an,Vi=new an,Hi=new nn;class Wi extends pe{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Fi++}),this.uuid=_e(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Ue(t)?Oi:Di)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new Re).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Bi.makeRotationFromQuaternion(t),this.applyMatrix4(Bi),this}rotateX(t){return Bi.makeRotationX(t),this.applyMatrix4(Bi),this}rotateY(t){return Bi.makeRotationY(t),this.applyMatrix4(Bi),this}rotateZ(t){return Bi.makeRotationZ(t),this.applyMatrix4(Bi),this}translate(t,e,n){return Bi.makeTranslation(t,e,n),this.applyMatrix4(Bi),this}scale(t,e,n){return Bi.makeScale(t,e,n),this.applyMatrix4(Bi),this}lookAt(t){return zi.lookAt(t),zi.updateMatrix(),this.applyMatrix4(zi.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ki).negate(),this.translate(ki.x,ki.y,ki.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new Ni(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new an);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)this.boundingBox.set(new nn(-1/0,-1/0,-1/0),new nn(1/0,1/0,1/0));else{if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Gi.setFromBufferAttribute(n),this.morphTargetsRelative?(Hi.addVectors(this.boundingBox.min,Gi.min),this.boundingBox.expandByPoint(Hi),Hi.addVectors(this.boundingBox.max,Gi.max),this.boundingBox.expandByPoint(Hi)):(this.boundingBox.expandByPoint(Gi.min),this.boundingBox.expandByPoint(Gi.max))}}else this.boundingBox.makeEmpty();isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)}}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new wn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)this.boundingSphere.set(new nn,1/0);else if(t){const n=this.boundingSphere.center;if(Gi.setFromBufferAttribute(t),e)for(let t=0,r=e.length;t<r;t++){const n=e[t];Vi.setFromBufferAttribute(n),this.morphTargetsRelative?(Hi.addVectors(Gi.min,Vi.min),Gi.expandByPoint(Hi),Hi.addVectors(Gi.max,Vi.max),Gi.expandByPoint(Hi)):(Gi.expandByPoint(Vi.min),Gi.expandByPoint(Vi.max))}Gi.getCenter(n);let i=0;for(let e=0,r=t.count;e<r;e++)Hi.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(Hi));if(e)for(let r=0,s=e.length;r<s;r++){const s=e[r],a=this.morphTargetsRelative;for(let e=0,r=s.count;e<r;e++)Hi.fromBufferAttribute(s,e),a&&(ki.fromBufferAttribute(t,e),Hi.add(ki)),i=Math.max(i,n.distanceToSquared(Hi))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return;const n=t.array,i=e.position.array,r=e.normal.array,s=e.uv.array,a=i.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Ii(new Float32Array(4*a),4));const o=this.getAttribute("tangent").array,l=[],c=[];for(let T=0;T<a;T++)l[T]=new nn,c[T]=new nn;const h=new nn,u=new nn,d=new nn,p=new Ce,f=new Ce,m=new Ce,g=new nn,v=new nn;function _(t,e,n){h.fromArray(i,3*t),u.fromArray(i,3*e),d.fromArray(i,3*n),p.fromArray(s,2*t),f.fromArray(s,2*e),m.fromArray(s,2*n),u.sub(h),d.sub(h),f.sub(p),m.sub(p);const r=1/(f.x*m.y-m.x*f.y);isFinite(r)&&(g.copy(u).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(r),v.copy(d).multiplyScalar(f.x).addScaledVector(u,-m.x).multiplyScalar(r),l[t].add(g),l[e].add(g),l[n].add(g),c[t].add(v),c[e].add(v),c[n].add(v))}let y=this.groups;0===y.length&&(y=[{start:0,count:n.length}]);for(let T=0,E=y.length;T<E;++T){const t=y[T],e=t.start;for(let i=e,r=e+t.count;i<r;i+=3)_(n[i+0],n[i+1],n[i+2])}const x=new nn,M=new nn,S=new nn,b=new nn;function w(t){S.fromArray(r,3*t),b.copy(S);const e=l[t];x.copy(e),x.sub(S.multiplyScalar(S.dot(e))).normalize(),M.crossVectors(b,e);const n=M.dot(c[t])<0?-1:1;o[4*t]=x.x,o[4*t+1]=x.y,o[4*t+2]=x.z,o[4*t+3]=n}for(let T=0,E=y.length;T<E;++T){const t=y[T],e=t.start;for(let i=e,r=e+t.count;i<r;i+=3)w(n[i+0]),w(n[i+1]),w(n[i+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Ii(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new nn,r=new nn,s=new nn,a=new nn,o=new nn,l=new nn,c=new nn,h=new nn;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),p=t.getX(u+1),f=t.getX(u+2);i.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),s.fromBufferAttribute(e,f),c.subVectors(s,r),h.subVectors(i,r),c.cross(h),a.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,f),a.add(c),o.add(c),l.add(c),n.setXYZ(d,a.x,a.y,a.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let t=0,u=e.count;t<u;t+=3)i.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),s.fromBufferAttribute(e,t+2),c.subVectors(s,r),h.subVectors(i,r),c.cross(h),n.setXYZ(t+0,c.x,c.y,c.z),n.setXYZ(t+1,c.x,c.y,c.z),n.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Hi.fromBufferAttribute(t,e),Hi.normalize(),t.setXYZ(e,Hi.x,Hi.y,Hi.z)}toNonIndexed(){function t(t,e){const n=t.array,i=t.itemSize,r=t.normalized,s=new n.constructor(e.length*i);let a=0,o=0;for(let l=0,c=e.length;l<c;l++){a=t.isInterleavedBufferAttribute?e[l]*t.data.stride+t.offset:e[l]*i;for(let t=0;t<i;t++)s[o++]=n[a++]}return new Ii(s,i,r)}if(null===this.index)return this;const e=new Wi,n=this.index.array,i=this.attributes;for(const a in i){const r=t(i[a],n);e.setAttribute(a,r)}const r=this.morphAttributes;for(const a in r){const i=[],s=r[a];for(let e=0,r=s.length;e<r;e++){const r=t(s[e],n);i.push(r)}e.morphAttributes[a]=i}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let a=0,o=s.length;a<o;a++){const t=s[a];e.addGroup(t.start,t.count,t.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const o in n){const e=n[o];t.data.attributes[o]=e.toJSON(t.data)}const i={};let r=!1;for(const o in this.morphAttributes){const e=this.morphAttributes[o],n=[];for(let i=0,r=e.length;i<r;i++){const r=e[i];n.push(r.toJSON(t.data))}n.length>0&&(i[o]=n,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return null!==a&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const l in i){const t=i[l];this.setAttribute(l,t.clone(e))}const r=t.morphAttributes;for(const l in r){const t=[],n=r[l];for(let i=0,r=n.length;i<r;i++)t.push(n[i].clone(e));this.morphAttributes[l]=t}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let l=0,c=s.length;l<c;l++){const t=s[l];this.addGroup(t.start,t.count,t.materialIndex)}const a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const ji=new In,Xi=new Ln,qi=new wn,Yi=new nn,Zi=new nn,Ji=new nn,Ki=new nn,$i=new nn,Qi=new nn,tr=new Ce,er=new Ce,nr=new Ce,ir=new nn,rr=new nn,sr=new nn,ar=new nn,or=new nn;class lr extends ri{constructor(t=new Wi,e=new Ti){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,s=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const a=this.morphTargetInfluences;if(r&&a){Qi.set(0,0,0);for(let n=0,i=r.length;n<i;n++){const i=a[n],o=r[n];0!==i&&($i.fromBufferAttribute(o,t),s?Qi.addScaledVector($i,i):Qi.addScaledVector($i.sub(e),i))}e.add(Qi)}return e}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0!==i){if(null===n.boundingSphere&&n.computeBoundingSphere(),qi.copy(n.boundingSphere),qi.applyMatrix4(r),Xi.copy(t.ray).recast(t.near),!1===qi.containsPoint(Xi.origin)){if(null===Xi.intersectSphere(qi,Yi))return;if(Xi.origin.distanceToSquared(Yi)>(t.far-t.near)**2)return}ji.copy(r).invert(),Xi.copy(t.ray).applyMatrix4(ji),null!==n.boundingBox&&!1===Xi.intersectsBox(n.boundingBox)||this._computeIntersections(t,e,Xi)}}_computeIntersections(t,e,n){let i;const r=this.geometry,s=this.material,a=r.index,o=r.attributes.position,l=r.attributes.uv,c=r.attributes.uv1,h=r.attributes.normal,u=r.groups,d=r.drawRange;if(null!==a)if(Array.isArray(s))for(let p=0,f=u.length;p<f;p++){const r=u[p],o=s[r.materialIndex];for(let s=Math.max(r.start,d.start),u=Math.min(a.count,Math.min(r.start+r.count,d.start+d.count));s<u;s+=3){i=cr(this,o,t,n,l,c,h,a.getX(s),a.getX(s+1),a.getX(s+2)),i&&(i.faceIndex=Math.floor(s/3),i.face.materialIndex=r.materialIndex,e.push(i))}}else{for(let r=Math.max(0,d.start),o=Math.min(a.count,d.start+d.count);r<o;r+=3){i=cr(this,s,t,n,l,c,h,a.getX(r),a.getX(r+1),a.getX(r+2)),i&&(i.faceIndex=Math.floor(r/3),e.push(i))}}else if(void 0!==o)if(Array.isArray(s))for(let p=0,f=u.length;p<f;p++){const r=u[p],a=s[r.materialIndex];for(let s=Math.max(r.start,d.start),u=Math.min(o.count,Math.min(r.start+r.count,d.start+d.count));s<u;s+=3){i=cr(this,a,t,n,l,c,h,s,s+1,s+2),i&&(i.faceIndex=Math.floor(s/3),i.face.materialIndex=r.materialIndex,e.push(i))}}else{for(let r=Math.max(0,d.start),a=Math.min(o.count,d.start+d.count);r<a;r+=3){i=cr(this,s,t,n,l,c,h,r,r+1,r+2),i&&(i.faceIndex=Math.floor(r/3),e.push(i))}}}}function cr(t,e,n,i,r,s,a,o,l,c){t.getVertexPosition(o,Zi),t.getVertexPosition(l,Ji),t.getVertexPosition(c,Ki);const h=function(t,e,n,i,r,s,a,o){let l;if(l=e.side===R?i.intersectTriangle(a,s,r,!0,o):i.intersectTriangle(r,s,a,e.side===C,o),null===l)return null;or.copy(o),or.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(or);return c<n.near||c>n.far?null:{distance:c,point:or.clone(),object:t}}(t,e,n,i,Zi,Ji,Ki,ar);if(h){r&&(tr.fromBufferAttribute(r,o),er.fromBufferAttribute(r,l),nr.fromBufferAttribute(r,c),h.uv=gi.getInterpolation(ar,Zi,Ji,Ki,tr,er,nr,new Ce)),s&&(tr.fromBufferAttribute(s,o),er.fromBufferAttribute(s,l),nr.fromBufferAttribute(s,c),h.uv1=gi.getInterpolation(ar,Zi,Ji,Ki,tr,er,nr,new Ce),h.uv2=h.uv1),a&&(ir.fromBufferAttribute(a,o),rr.fromBufferAttribute(a,l),sr.fromBufferAttribute(a,c),h.normal=gi.getInterpolation(ar,Zi,Ji,Ki,ir,rr,sr,new nn),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const t={a:o,b:l,c:c,normal:new nn,materialIndex:0};gi.getNormal(Zi,Ji,Ki,t.normal),h.face=t}return h}class hr extends Wi{constructor(t=1,e=1,n=1,i=1,r=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:s};const a=this;i=Math.floor(i),r=Math.floor(r),s=Math.floor(s);const o=[],l=[],c=[],h=[];let u=0,d=0;function p(t,e,n,i,r,s,p,f,m,g,v){const _=s/m,y=p/g,x=s/2,M=p/2,S=f/2,b=m+1,w=g+1;let T=0,E=0;const A=new nn;for(let a=0;a<w;a++){const s=a*y-M;for(let o=0;o<b;o++){const u=o*_-x;A[t]=u*i,A[e]=s*r,A[n]=S,l.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=f>0?1:-1,c.push(A.x,A.y,A.z),h.push(o/m),h.push(1-a/g),T+=1}}for(let a=0;a<g;a++)for(let t=0;t<m;t++){const e=u+t+b*a,n=u+t+b*(a+1),i=u+(t+1)+b*(a+1),r=u+(t+1)+b*a;o.push(e,n,r),o.push(n,i,r),E+=6}a.addGroup(d,E,v),d+=E,u+=T}p("z","y","x",-1,-1,n,e,t,s,r,0),p("z","y","x",1,-1,n,e,-t,s,r,1),p("x","z","y",1,1,t,n,e,i,s,2),p("x","z","y",1,-1,t,n,-e,i,s,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(o),this.setAttribute("position",new Ni(l,3)),this.setAttribute("normal",new Ni(c,3)),this.setAttribute("uv",new Ni(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new hr(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function ur(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?e[n][i]=null:e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function dr(t){const e={};for(let n=0;n<t.length;n++){const i=ur(t[n]);for(const t in i)e[t]=i[t]}return e}function pr(t){return null===t.getRenderTarget()?t.outputColorSpace:re}const fr={clone:ur,merge:dr};class mr extends _i{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=ur(t.uniforms),this.uniformsGroups=function(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n].clone());return e}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i].value;n&&n.isTexture?e.uniforms[i]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[i]={type:"m4",value:n.toArray()}:e.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)!0===this.extensions[i]&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class gr extends ri{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new In,this.projectionMatrix=new In,this.projectionMatrixInverse=new In,this.coordinateSystem=ue}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class vr extends gr{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*ve*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*ge*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*ve*Math.atan(Math.tan(.5*ge*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,r,s){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*ge*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const s=this.view;if(null!==this.view&&this.view.enabled){const t=s.fullWidth,a=s.fullHeight;r+=s.offsetX*i/t,e-=s.offsetY*n/a,i*=s.width/t,n*=s.height/a}const a=this.filmOffset;0!==a&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const _r=-90;class yr extends ri{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null;const i=new vr(_r,1,t,e);i.layers=this.layers,this.add(i);const r=new vr(_r,1,t,e);r.layers=this.layers,this.add(r);const s=new vr(_r,1,t,e);s.layers=this.layers,this.add(s);const a=new vr(_r,1,t,e);a.layers=this.layers,this.add(a);const o=new vr(_r,1,t,e);o.layers=this.layers,this.add(o);const l=new vr(_r,1,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,r,s,a,o]=e;for(const l of e)this.remove(l);if(t===ue)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),s.up.set(0,0,1),s.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else{if(t!==de)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),s.up.set(0,0,-1),s.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1)}for(const l of e)this.add(l),l.updateMatrixWorld()}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[i,r,s,a,o,l]=this.children,c=t.getRenderTarget(),h=t.toneMapping,u=t.xr.enabled;t.toneMapping=D,t.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,r),t.setRenderTarget(n,2),t.render(e,s),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,o),n.texture.generateMipmaps=d,t.setRenderTarget(n,5),t.render(e,l),t.setRenderTarget(c),t.toneMapping=h,t.xr.enabled=u,n.texture.needsPMREMUpdate=!0}}class xr extends Je{constructor(t,e,n,i,r,s,a,o,l,c){super(t=void 0!==t?t:[],e=void 0!==e?e:G,n,i,r,s,a,o,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class Mr extends $e{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];void 0!==e.encoding&&(Ne("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),e.colorSpace=e.encoding===te?ie:ne),this.texture=new xr(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:$}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},i=new hr(5,5,5),r=new mr({name:"CubemapFromEquirect",uniforms:ur(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:R,blending:0});r.uniforms.tEquirect.value=e;const s=new lr(i,r),a=e.minFilter;e.minFilter===tt&&(e.minFilter=$);return new yr(1,10,this).update(t,s),e.minFilter=a,s.geometry.dispose(),s.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let s=0;s<6;s++)t.setRenderTarget(this,s),t.clear(e,n,i);t.setRenderTarget(r)}}const Sr=new nn,br=new nn,wr=new Re;class Tr{constructor(t=new nn(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=Sr.subVectors(n,e).cross(br.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(Sr),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(t.start).addScaledVector(n,r)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||wr.getNormalMatrix(t),i=this.coplanarPoint(Sr).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const Er=new wn,Ar=new nn;class Cr{constructor(t=new Tr,e=new Tr,n=new Tr,i=new Tr,r=new Tr,s=new Tr){this.planes=[t,e,n,i,r,s]}set(t,e,n,i,r,s){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(r),a[5].copy(s),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=2e3){const n=this.planes,i=t.elements,r=i[0],s=i[1],a=i[2],o=i[3],l=i[4],c=i[5],h=i[6],u=i[7],d=i[8],p=i[9],f=i[10],m=i[11],g=i[12],v=i[13],_=i[14],y=i[15];if(n[0].setComponents(o-r,u-l,m-d,y-g).normalize(),n[1].setComponents(o+r,u+l,m+d,y+g).normalize(),n[2].setComponents(o+s,u+c,m+p,y+v).normalize(),n[3].setComponents(o-s,u-c,m-p,y-v).normalize(),n[4].setComponents(o-a,u-h,m-f,y-_).normalize(),e===ue)n[5].setComponents(o+a,u+h,m+f,y+_).normalize();else{if(e!==de)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);n[5].setComponents(a,h,f,_).normalize()}return this}intersectsObject(t){if(void 0!==t.boundingSphere)null===t.boundingSphere&&t.computeBoundingSphere(),Er.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;null===e.boundingSphere&&e.computeBoundingSphere(),Er.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Er)}intersectsSprite(t){return Er.center.set(0,0,0),Er.radius=.7071067811865476,Er.applyMatrix4(t.matrixWorld),this.intersectsSphere(Er)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let r=0;r<6;r++){if(e[r].distanceToPoint(n)<i)return!1}return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(Ar.x=i.normal.x>0?t.max.x:t.min.x,Ar.y=i.normal.y>0?t.max.y:t.min.y,Ar.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(Ar)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Rr(){let t=null,e=!1,n=null,i=null;function r(e,s){n(e,s),i=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function Pr(t,e){const n=e.isWebGL2,i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=i.get(e);n&&(t.deleteBuffer(n.buffer),i.delete(e))},update:function(e,r){if(e.isGLBufferAttribute){const t=i.get(e);return void((!t||t.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const s=i.get(e);void 0===s?i.set(e,function(e,i){const r=e.array,s=e.usage,a=t.createBuffer();let o;if(t.bindBuffer(i,a),t.bufferData(i,r,s),e.onUploadCallback(),r instanceof Float32Array)o=t.FLOAT;else if(r instanceof Uint16Array)if(e.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");o=t.HALF_FLOAT}else o=t.UNSIGNED_SHORT;else if(r instanceof Int16Array)o=t.SHORT;else if(r instanceof Uint32Array)o=t.UNSIGNED_INT;else if(r instanceof Int32Array)o=t.INT;else if(r instanceof Int8Array)o=t.BYTE;else if(r instanceof Uint8Array)o=t.UNSIGNED_BYTE;else{if(!(r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);o=t.UNSIGNED_BYTE}return{buffer:a,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(e,r)):s.version<e.version&&(!function(e,i,r){const s=i.array,a=i.updateRange;t.bindBuffer(r,e),-1===a.count?t.bufferSubData(r,0,s):(n?t.bufferSubData(r,a.offset*s.BYTES_PER_ELEMENT,s,a.offset,a.count):t.bufferSubData(r,a.offset*s.BYTES_PER_ELEMENT,s.subarray(a.offset,a.offset+a.count)),a.count=-1),i.onUploadCallback()}(s.buffer,e,r),s.version=e.version)}}}class Ur extends Wi{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,s=e/2,a=Math.floor(n),o=Math.floor(i),l=a+1,c=o+1,h=t/a,u=e/o,d=[],p=[],f=[],m=[];for(let g=0;g<c;g++){const t=g*u-s;for(let e=0;e<l;e++){const n=e*h-r;p.push(n,-t,0),f.push(0,0,1),m.push(e/a),m.push(1-g/o)}}for(let g=0;g<o;g++)for(let t=0;t<a;t++){const e=t+l*g,n=t+l*(g+1),i=t+1+l*(g+1),r=t+1+l*g;d.push(e,n,r),d.push(n,i,r)}this.setIndex(d),this.setAttribute("position",new Ni(p,3)),this.setAttribute("normal",new Ni(f,3)),this.setAttribute("uv",new Ni(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ur(t.width,t.height,t.widthSegments,t.heightSegments)}}const Lr={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( LEGACY_LIGHTS )\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#else\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tanisotropyV /= material.anisotropy;\n\tmaterial.anisotropy = saturate( material.anisotropy );\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, vMapUv );\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#ifdef USE_UV\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},Ir={common:{diffuse:{value:new bi(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Re},alphaMap:{value:null},alphaMapTransform:{value:new Re},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Re}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Re}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Re}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Re},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Re},normalScale:{value:new Ce(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Re},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Re}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Re}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Re}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new bi(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new bi(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Re},alphaTest:{value:0},uvTransform:{value:new Re}},sprite:{diffuse:{value:new bi(16777215)},opacity:{value:1},center:{value:new Ce(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Re},alphaMap:{value:null},alphaMapTransform:{value:new Re},alphaTest:{value:0}}},Dr={basic:{uniforms:dr([Ir.common,Ir.specularmap,Ir.envmap,Ir.aomap,Ir.lightmap,Ir.fog]),vertexShader:Lr.meshbasic_vert,fragmentShader:Lr.meshbasic_frag},lambert:{uniforms:dr([Ir.common,Ir.specularmap,Ir.envmap,Ir.aomap,Ir.lightmap,Ir.emissivemap,Ir.bumpmap,Ir.normalmap,Ir.displacementmap,Ir.fog,Ir.lights,{emissive:{value:new bi(0)}}]),vertexShader:Lr.meshlambert_vert,fragmentShader:Lr.meshlambert_frag},phong:{uniforms:dr([Ir.common,Ir.specularmap,Ir.envmap,Ir.aomap,Ir.lightmap,Ir.emissivemap,Ir.bumpmap,Ir.normalmap,Ir.displacementmap,Ir.fog,Ir.lights,{emissive:{value:new bi(0)},specular:{value:new bi(1118481)},shininess:{value:30}}]),vertexShader:Lr.meshphong_vert,fragmentShader:Lr.meshphong_frag},standard:{uniforms:dr([Ir.common,Ir.envmap,Ir.aomap,Ir.lightmap,Ir.emissivemap,Ir.bumpmap,Ir.normalmap,Ir.displacementmap,Ir.roughnessmap,Ir.metalnessmap,Ir.fog,Ir.lights,{emissive:{value:new bi(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Lr.meshphysical_vert,fragmentShader:Lr.meshphysical_frag},toon:{uniforms:dr([Ir.common,Ir.aomap,Ir.lightmap,Ir.emissivemap,Ir.bumpmap,Ir.normalmap,Ir.displacementmap,Ir.gradientmap,Ir.fog,Ir.lights,{emissive:{value:new bi(0)}}]),vertexShader:Lr.meshtoon_vert,fragmentShader:Lr.meshtoon_frag},matcap:{uniforms:dr([Ir.common,Ir.bumpmap,Ir.normalmap,Ir.displacementmap,Ir.fog,{matcap:{value:null}}]),vertexShader:Lr.meshmatcap_vert,fragmentShader:Lr.meshmatcap_frag},points:{uniforms:dr([Ir.points,Ir.fog]),vertexShader:Lr.points_vert,fragmentShader:Lr.points_frag},dashed:{uniforms:dr([Ir.common,Ir.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Lr.linedashed_vert,fragmentShader:Lr.linedashed_frag},depth:{uniforms:dr([Ir.common,Ir.displacementmap]),vertexShader:Lr.depth_vert,fragmentShader:Lr.depth_frag},normal:{uniforms:dr([Ir.common,Ir.bumpmap,Ir.normalmap,Ir.displacementmap,{opacity:{value:1}}]),vertexShader:Lr.meshnormal_vert,fragmentShader:Lr.meshnormal_frag},sprite:{uniforms:dr([Ir.sprite,Ir.fog]),vertexShader:Lr.sprite_vert,fragmentShader:Lr.sprite_frag},background:{uniforms:{uvTransform:{value:new Re},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Lr.background_vert,fragmentShader:Lr.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Lr.backgroundCube_vert,fragmentShader:Lr.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Lr.cube_vert,fragmentShader:Lr.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Lr.equirect_vert,fragmentShader:Lr.equirect_frag},distanceRGBA:{uniforms:dr([Ir.common,Ir.displacementmap,{referencePosition:{value:new nn},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Lr.distanceRGBA_vert,fragmentShader:Lr.distanceRGBA_frag},shadow:{uniforms:dr([Ir.lights,Ir.fog,{color:{value:new bi(0)},opacity:{value:1}}]),vertexShader:Lr.shadow_vert,fragmentShader:Lr.shadow_frag}};Dr.physical={uniforms:dr([Dr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Re},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Re},clearcoatNormalScale:{value:new Ce(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Re},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Re},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Re},sheen:{value:0},sheenColor:{value:new bi(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Re},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Re},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Re},transmissionSamplerSize:{value:new Ce},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Re},attenuationDistance:{value:0},attenuationColor:{value:new bi(0)},specularColor:{value:new bi(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Re},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Re},anisotropyVector:{value:new Ce},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Re}}]),vertexShader:Lr.meshphysical_vert,fragmentShader:Lr.meshphysical_frag};const Or={r:0,b:0,g:0};function Nr(t,e,n,i,r,s,a){const o=new bi(0);let l,c,h=!0===s?0:1,u=null,d=0,p=null;function f(e,n){e.getRGB(Or,pr(t)),i.buffers.color.setClear(Or.r,Or.g,Or.b,n,a)}return{getClearColor:function(){return o},setClearColor:function(t,e=1){o.set(t),h=e,f(o,h)},getClearAlpha:function(){return h},setClearAlpha:function(t){h=t,f(o,h)},render:function(s,m){let g=!1,v=!0===m.isScene?m.background:null;if(v&&v.isTexture){v=(m.backgroundBlurriness>0?n:e).get(v)}switch(null===v?f(o,h):v&&v.isColor&&(f(v,1),g=!0),t.xr.getEnvironmentBlendMode()){case"opaque":g=!0;break;case"additive":i.buffers.color.setClear(0,0,0,1,a),g=!0;break;case"alpha-blend":i.buffers.color.setClear(0,0,0,0,a),g=!0}(t.autoClear||g)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),v&&(v.isCubeTexture||v.mapping===j)?(void 0===c&&(c=new lr(new hr(1,1,1),new mr({name:"BackgroundCubeMaterial",uniforms:ur(Dr.backgroundCube.uniforms),vertexShader:Dr.backgroundCube.vertexShader,fragmentShader:Dr.backgroundCube.fragmentShader,side:R,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(c)),c.material.uniforms.envMap.value=v,c.material.uniforms.flipEnvMap.value=v.isCubeTexture&&!1===v.isRenderTargetTexture?-1:1,c.material.uniforms.backgroundBlurriness.value=m.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,c.material.toneMapped=v.colorSpace!==ie,u===v&&d===v.version&&p===t.toneMapping||(c.material.needsUpdate=!0,u=v,d=v.version,p=t.toneMapping),c.layers.enableAll(),s.unshift(c,c.geometry,c.material,0,0,null)):v&&v.isTexture&&(void 0===l&&(l=new lr(new Ur(2,2),new mr({name:"BackgroundMaterial",uniforms:ur(Dr.background.uniforms),vertexShader:Dr.background.vertexShader,fragmentShader:Dr.background.fragmentShader,side:C,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(l)),l.material.uniforms.t2D.value=v,l.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,l.material.toneMapped=v.colorSpace!==ie,!0===v.matrixAutoUpdate&&v.updateMatrix(),l.material.uniforms.uvTransform.value.copy(v.matrix),u===v&&d===v.version&&p===t.toneMapping||(l.material.needsUpdate=!0,u=v,d=v.version,p=t.toneMapping),l.layers.enableAll(),s.unshift(l,l.geometry,l.material,0,0,null))}}}function Fr(t,e,n,i){const r=t.getParameter(t.MAX_VERTEX_ATTRIBS),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),a=i.isWebGL2||null!==s,o={},l=p(null);let c=l,h=!1;function u(e){return i.isWebGL2?t.bindVertexArray(e):s.bindVertexArrayOES(e)}function d(e){return i.isWebGL2?t.deleteVertexArray(e):s.deleteVertexArrayOES(e)}function p(t){const e=[],n=[],i=[];for(let s=0;s<r;s++)e[s]=0,n[s]=0,i[s]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:i,object:t,attributes:{},index:null}}function f(){const t=c.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function m(t){g(t,0)}function g(n,r){const s=c.newAttributes,a=c.enabledAttributes,o=c.attributeDivisors;if(s[n]=1,0===a[n]&&(t.enableVertexAttribArray(n),a[n]=1),o[n]!==r){(i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),o[n]=r}}function v(){const e=c.newAttributes,n=c.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function _(e,n,i,r,s,a,o){!0===o?t.vertexAttribIPointer(e,n,i,s,a):t.vertexAttribPointer(e,n,i,r,s,a)}function y(){x(),h=!0,c!==l&&(c=l,u(c.object))}function x(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(r,l,d,y,x){let M=!1;if(a){const e=function(e,n,r){const a=!0===r.wireframe;let l=o[e.id];void 0===l&&(l={},o[e.id]=l);let c=l[n.id];void 0===c&&(c={},l[n.id]=c);let h=c[a];void 0===h&&(h=p(i.isWebGL2?t.createVertexArray():s.createVertexArrayOES()),c[a]=h);return h}(y,d,l);c!==e&&(c=e,u(c.object)),M=function(t,e,n,i){const r=c.attributes,s=e.attributes;let a=0;const o=n.getAttributes();for(const l in o){if(o[l].location>=0){const e=r[l];let n=s[l];if(void 0===n&&("instanceMatrix"===l&&t.instanceMatrix&&(n=t.instanceMatrix),"instanceColor"===l&&t.instanceColor&&(n=t.instanceColor)),void 0===e)return!0;if(e.attribute!==n)return!0;if(n&&e.data!==n.data)return!0;a++}}return c.attributesNum!==a||c.index!==i}(r,y,d,x),M&&function(t,e,n,i){const r={},s=e.attributes;let a=0;const o=n.getAttributes();for(const l in o){if(o[l].location>=0){let e=s[l];void 0===e&&("instanceMatrix"===l&&t.instanceMatrix&&(e=t.instanceMatrix),"instanceColor"===l&&t.instanceColor&&(e=t.instanceColor));const n={};n.attribute=e,e&&e.data&&(n.data=e.data),r[l]=n,a++}}c.attributes=r,c.attributesNum=a,c.index=i}(r,y,d,x)}else{const t=!0===l.wireframe;c.geometry===y.id&&c.program===d.id&&c.wireframe===t||(c.geometry=y.id,c.program=d.id,c.wireframe=t,M=!0)}null!==x&&n.update(x,t.ELEMENT_ARRAY_BUFFER),(M||h)&&(h=!1,function(r,s,a,o){if(!1===i.isWebGL2&&(r.isInstancedMesh||o.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;f();const l=o.attributes,c=a.getAttributes(),h=s.defaultAttributeValues;for(const e in c){const s=c[e];if(s.location>=0){let a=l[e];if(void 0===a&&("instanceMatrix"===e&&r.instanceMatrix&&(a=r.instanceMatrix),"instanceColor"===e&&r.instanceColor&&(a=r.instanceColor)),void 0!==a){const e=a.normalized,l=a.itemSize,c=n.get(a);if(void 0===c)continue;const h=c.buffer,u=c.type,d=c.bytesPerElement,p=!0===i.isWebGL2&&(u===t.INT||u===t.UNSIGNED_INT||a.gpuType===it);if(a.isInterleavedBufferAttribute){const n=a.data,i=n.stride,c=a.offset;if(n.isInstancedInterleavedBuffer){for(let t=0;t<s.locationSize;t++)g(s.location+t,n.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let t=0;t<s.locationSize;t++)m(s.location+t);t.bindBuffer(t.ARRAY_BUFFER,h);for(let t=0;t<s.locationSize;t++)_(s.location+t,l/s.locationSize,u,e,i*d,(c+l/s.locationSize*t)*d,p)}else{if(a.isInstancedBufferAttribute){for(let t=0;t<s.locationSize;t++)g(s.location+t,a.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=a.meshPerAttribute*a.count)}else for(let t=0;t<s.locationSize;t++)m(s.location+t);t.bindBuffer(t.ARRAY_BUFFER,h);for(let t=0;t<s.locationSize;t++)_(s.location+t,l/s.locationSize,u,e,l*d,l/s.locationSize*t*d,p)}}else if(void 0!==h){const n=h[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(s.location,n);break;case 3:t.vertexAttrib3fv(s.location,n);break;case 4:t.vertexAttrib4fv(s.location,n);break;default:t.vertexAttrib1fv(s.location,n)}}}}v()}(r,l,d,y),null!==x&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.get(x).buffer))},reset:y,resetDefaultState:x,dispose:function(){y();for(const t in o){const e=o[t];for(const t in e){const n=e[t];for(const t in n)d(n[t].object),delete n[t];delete e[t]}delete o[t]}},releaseStatesOfGeometry:function(t){if(void 0===o[t.id])return;const e=o[t.id];for(const n in e){const t=e[n];for(const e in t)d(t[e].object),delete t[e];delete e[n]}delete o[t.id]},releaseStatesOfProgram:function(t){for(const e in o){const n=o[e];if(void 0===n[t.id])continue;const i=n[t.id];for(const t in i)d(i[t].object),delete i[t];delete n[t.id]}},initAttributes:f,enableAttribute:m,disableUnusedAttributes:v}}function Br(t,e,n,i){const r=i.isWebGL2;let s;this.setMode=function(t){s=t},this.render=function(e,i){t.drawArrays(s,e,i),n.update(i,s,1)},this.renderInstances=function(i,a,o){if(0===o)return;let l,c;if(r)l=t,c="drawArraysInstanced";else if(l=e.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return;l[c](s,i,a,o),n.update(a,s,o)}}function zr(t,e,n){let i;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const s="undefined"!=typeof WebGL2RenderingContext&&"WebGL2RenderingContext"===t.constructor.name;let a=void 0!==n.precision?n.precision:"highp";const o=r(a);o!==a&&(a=o);const l=s||e.has("WEBGL_draw_buffers"),c=!0===n.logarithmicDepthBuffer,h=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=t.getParameter(t.MAX_TEXTURE_SIZE),p=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),f=t.getParameter(t.MAX_VERTEX_ATTRIBS),m=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),g=t.getParameter(t.MAX_VARYING_VECTORS),v=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),_=u>0,y=s||e.has("OES_texture_float");return{isWebGL2:s,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:r,precision:a,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:_,floatFragmentTextures:y,floatVertexTextures:_&&y,maxSamples:s?t.getParameter(t.MAX_SAMPLES):0}}function kr(t){const e=this;let n=null,i=0,r=!1,s=!1;const a=new Tr,o=new Re,l={value:null,needsUpdate:!1};function c(t,n,i,r){const s=null!==t?t.length:0;let c=null;if(0!==s){if(c=l.value,!0!==r||null===c){const e=i+4*s,r=n.matrixWorldInverse;o.getNormalMatrix(r),(null===c||c.length<e)&&(c=new Float32Array(e));for(let n=0,l=i;n!==s;++n,l+=4)a.copy(t[n]).applyMatrix4(r,o),a.normal.toArray(c,l),c[l+3]=a.constant}l.value=c,l.needsUpdate=!0}return e.numPlanes=s,e.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e){const n=0!==t.length||e||0!==i||r;return r=e,i=t.length,n},this.beginShadows=function(){s=!0,c(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(t,e){n=c(t,e,0)},this.setState=function(a,o,h){const u=a.clippingPlanes,d=a.clipIntersection,p=a.clipShadows,f=t.get(a);if(!r||null===u||0===u.length||s&&!p)s?c(null):function(){l.value!==n&&(l.value=n,l.needsUpdate=i>0);e.numPlanes=i,e.numIntersection=0}();else{const t=s?0:i,e=4*t;let r=f.clippingState||null;l.value=r,r=c(u,o,e,h);for(let i=0;i!==e;++i)r[i]=n[i];f.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Gr(t){let e=new WeakMap;function n(t,e){return e===H?t.mapping=G:e===W&&(t.mapping=V),t}function i(t){const n=t.target;n.removeEventListener("dispose",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){const s=r.mapping;if(s===H||s===W){if(e.has(r)){return n(e.get(r).texture,r.mapping)}{const s=r.image;if(s&&s.height>0){const a=new Mr(s.height/2);return a.fromEquirectangularTexture(t,r),e.set(r,a),r.addEventListener("dispose",i),n(a.texture,r.mapping)}return null}}}return r},dispose:function(){e=new WeakMap}}}let Vr=class extends gr{constructor(t=-1,e=1,n=1,i=-1,r=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=s,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,s=n+t,a=i+e,o=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,s=r+t*this.view.width,a-=e*this.view.offsetY,o=a-e*this.view.height}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}};const Hr=[.125,.215,.35,.446,.526,.582],Wr=20,jr=new Vr,Xr=new bi;let qr=null;const Yr=(1+Math.sqrt(5))/2,Zr=1/Yr,Jr=[new nn(1,1,1),new nn(-1,1,1),new nn(1,1,-1),new nn(-1,1,-1),new nn(0,Yr,Zr),new nn(0,Yr,-Zr),new nn(Zr,0,Yr),new nn(-Zr,0,Yr),new nn(Yr,Zr,0),new nn(-Yr,Zr,0)];class Kr{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){qr=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=es(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=ts(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(qr),t.scissorTest=!1,Qr(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===G||t.mapping===V?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),qr=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:$,minFilter:$,generateMipmaps:!1,type:at,format:ht,colorSpace:re,depthBuffer:!1},i=$r(t,e,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=$r(t,e,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(t){const e=[],n=[],i=[];let r=t;const s=t-4+1+Hr.length;for(let a=0;a<s;a++){const s=Math.pow(2,r);n.push(s);let o=1/s;a>t-4?o=Hr[a-t+4-1]:0===a&&(o=0),i.push(o);const l=1/(s-2),c=-l,h=1+l,u=[c,c,h,c,h,h,c,c,h,h,c,h],d=6,p=6,f=3,m=2,g=1,v=new Float32Array(f*p*d),_=new Float32Array(m*p*d),y=new Float32Array(g*p*d);for(let t=0;t<d;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];v.set(i,f*p*t),_.set(u,m*p*t);const r=[t,t,t,t,t,t];y.set(r,g*p*t)}const x=new Wi;x.setAttribute("position",new Ii(v,f)),x.setAttribute("uv",new Ii(_,m)),x.setAttribute("faceIndex",new Ii(y,g)),e.push(x),r>4&&r--}return{lodPlanes:e,sizeLods:n,sigmas:i}}(i)),this._blurMaterial=function(t,e,n){const i=new Float32Array(Wr),r=new nn(0,1,0),s=new mr({name:"SphericalGaussianBlur",defines:{n:Wr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:ns(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1});return s}(i,t,e)}return i}_compileMaterial(t){const e=new lr(this._lodPlanes[0],t);this._renderer.compile(e,jr)}_sceneToCubeUV(t,e,n,i){const r=new vr(90,1,e,n),s=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,c=o.toneMapping;o.getClearColor(Xr),o.toneMapping=D,o.autoClear=!1;const h=new Ti({name:"PMREM.Background",side:R,depthWrite:!1,depthTest:!1}),u=new lr(new hr,h);let d=!1;const p=t.background;p?p.isColor&&(h.color.copy(p),t.background=null,d=!0):(h.color.copy(Xr),d=!0);for(let f=0;f<6;f++){const e=f%3;0===e?(r.up.set(0,s[f],0),r.lookAt(a[f],0,0)):1===e?(r.up.set(0,0,s[f]),r.lookAt(0,a[f],0)):(r.up.set(0,s[f],0),r.lookAt(0,0,a[f]));const n=this._cubeSize;Qr(i,e*n,f>2?n:0,n,n),o.setRenderTarget(i),d&&o.render(u,r),o.render(t,r)}u.geometry.dispose(),u.material.dispose(),o.toneMapping=c,o.autoClear=l,t.background=p}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===G||t.mapping===V;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=es()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=ts());const r=i?this._cubemapMaterial:this._equirectMaterial,s=new lr(this._lodPlanes[0],r);r.uniforms.envMap.value=t;const a=this._cubeSize;Qr(e,0,0,3*a,2*a),n.setRenderTarget(e),n.render(s,jr)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const e=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),n=Jr[(i-1)%Jr.length];this._blur(t,i-1,i,e,n)}e.autoClear=n}_blur(t,e,n,i,r){const s=this._pingPongRenderTarget;this._halfBlur(t,s,e,n,i,"latitudinal",r),this._halfBlur(s,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,s,a){const o=this._renderer,l=this._blurMaterial,c=new lr(this._lodPlanes[i],l),h=l.uniforms,u=this._sizeLods[n]-1,d=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,p=r/d,f=isFinite(r)?1+Math.floor(3*p):Wr,m=[];let g=0;for(let y=0;y<Wr;++y){const t=y/p,e=Math.exp(-t*t/2);m.push(e),0===y?g+=e:y<f&&(g+=2*e)}for(let y=0;y<m.length;y++)m[y]=m[y]/g;h.envMap.value=t.texture,h.samples.value=f,h.weights.value=m,h.latitudinal.value="latitudinal"===s,a&&(h.poleAxis.value=a);const{_lodMax:v}=this;h.dTheta.value=d,h.mipInt.value=v-n;const _=this._sizeLods[i];Qr(e,3*_*(i>v-4?i-v+4:0),4*(this._cubeSize-_),3*_,2*_),o.setRenderTarget(e),o.render(c,jr)}}function $r(t,e,n){const i=new $e(t,e,n);return i.texture.mapping=j,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Qr(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function ts(){return new mr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:ns(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function es(){return new mr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:ns(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function ns(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function is(t){let e=new WeakMap,n=null;function i(t){const n=t.target;n.removeEventListener("dispose",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const s=r.mapping,a=s===H||s===W,o=s===G||s===V;if(a||o){if(r.isRenderTargetTexture&&!0===r.needsPMREMUpdate){r.needsPMREMUpdate=!1;let i=e.get(r);return null===n&&(n=new Kr(t)),i=a?n.fromEquirectangular(r,i):n.fromCubemap(r,i),e.set(r,i),i.texture}if(e.has(r))return e.get(r).texture;{const s=r.image;if(a&&s&&s.height>0||o&&s&&function(t){let e=0;const n=6;for(let i=0;i<n;i++)void 0!==t[i]&&e++;return e===n}(s)){null===n&&(n=new Kr(t));const s=a?n.fromEquirectangular(r):n.fromCubemap(r);return e.set(r,s),r.addEventListener("dispose",i),s.texture}return null}}}return r},dispose:function(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function rs(t){const e={};function n(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(t){const e=n(t);return e}}}function ss(t,e,n,i){const r={},s=new WeakMap;function a(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const n in o.attributes)e.remove(o.attributes[n]);for(const n in o.morphAttributes){const t=o.morphAttributes[n];for(let n=0,i=t.length;n<i;n++)e.remove(t[n])}o.removeEventListener("dispose",a),delete r[o.id];const l=s.get(o);l&&(e.remove(l),s.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],i=t.index,r=t.attributes.position;let a=0;if(null!==i){const t=i.array;a=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],r=t[e+1],s=t[e+2];n.push(i,r,r,s,s,i)}}else{const t=r.array;a=r.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,r=e+2;n.push(t,i,i,r,r,t)}}const o=new(Ue(n)?Oi:Di)(n,1);o.version=a;const l=s.get(t);l&&e.remove(l),s.set(t,o)}return{get:function(t,e){return!0===r[e.id]||(e.addEventListener("dispose",a),r[e.id]=!0,n.memory.geometries++),e},update:function(n){const i=n.attributes;for(const s in i)e.update(i[s],t.ARRAY_BUFFER);const r=n.morphAttributes;for(const s in r){const n=r[s];for(let i=0,r=n.length;i<r;i++)e.update(n[i],t.ARRAY_BUFFER)}},getWireframeAttribute:function(t){const e=s.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return s.get(t)}}}function as(t,e,n,i){const r=i.isWebGL2;let s,a,o;this.setMode=function(t){s=t},this.setIndex=function(t){a=t.type,o=t.bytesPerElement},this.render=function(e,i){t.drawElements(s,i,a,e*o),n.update(i,s,1)},this.renderInstances=function(i,l,c){if(0===c)return;let h,u;if(r)h=t,u="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return;h[u](s,l,a,i*o,c),n.update(l,s,c)}}function os(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(n,i,r){switch(e.calls++,i){case t.TRIANGLES:e.triangles+=r*(n/3);break;case t.LINES:e.lines+=r*(n/2);break;case t.LINE_STRIP:e.lines+=r*(n-1);break;case t.LINE_LOOP:e.lines+=r*n;break;case t.POINTS:e.points+=r*n}}}}function ls(t,e){return t[0]-e[0]}function cs(t,e){return Math.abs(e[1])-Math.abs(t[1])}function hs(t,e,n){const i={},r=new Float32Array(8),s=new WeakMap,a=new Ke,o=[];for(let l=0;l<8;l++)o[l]=[l,0];return{update:function(l,c,h){const u=l.morphTargetInfluences;if(!0===e.isWebGL2){const i=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,r=void 0!==i?i.length:0;let o=s.get(c);if(void 0===o||o.count!==r){let t=function(){v.dispose(),s.delete(c),c.removeEventListener("dispose",t)};void 0!==o&&o.texture.dispose();const n=void 0!==c.morphAttributes.position,i=void 0!==c.morphAttributes.normal,l=void 0!==c.morphAttributes.color,h=c.morphAttributes.position||[],u=c.morphAttributes.normal||[],d=c.morphAttributes.color||[];let p=0;!0===n&&(p=1),!0===i&&(p=2),!0===l&&(p=3);let f=c.attributes.position.count*p,m=1;f>e.maxTextureSize&&(m=Math.ceil(f/e.maxTextureSize),f=e.maxTextureSize);const g=new Float32Array(f*m*4*r),v=new Qe(g,f,m,r);v.type=st,v.needsUpdate=!0;const _=4*p;for(let e=0;e<r;e++){const t=h[e],r=u[e],s=d[e],o=f*m*4*e;for(let e=0;e<t.count;e++){const c=e*_;!0===n&&(a.fromBufferAttribute(t,e),g[o+c+0]=a.x,g[o+c+1]=a.y,g[o+c+2]=a.z,g[o+c+3]=0),!0===i&&(a.fromBufferAttribute(r,e),g[o+c+4]=a.x,g[o+c+5]=a.y,g[o+c+6]=a.z,g[o+c+7]=0),!0===l&&(a.fromBufferAttribute(s,e),g[o+c+8]=a.x,g[o+c+9]=a.y,g[o+c+10]=a.z,g[o+c+11]=4===s.itemSize?a.w:1)}}o={count:r,texture:v,size:new Ce(f,m)},s.set(c,o),c.addEventListener("dispose",t)}let l=0;for(let t=0;t<u.length;t++)l+=u[t];const d=c.morphTargetsRelative?1:1-l;h.getUniforms().setValue(t,"morphTargetBaseInfluence",d),h.getUniforms().setValue(t,"morphTargetInfluences",u),h.getUniforms().setValue(t,"morphTargetsTexture",o.texture,n),h.getUniforms().setValue(t,"morphTargetsTextureSize",o.size)}else{const e=void 0===u?0:u.length;let n=i[c.id];if(void 0===n||n.length!==e){n=[];for(let t=0;t<e;t++)n[t]=[t,0];i[c.id]=n}for(let t=0;t<e;t++){const e=n[t];e[0]=t,e[1]=u[t]}n.sort(cs);for(let t=0;t<8;t++)t<e&&n[t][1]?(o[t][0]=n[t][0],o[t][1]=n[t][1]):(o[t][0]=Number.MAX_SAFE_INTEGER,o[t][1]=0);o.sort(ls);const s=c.morphAttributes.position,a=c.morphAttributes.normal;let l=0;for(let t=0;t<8;t++){const e=o[t],n=e[0],i=e[1];n!==Number.MAX_SAFE_INTEGER&&i?(s&&c.getAttribute("morphTarget"+t)!==s[n]&&c.setAttribute("morphTarget"+t,s[n]),a&&c.getAttribute("morphNormal"+t)!==a[n]&&c.setAttribute("morphNormal"+t,a[n]),r[t]=i,l+=i):(s&&!0===c.hasAttribute("morphTarget"+t)&&c.deleteAttribute("morphTarget"+t),a&&!0===c.hasAttribute("morphNormal"+t)&&c.deleteAttribute("morphNormal"+t),r[t]=0)}const d=c.morphTargetsRelative?1:1-l;h.getUniforms().setValue(t,"morphTargetBaseInfluence",d),h.getUniforms().setValue(t,"morphTargetInfluences",r)}}}}function us(t,e,n,i){let r=new WeakMap;function s(t){const e=t.target;e.removeEventListener("dispose",s),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(a){const o=i.render.frame,l=a.geometry,c=e.get(a,l);return r.get(c)!==o&&(e.update(c),r.set(c,o)),a.isInstancedMesh&&(!1===a.hasEventListener("dispose",s)&&a.addEventListener("dispose",s),n.update(a.instanceMatrix,t.ARRAY_BUFFER),null!==a.instanceColor&&n.update(a.instanceColor,t.ARRAY_BUFFER)),c},dispose:function(){r=new WeakMap}}}const ds=new Je,ps=new Qe,fs=new tn,ms=new xr,gs=[],vs=[],_s=new Float32Array(16),ys=new Float32Array(9),xs=new Float32Array(4);function Ms(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let s=gs[r];if(void 0===s&&(s=new Float32Array(r),gs[r]=s),0!==e){i.toArray(s,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(s,r)}return s}function Ss(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function bs(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function ws(t,e){let n=vs[e];void 0===n&&(n=new Int32Array(e),vs[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function Ts(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function Es(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Ss(n,e))return;t.uniform2fv(this.addr,e),bs(n,e)}}function As(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Ss(n,e))return;t.uniform3fv(this.addr,e),bs(n,e)}}function Cs(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Ss(n,e))return;t.uniform4fv(this.addr,e),bs(n,e)}}function Rs(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Ss(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),bs(n,e)}else{if(Ss(n,i))return;xs.set(i),t.uniformMatrix2fv(this.addr,!1,xs),bs(n,i)}}function Ps(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Ss(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),bs(n,e)}else{if(Ss(n,i))return;ys.set(i),t.uniformMatrix3fv(this.addr,!1,ys),bs(n,i)}}function Us(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(Ss(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),bs(n,e)}else{if(Ss(n,i))return;_s.set(i),t.uniformMatrix4fv(this.addr,!1,_s),bs(n,i)}}function Ls(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Is(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Ss(n,e))return;t.uniform2iv(this.addr,e),bs(n,e)}}function Ds(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(Ss(n,e))return;t.uniform3iv(this.addr,e),bs(n,e)}}function Os(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Ss(n,e))return;t.uniform4iv(this.addr,e),bs(n,e)}}function Ns(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Fs(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Ss(n,e))return;t.uniform2uiv(this.addr,e),bs(n,e)}}function Bs(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(Ss(n,e))return;t.uniform3uiv(this.addr,e),bs(n,e)}}function zs(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Ss(n,e))return;t.uniform4uiv(this.addr,e),bs(n,e)}}function ks(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2D(e||ds,r)}function Gs(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||fs,r)}function Vs(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(e||ms,r)}function Hs(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||ps,r)}function Ws(t,e){t.uniform1fv(this.addr,e)}function js(t,e){const n=Ms(e,this.size,2);t.uniform2fv(this.addr,n)}function Xs(t,e){const n=Ms(e,this.size,3);t.uniform3fv(this.addr,n)}function qs(t,e){const n=Ms(e,this.size,4);t.uniform4fv(this.addr,n)}function Ys(t,e){const n=Ms(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Zs(t,e){const n=Ms(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Js(t,e){const n=Ms(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Ks(t,e){t.uniform1iv(this.addr,e)}function $s(t,e){t.uniform2iv(this.addr,e)}function Qs(t,e){t.uniform3iv(this.addr,e)}function ta(t,e){t.uniform4iv(this.addr,e)}function ea(t,e){t.uniform1uiv(this.addr,e)}function na(t,e){t.uniform2uiv(this.addr,e)}function ia(t,e){t.uniform3uiv(this.addr,e)}function ra(t,e){t.uniform4uiv(this.addr,e)}function sa(t,e,n){const i=this.cache,r=e.length,s=ws(n,r);Ss(i,s)||(t.uniform1iv(this.addr,s),bs(i,s));for(let a=0;a!==r;++a)n.setTexture2D(e[a]||ds,s[a])}function aa(t,e,n){const i=this.cache,r=e.length,s=ws(n,r);Ss(i,s)||(t.uniform1iv(this.addr,s),bs(i,s));for(let a=0;a!==r;++a)n.setTexture3D(e[a]||fs,s[a])}function oa(t,e,n){const i=this.cache,r=e.length,s=ws(n,r);Ss(i,s)||(t.uniform1iv(this.addr,s),bs(i,s));for(let a=0;a!==r;++a)n.setTextureCube(e[a]||ms,s[a])}function la(t,e,n){const i=this.cache,r=e.length,s=ws(n,r);Ss(i,s)||(t.uniform1iv(this.addr,s),bs(i,s));for(let a=0;a!==r;++a)n.setTexture2DArray(e[a]||ps,s[a])}class ca{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return Ts;case 35664:return Es;case 35665:return As;case 35666:return Cs;case 35674:return Rs;case 35675:return Ps;case 35676:return Us;case 5124:case 35670:return Ls;case 35667:case 35671:return Is;case 35668:case 35672:return Ds;case 35669:case 35673:return Os;case 5125:return Ns;case 36294:return Fs;case 36295:return Bs;case 36296:return zs;case 35678:case 36198:case 36298:case 36306:case 35682:return ks;case 35679:case 36299:case 36307:return Gs;case 35680:case 36300:case 36308:case 36293:return Vs;case 36289:case 36303:case 36311:case 36292:return Hs}}(e.type)}}class ha{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Ws;case 35664:return js;case 35665:return Xs;case 35666:return qs;case 35674:return Ys;case 35675:return Zs;case 35676:return Js;case 5124:case 35670:return Ks;case 35667:case 35671:return $s;case 35668:case 35672:return Qs;case 35669:case 35673:return ta;case 5125:return ea;case 36294:return na;case 36295:return ia;case 36296:return ra;case 35678:case 36198:case 36298:case 36306:case 35682:return sa;case 35679:case 36299:case 36307:return aa;case 35680:case 36300:case 36308:case 36293:return oa;case 36289:case 36303:case 36311:case 36292:return la}}(e.type)}}class ua{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const s=i[r];s.setValue(t,e[s.id],n)}}}const da=/(\w+)(\])?(\[|\.)?/g;function pa(t,e){t.seq.push(e),t.map[e.id]=e}function fa(t,e,n){const i=t.name,r=i.length;for(da.lastIndex=0;;){const s=da.exec(i),a=da.lastIndex;let o=s[1];const l="]"===s[2],c=s[3];if(l&&(o|=0),void 0===c||"["===c&&a+2===r){pa(n,void 0===c?new ca(o,t,e):new ha(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new ua(o),pa(n,t)),n=t}}}class ma{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);fa(n,t.getUniformLocation(e,n.name),this)}}setValue(t,e,n,i){const r=this.map[e];void 0!==r&&r.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let r=0,s=e.length;r!==s;++r){const s=e[r],a=n[s.id];!1!==a.needsUpdate&&s.setValue(t,a.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const r=t[i];r.id in e&&n.push(r)}return n}}function ga(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}let va=0;function _a(t,e,n){const i=t.getShaderParameter(e,t.COMPILE_STATUS),r=t.getShaderInfoLog(e).trim();if(i&&""===r)return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const i=parseInt(s[1]);return n.toUpperCase()+"\n\n"+r+"\n\n"+function(t,e){const n=t.split("\n"),i=[],r=Math.max(e-6,0),s=Math.min(e+6,n.length);for(let a=r;a<s;a++){const t=a+1;i.push(`${t===e?">":" "} ${t}: ${n[a]}`)}return i.join("\n")}(t.getShaderSource(e),i)}return r}function ya(t,e){const n=function(t){switch(t){case re:return["Linear","( value )"];case ie:return["sRGB","( value )"];default:return["Linear","( value )"]}}(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function xa(t,e){let n;switch(e){case O:n="Linear";break;case N:n="Reinhard";break;case F:n="OptimizedCineon";break;case B:n="ACESFilmic";break;case z:n="Custom";break;default:n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Ma(t){return""!==t}function Sa(t,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function ba(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const wa=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ta(t){return t.replace(wa,Ea)}function Ea(t,e){const n=Lr[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return Ta(n)}const Aa=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ca(t){return t.replace(Aa,Ra)}function Ra(t,e,n,i){let r="";for(let s=parseInt(e);s<parseInt(n);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function Pa(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Ua(t,e,n,i){const r=t.getContext(),s=n.defines;let a=n.vertexShader,o=n.fragmentShader;const l=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===T?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===E?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===A&&(e="SHADOWMAP_TYPE_VSM"),e}(n),c=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case G:case V:e="ENVMAP_TYPE_CUBE";break;case j:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),h=function(t){let e="ENVMAP_MODE_REFLECTION";t.envMap&&t.envMapMode===V&&(e="ENVMAP_MODE_REFRACTION");return e}(n),u=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case U:e="ENVMAP_BLENDING_MULTIPLY";break;case L:e="ENVMAP_BLENDING_MIX";break;case I:e="ENVMAP_BLENDING_ADD"}return e}(n),d=function(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:i,maxMip:n}}(n),p=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUVHeight||t.bumpMap||t.normalMapTangentSpace||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ma).join("\n")}(n),f=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(s),m=r.createProgram();let g,v,_=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f].filter(Ma).join("\n"),g.length>0&&(g+="\n"),v=[p,"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f].filter(Ma).join("\n"),v.length>0&&(v+="\n")):(g=[Pa(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ma).join("\n"),v=[p,Pa(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==D?"#define TONE_MAPPING":"",n.toneMapping!==D?Lr.tonemapping_pars_fragment:"",n.toneMapping!==D?xa("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Lr.encodings_pars_fragment,ya("linearToOutputTexel",n.outputColorSpace),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Ma).join("\n")),a=Ta(a),a=Sa(a,n),a=ba(a,n),o=Ta(o),o=Sa(o,n),o=ba(o,n),a=Ca(a),o=Ca(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(_="#version 300 es\n",g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",n.glslVersion===ce?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===ce?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const y=_+g+a,x=_+v+o,M=ga(r,r.VERTEX_SHADER,y),S=ga(r,r.FRAGMENT_SHADER,x);if(r.attachShader(m,M),r.attachShader(m,S),void 0!==n.index0AttributeName?r.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(m,0,"position"),r.linkProgram(m),t.debug.checkShaderErrors){const e=r.getProgramInfoLog(m).trim(),n=r.getShaderInfoLog(M).trim(),i=r.getShaderInfoLog(S).trim();let s=!0,a=!0;if(!1===r.getProgramParameter(m,r.LINK_STATUS))if(s=!1,"function"==typeof t.debug.onShaderError)t.debug.onShaderError(r,m,M,S);else{_a(r,M,"vertex"),_a(r,S,"fragment")}else""!==e||""!==n&&""!==i||(a=!1);a&&(this.diagnostics={runnable:s,programLog:e,vertexShader:{log:n,prefix:g},fragmentShader:{log:i,prefix:v}})}let b,w;return r.deleteShader(M),r.deleteShader(S),this.getUniforms=function(){return void 0===b&&(b=new ma(r,m)),b},this.getAttributes=function(){return void 0===w&&(w=function(t,e){const n={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const i=t.getActiveAttrib(e,r),s=i.name;let a=1;i.type===t.FLOAT_MAT2&&(a=2),i.type===t.FLOAT_MAT3&&(a=3),i.type===t.FLOAT_MAT4&&(a=4),n[s]={type:i.type,location:t.getAttribLocation(e,s),locationSize:a}}return n}(r,m)),w},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(m),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=va++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=M,this.fragmentShader=S,this}let La=0;class Ia{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),s=this._getShaderCacheForMaterial(t);return!1===s.has(i)&&(s.add(i),i.usedTimes++),!1===s.has(r)&&(s.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,0===n.usedTimes&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return void 0===n&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return void 0===n&&(n=new Da(t),e.set(t,n)),n}}class Da{constructor(t){this.id=La++,this.code=t,this.usedTimes=0}}function Oa(t,e,n,i,r,s,a){const o=new Wn,l=new Ia,c=[],h=r.isWebGL2,u=r.logarithmicDepthBuffer,d=r.vertexTextures;let p=r.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(t){return 0===t?"uv":`uv${t}`}return{getParameters:function(s,o,c,g,v){const _=g.fog,y=v.geometry,x=s.isMeshStandardMaterial?g.environment:null,M=(s.isMeshStandardMaterial?n:e).get(s.envMap||x),S=M&&M.mapping===j?M.image.height:null,b=f[s.type];null!==s.precision&&(p=r.getMaxPrecision(s.precision),s.precision);const w=y.morphAttributes.position||y.morphAttributes.normal||y.morphAttributes.color,T=void 0!==w?w.length:0;let E,A,C,P,U=0;if(void 0!==y.morphAttributes.position&&(U=1),void 0!==y.morphAttributes.normal&&(U=2),void 0!==y.morphAttributes.color&&(U=3),b){const t=Dr[b];E=t.vertexShader,A=t.fragmentShader}else E=s.vertexShader,A=s.fragmentShader,l.update(s),C=l.getVertexShaderID(s),P=l.getFragmentShaderID(s);const L=t.getRenderTarget(),I=!0===v.isInstancedMesh,O=!!s.map,N=!!s.matcap,F=!!M,B=!!s.aoMap,z=!!s.lightMap,k=!!s.bumpMap,G=!!s.normalMap,V=!!s.displacementMap,H=!!s.emissiveMap,W=!!s.metalnessMap,X=!!s.roughnessMap,q=s.anisotropy>0,Y=s.clearcoat>0,Z=s.iridescence>0,J=s.sheen>0,K=s.transmission>0,$=q&&!!s.anisotropyMap,Q=Y&&!!s.clearcoatMap,tt=Y&&!!s.clearcoatNormalMap,et=Y&&!!s.clearcoatRoughnessMap,nt=Z&&!!s.iridescenceMap,it=Z&&!!s.iridescenceThicknessMap,rt=J&&!!s.sheenColorMap,st=J&&!!s.sheenRoughnessMap,at=!!s.specularMap,ot=!!s.specularColorMap,lt=!!s.specularIntensityMap,ct=K&&!!s.transmissionMap,ht=K&&!!s.thicknessMap,ut=!!s.gradientMap,dt=!!s.alphaMap,pt=s.alphaTest>0,ft=!!s.extensions,mt=!!y.attributes.uv1,gt=!!y.attributes.uv2,vt=!!y.attributes.uv3;return{isWebGL2:h,shaderID:b,shaderType:s.type,shaderName:s.name,vertexShader:E,fragmentShader:A,defines:s.defines,customVertexShaderID:C,customFragmentShaderID:P,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:p,instancing:I,instancingColor:I&&null!==v.instanceColor,supportsVertexTextures:d,outputColorSpace:null===L?t.outputColorSpace:!0===L.isXRRenderTarget?L.texture.colorSpace:re,map:O,matcap:N,envMap:F,envMapMode:F&&M.mapping,envMapCubeUVHeight:S,aoMap:B,lightMap:z,bumpMap:k,normalMap:G,displacementMap:d&&V,emissiveMap:H,normalMapObjectSpace:G&&1===s.normalMapType,normalMapTangentSpace:G&&0===s.normalMapType,metalnessMap:W,roughnessMap:X,anisotropy:q,anisotropyMap:$,clearcoat:Y,clearcoatMap:Q,clearcoatNormalMap:tt,clearcoatRoughnessMap:et,iridescence:Z,iridescenceMap:nt,iridescenceThicknessMap:it,sheen:J,sheenColorMap:rt,sheenRoughnessMap:st,specularMap:at,specularColorMap:ot,specularIntensityMap:lt,transmission:K,transmissionMap:ct,thicknessMap:ht,gradientMap:ut,opaque:!1===s.transparent&&1===s.blending,alphaMap:dt,alphaTest:pt,combine:s.combine,mapUv:O&&m(s.map.channel),aoMapUv:B&&m(s.aoMap.channel),lightMapUv:z&&m(s.lightMap.channel),bumpMapUv:k&&m(s.bumpMap.channel),normalMapUv:G&&m(s.normalMap.channel),displacementMapUv:V&&m(s.displacementMap.channel),emissiveMapUv:H&&m(s.emissiveMap.channel),metalnessMapUv:W&&m(s.metalnessMap.channel),roughnessMapUv:X&&m(s.roughnessMap.channel),anisotropyMapUv:$&&m(s.anisotropyMap.channel),clearcoatMapUv:Q&&m(s.clearcoatMap.channel),clearcoatNormalMapUv:tt&&m(s.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:et&&m(s.clearcoatRoughnessMap.channel),iridescenceMapUv:nt&&m(s.iridescenceMap.channel),iridescenceThicknessMapUv:it&&m(s.iridescenceThicknessMap.channel),sheenColorMapUv:rt&&m(s.sheenColorMap.channel),sheenRoughnessMapUv:st&&m(s.sheenRoughnessMap.channel),specularMapUv:at&&m(s.specularMap.channel),specularColorMapUv:ot&&m(s.specularColorMap.channel),specularIntensityMapUv:lt&&m(s.specularIntensityMap.channel),transmissionMapUv:ct&&m(s.transmissionMap.channel),thicknessMapUv:ht&&m(s.thicknessMap.channel),alphaMapUv:dt&&m(s.alphaMap.channel),vertexTangents:!!y.attributes.tangent&&(G||q),vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!y.attributes.color&&4===y.attributes.color.itemSize,vertexUv1s:mt,vertexUv2s:gt,vertexUv3s:vt,pointsUvs:!0===v.isPoints&&!!y.attributes.uv&&(O||dt),fog:!!_,useFog:!0===s.fog,fogExp2:_&&_.isFogExp2,flatShading:!0===s.flatShading,sizeAttenuation:!0===s.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===v.isSkinnedMesh,morphTargets:void 0!==y.morphAttributes.position,morphNormals:void 0!==y.morphAttributes.normal,morphColors:void 0!==y.morphAttributes.color,morphTargetsCount:T,morphTextureStride:U,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:s.dithering,shadowMapEnabled:t.shadowMap.enabled&&c.length>0,shadowMapType:t.shadowMap.type,toneMapping:s.toneMapped?t.toneMapping:D,useLegacyLights:t.useLegacyLights,premultipliedAlpha:s.premultipliedAlpha,doubleSided:2===s.side,flipSided:s.side===R,useDepthPacking:s.depthPacking>=0,depthPacking:s.depthPacking||0,index0AttributeName:s.index0AttributeName,extensionDerivatives:ft&&!0===s.extensions.derivatives,extensionFragDepth:ft&&!0===s.extensions.fragDepth,extensionDrawBuffers:ft&&!0===s.extensions.drawBuffers,extensionShaderTextureLOD:ft&&!0===s.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||i.has("EXT_shader_texture_lod"),customProgramCacheKey:s.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.customVertexShaderID),n.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(!function(t,e){t.push(e.precision),t.push(e.outputColorSpace),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.mapUv),t.push(e.alphaMapUv),t.push(e.lightMapUv),t.push(e.aoMapUv),t.push(e.bumpMapUv),t.push(e.normalMapUv),t.push(e.displacementMapUv),t.push(e.emissiveMapUv),t.push(e.metalnessMapUv),t.push(e.roughnessMapUv),t.push(e.anisotropyMapUv),t.push(e.clearcoatMapUv),t.push(e.clearcoatNormalMapUv),t.push(e.clearcoatRoughnessMapUv),t.push(e.iridescenceMapUv),t.push(e.iridescenceThicknessMapUv),t.push(e.sheenColorMapUv),t.push(e.sheenRoughnessMapUv),t.push(e.specularMapUv),t.push(e.specularColorMapUv),t.push(e.specularIntensityMapUv),t.push(e.transmissionMapUv),t.push(e.thicknessMapUv),t.push(e.combine),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numSpotLightMaps),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.numSpotLightShadowsWithMaps),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}(n,e),function(t,e){o.disableAll(),e.isWebGL2&&o.enable(0);e.supportsVertexTextures&&o.enable(1);e.instancing&&o.enable(2);e.instancingColor&&o.enable(3);e.matcap&&o.enable(4);e.envMap&&o.enable(5);e.normalMapObjectSpace&&o.enable(6);e.normalMapTangentSpace&&o.enable(7);e.clearcoat&&o.enable(8);e.iridescence&&o.enable(9);e.alphaTest&&o.enable(10);e.vertexColors&&o.enable(11);e.vertexAlphas&&o.enable(12);e.vertexUv1s&&o.enable(13);e.vertexUv2s&&o.enable(14);e.vertexUv3s&&o.enable(15);e.vertexTangents&&o.enable(16);e.anisotropy&&o.enable(17);t.push(o.mask),o.disableAll(),e.fog&&o.enable(0);e.useFog&&o.enable(1);e.flatShading&&o.enable(2);e.logarithmicDepthBuffer&&o.enable(3);e.skinning&&o.enable(4);e.morphTargets&&o.enable(5);e.morphNormals&&o.enable(6);e.morphColors&&o.enable(7);e.premultipliedAlpha&&o.enable(8);e.shadowMapEnabled&&o.enable(9);e.useLegacyLights&&o.enable(10);e.doubleSided&&o.enable(11);e.flipSided&&o.enable(12);e.useDepthPacking&&o.enable(13);e.dithering&&o.enable(14);e.transmission&&o.enable(15);e.sheen&&o.enable(16);e.opaque&&o.enable(17);e.pointsUvs&&o.enable(18);t.push(o.mask)}(n,e),n.push(t.outputColorSpace)),n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=f[t.type];let n;if(e){const t=Dr[e];n=fr.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,r=c.length;t<r;t++){const e=c[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new Ua(t,n,e,s),c.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=c.indexOf(t);c[e]=c[c.length-1],c.pop(),t.destroy()}},releaseShaderCache:function(t){l.remove(t)},programs:c,dispose:function(){l.dispose()}}}function Na(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function Fa(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Ba(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function za(){const t=[];let e=0;const n=[],i=[],r=[];function s(n,i,r,s,a,o){let l=t[e];return void 0===l?(l={id:n.id,object:n,geometry:i,material:r,groupOrder:s,renderOrder:n.renderOrder,z:a,group:o},t[e]=l):(l.id=n.id,l.object=n,l.geometry=i,l.material=r,l.groupOrder=s,l.renderOrder=n.renderOrder,l.z=a,l.group=o),e++,l}return{opaque:n,transmissive:i,transparent:r,init:function(){e=0,n.length=0,i.length=0,r.length=0},push:function(t,e,a,o,l,c){const h=s(t,e,a,o,l,c);a.transmission>0?i.push(h):!0===a.transparent?r.push(h):n.push(h)},unshift:function(t,e,a,o,l,c){const h=s(t,e,a,o,l,c);a.transmission>0?i.unshift(h):!0===a.transparent?r.unshift(h):n.unshift(h)},finish:function(){for(let n=e,i=t.length;n<i;n++){const e=t[n];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){n.length>1&&n.sort(t||Fa),i.length>1&&i.sort(e||Ba),r.length>1&&r.sort(e||Ba)}}}function ka(){let t=new WeakMap;return{get:function(e,n){const i=t.get(e);let r;return void 0===i?(r=new za,t.set(e,[r])):n>=i.length?(r=new za,i.push(r)):r=i[n],r},dispose:function(){t=new WeakMap}}}function Ga(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new nn,color:new bi};break;case"SpotLight":n={position:new nn,direction:new nn,color:new bi,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new nn,color:new bi,distance:0,decay:0};break;case"HemisphereLight":n={direction:new nn,skyColor:new bi,groundColor:new bi};break;case"RectAreaLight":n={color:new bi,position:new nn,halfWidth:new nn,halfHeight:new nn}}return t[e.id]=n,n}}}let Va=0;function Ha(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function Wa(t,e){const n=new Ga,i=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ce};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ce,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let l=0;l<9;l++)r.probe.push(new nn);const s=new nn,a=new In,o=new In;return{setup:function(s,a){let o=0,l=0,c=0;for(let t=0;t<9;t++)r.probe[t].set(0,0,0);let h=0,u=0,d=0,p=0,f=0,m=0,g=0,v=0,_=0,y=0;s.sort(Ha);const x=!0===a?Math.PI:1;for(let t=0,e=s.length;t<e;t++){const e=s[t],a=e.color,M=e.intensity,S=e.distance,b=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)o+=a.r*M*x,l+=a.g*M*x,c+=a.b*M*x;else if(e.isLightProbe)for(let t=0;t<9;t++)r.probe[t].addScaledVector(e.sh.coefficients[t],M);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*x),e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,r.directionalShadow[h]=n,r.directionalShadowMap[h]=b,r.directionalShadowMatrix[h]=e.shadow.matrix,m++}r.directional[h]=t,h++}else if(e.isSpotLight){const t=n.get(e);t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(a).multiplyScalar(M*x),t.distance=S,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,r.spot[d]=t;const s=e.shadow;if(e.map&&(r.spotLightMap[_]=e.map,_++,s.updateMatrices(e),e.castShadow&&y++),r.spotLightMatrix[d]=s.matrix,e.castShadow){const t=i.get(e);t.shadowBias=s.bias,t.shadowNormalBias=s.normalBias,t.shadowRadius=s.radius,t.shadowMapSize=s.mapSize,r.spotShadow[d]=t,r.spotShadowMap[d]=b,v++}d++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(a).multiplyScalar(M),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),r.rectArea[p]=t,p++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*x),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,r.pointShadow[u]=n,r.pointShadowMap[u]=b,r.pointShadowMatrix[u]=e.shadow.matrix,g++}r.point[u]=t,u++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(M*x),t.groundColor.copy(e.groundColor).multiplyScalar(M*x),r.hemi[f]=t,f++}}p>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(r.rectAreaLTC1=Ir.LTC_FLOAT_1,r.rectAreaLTC2=Ir.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")&&(r.rectAreaLTC1=Ir.LTC_HALF_1,r.rectAreaLTC2=Ir.LTC_HALF_2)),r.ambient[0]=o,r.ambient[1]=l,r.ambient[2]=c;const M=r.hash;M.directionalLength===h&&M.pointLength===u&&M.spotLength===d&&M.rectAreaLength===p&&M.hemiLength===f&&M.numDirectionalShadows===m&&M.numPointShadows===g&&M.numSpotShadows===v&&M.numSpotMaps===_||(r.directional.length=h,r.spot.length=d,r.rectArea.length=p,r.point.length=u,r.hemi.length=f,r.directionalShadow.length=m,r.directionalShadowMap.length=m,r.pointShadow.length=g,r.pointShadowMap.length=g,r.spotShadow.length=v,r.spotShadowMap.length=v,r.directionalShadowMatrix.length=m,r.pointShadowMatrix.length=g,r.spotLightMatrix.length=v+_-y,r.spotLightMap.length=_,r.numSpotLightShadowsWithMaps=y,M.directionalLength=h,M.pointLength=u,M.spotLength=d,M.rectAreaLength=p,M.hemiLength=f,M.numDirectionalShadows=m,M.numPointShadows=g,M.numSpotShadows=v,M.numSpotMaps=_,r.version=Va++)},setupView:function(t,e){let n=0,i=0,l=0,c=0,h=0;const u=e.matrixWorldInverse;for(let d=0,p=t.length;d<p;d++){const e=t[d];if(e.isDirectionalLight){const t=r.directional[n];t.direction.setFromMatrixPosition(e.matrixWorld),s.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(u),n++}else if(e.isSpotLight){const t=r.spot[l];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(e.matrixWorld),s.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(u),l++}else if(e.isRectAreaLight){const t=r.rectArea[c];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(u),o.identity(),a.copy(e.matrixWorld),a.premultiply(u),o.extractRotation(a),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),c++}else if(e.isPointLight){const t=r.point[i];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(u),i++}else if(e.isHemisphereLight){const t=r.hemi[h];t.direction.setFromMatrixPosition(e.matrixWorld),t.direction.transformDirection(u),h++}}},state:r}}function ja(t,e){const n=new Wa(t,e),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(t){n.setup(i,t)},setupLightsView:function(t){n.setupView(i,t)},pushLight:function(t){i.push(t)},pushShadow:function(t){r.push(t)}}}function Xa(t,e){let n=new WeakMap;return{get:function(i,r=0){const s=n.get(i);let a;return void 0===s?(a=new ja(t,e),n.set(i,[a])):r>=s.length?(a=new ja(t,e),s.push(a)):a=s[r],a},dispose:function(){n=new WeakMap}}}class qa extends _i{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Ya extends _i{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function Za(t,e,n){let i=new Cr;const r=new Ce,s=new Ce,a=new Ke,o=new qa({depthPacking:ee}),l=new Ya,c={},h=n.maxTextureSize,u={[C]:R,[R]:C,2:2},d=new mr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Ce},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const f=new Wi;f.setAttribute("position",new Ii(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new lr(f,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=T;let v=this.type;function _(n,i){const s=e.update(m);d.defines.VSM_SAMPLES!==n.blurSamples&&(d.defines.VSM_SAMPLES=n.blurSamples,p.defines.VSM_SAMPLES=n.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new $e(r.x,r.y)),d.uniforms.shadow_pass.value=n.map.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,s,d,m,null),p.uniforms.shadow_pass.value=n.mapPass.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,s,p,m,null)}function y(e,n,i,r){let s=null;const a=!0===i.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(void 0!==a)s=a;else if(s=!0===i.isPointLight?l:o,t.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){const t=s.uuid,e=n.uuid;let i=c[t];void 0===i&&(i={},c[t]=i);let r=i[e];void 0===r&&(r=s.clone(),i[e]=r),s=r}if(s.visible=n.visible,s.wireframe=n.wireframe,s.side=r===A?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:u[n.side],s.alphaMap=n.alphaMap,s.alphaTest=n.alphaTest,s.map=n.map,s.clipShadows=n.clipShadows,s.clippingPlanes=n.clippingPlanes,s.clipIntersection=n.clipIntersection,s.displacementMap=n.displacementMap,s.displacementScale=n.displacementScale,s.displacementBias=n.displacementBias,s.wireframeLinewidth=n.wireframeLinewidth,s.linewidth=n.linewidth,!0===i.isPointLight&&!0===s.isMeshDistanceMaterial){t.properties.get(s).light=i}return s}function x(n,r,s,a,o){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===A)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);const i=e.update(n),r=n.material;if(Array.isArray(r)){const e=i.groups;for(let l=0,c=e.length;l<c;l++){const c=e[l],h=r[c.materialIndex];if(h&&h.visible){const e=y(n,h,a,o);t.renderBufferDirect(s,null,i,e,n,c)}}}else if(r.visible){const e=y(n,r,a,o);t.renderBufferDirect(s,null,i,e,n,null)}}const l=n.children;for(let t=0,e=l.length;t<e;t++)x(l[t],r,s,a,o)}this.render=function(e,n,o){if(!1===g.enabled)return;if(!1===g.autoUpdate&&!1===g.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),d=t.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);const p=v!==A&&this.type===A,f=v===A&&this.type!==A;for(let m=0,g=e.length;m<g;m++){const l=e[m],c=l.shadow;if(void 0===c)continue;if(!1===c.autoUpdate&&!1===c.needsUpdate)continue;r.copy(c.mapSize);const u=c.getFrameExtents();if(r.multiply(u),s.copy(c.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(s.x=Math.floor(h/u.x),r.x=s.x*u.x,c.mapSize.x=s.x),r.y>h&&(s.y=Math.floor(h/u.y),r.y=s.y*u.y,c.mapSize.y=s.y)),null===c.map||!0===p||!0===f){const t=this.type!==A?{minFilter:Z,magFilter:Z}:{};null!==c.map&&c.map.dispose(),c.map=new $e(r.x,r.y,t),c.map.texture.name=l.name+".shadowMap",c.camera.updateProjectionMatrix()}t.setRenderTarget(c.map),t.clear();const g=c.getViewportCount();for(let t=0;t<g;t++){const e=c.getViewport(t);a.set(s.x*e.x,s.y*e.y,s.x*e.z,s.y*e.w),d.viewport(a),c.updateMatrices(l,t),i=c.getFrustum(),x(n,o,c.camera,l,this.type)}!0!==c.isPointLightShadow&&this.type===A&&_(c,o),c.needsUpdate=!1}v=this.type,g.needsUpdate=!1,t.setRenderTarget(l,c,u)}}function Ja(t,e,n){const i=n.isWebGL2;const r=new function(){let e=!1;const n=new Ke;let i=null;const r=new Ke(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,s,a,o){!0===o&&(e*=a,i*=a,s*=a),n.set(e,i,s,a),!1===r.equals(n)&&(t.clearColor(e,i,s,a),r.copy(n))},reset:function(){e=!1,i=null,r.set(-1,0,0,0)}}},s=new function(){let e=!1,n=null,i=null,r=null;return{setTest:function(e){e?V(t.DEPTH_TEST):H(t.DEPTH_TEST)},setMask:function(i){n===i||e||(t.depthMask(i),n=i)},setFunc:function(e){if(i!==e){switch(e){case 0:t.depthFunc(t.NEVER);break;case 1:t.depthFunc(t.ALWAYS);break;case 2:t.depthFunc(t.LESS);break;case 3:default:t.depthFunc(t.LEQUAL);break;case 4:t.depthFunc(t.EQUAL);break;case 5:t.depthFunc(t.GEQUAL);break;case 6:t.depthFunc(t.GREATER);break;case 7:t.depthFunc(t.NOTEQUAL)}i=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,n=null,i=null,r=null}}},a=new function(){let e=!1,n=null,i=null,r=null,s=null,a=null,o=null,l=null,c=null;return{setTest:function(n){e||(n?V(t.STENCIL_TEST):H(t.STENCIL_TEST))},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,a){i===e&&r===n&&s===a||(t.stencilFunc(e,n,a),i=e,r=n,s=a)},setOp:function(e,n,i){a===e&&o===n&&l===i||(t.stencilOp(e,n,i),a=e,o=n,l=i)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,n=null,i=null,r=null,s=null,a=null,o=null,l=null,c=null}}},o=new WeakMap,l=new WeakMap;let c={},h={},u=new WeakMap,d=[],p=null,f=!1,m=null,g=null,v=null,_=null,y=null,x=null,M=null,S=!1,b=null,w=null,T=null,E=null,A=null;const C=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let U=!1,L=0;const I=t.getParameter(t.VERSION);-1!==I.indexOf("WebGL")?(L=parseFloat(/^WebGL (\d)/.exec(I)[1]),U=L>=1):-1!==I.indexOf("OpenGL ES")&&(L=parseFloat(/^OpenGL ES (\d)/.exec(I)[1]),U=L>=2);let D=null,O={};const N=t.getParameter(t.SCISSOR_BOX),F=t.getParameter(t.VIEWPORT),B=(new Ke).fromArray(N),z=(new Ke).fromArray(F);function k(e,n,r,s){const a=new Uint8Array(4),o=t.createTexture();t.bindTexture(e,o),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let l=0;l<r;l++)!i||e!==t.TEXTURE_3D&&e!==t.TEXTURE_2D_ARRAY?t.texImage2D(n+l,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,a):t.texImage3D(n,0,t.RGBA,1,1,s,0,t.RGBA,t.UNSIGNED_BYTE,a);return o}const G={};function V(e){!0!==c[e]&&(t.enable(e),c[e]=!0)}function H(e){!1!==c[e]&&(t.disable(e),c[e]=!1)}G[t.TEXTURE_2D]=k(t.TEXTURE_2D,t.TEXTURE_2D,1),G[t.TEXTURE_CUBE_MAP]=k(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),i&&(G[t.TEXTURE_2D_ARRAY]=k(t.TEXTURE_2D_ARRAY,t.TEXTURE_2D_ARRAY,1,1),G[t.TEXTURE_3D]=k(t.TEXTURE_3D,t.TEXTURE_3D,1,1)),r.setClear(0,0,0,1),s.setClear(1),a.setClear(0),V(t.DEPTH_TEST),s.setFunc(3),q(!1),Y(1),V(t.CULL_FACE),X(0);const W={[P]:t.FUNC_ADD,101:t.FUNC_SUBTRACT,102:t.FUNC_REVERSE_SUBTRACT};if(i)W[103]=t.MIN,W[104]=t.MAX;else{const t=e.get("EXT_blend_minmax");null!==t&&(W[103]=t.MIN_EXT,W[104]=t.MAX_EXT)}const j={200:t.ZERO,201:t.ONE,202:t.SRC_COLOR,204:t.SRC_ALPHA,210:t.SRC_ALPHA_SATURATE,208:t.DST_COLOR,206:t.DST_ALPHA,203:t.ONE_MINUS_SRC_COLOR,205:t.ONE_MINUS_SRC_ALPHA,209:t.ONE_MINUS_DST_COLOR,207:t.ONE_MINUS_DST_ALPHA};function X(e,n,i,r,s,a,o,l){if(0!==e){if(!1===f&&(V(t.BLEND),f=!0),5===e)s=s||n,a=a||i,o=o||r,n===g&&s===y||(t.blendEquationSeparate(W[n],W[s]),g=n,y=s),i===v&&r===_&&a===x&&o===M||(t.blendFuncSeparate(j[i],j[r],j[a],j[o]),v=i,_=r,x=a,M=o),m=e,S=!1;else if(e!==m||l!==S){if(g===P&&y===P||(t.blendEquation(t.FUNC_ADD),g=P,y=P),l)switch(e){case 1:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.ONE,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA)}else switch(e){case 1:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFunc(t.ZERO,t.SRC_COLOR)}v=null,_=null,x=null,M=null,m=e,S=l}}else!0===f&&(H(t.BLEND),f=!1)}function q(e){b!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),b=e)}function Y(e){0!==e?(V(t.CULL_FACE),e!==w&&(1===e?t.cullFace(t.BACK):2===e?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):H(t.CULL_FACE),w=e}function Z(e,n,i){e?(V(t.POLYGON_OFFSET_FILL),E===n&&A===i||(t.polygonOffset(n,i),E=n,A=i)):H(t.POLYGON_OFFSET_FILL)}return{buffers:{color:r,depth:s,stencil:a},enable:V,disable:H,bindFramebuffer:function(e,n){return h[e]!==n&&(t.bindFramebuffer(e,n),h[e]=n,i&&(e===t.DRAW_FRAMEBUFFER&&(h[t.FRAMEBUFFER]=n),e===t.FRAMEBUFFER&&(h[t.DRAW_FRAMEBUFFER]=n)),!0)},drawBuffers:function(i,r){let s=d,a=!1;if(i)if(s=u.get(r),void 0===s&&(s=[],u.set(r,s)),i.isWebGLMultipleRenderTargets){const e=i.texture;if(s.length!==e.length||s[0]!==t.COLOR_ATTACHMENT0){for(let n=0,i=e.length;n<i;n++)s[n]=t.COLOR_ATTACHMENT0+n;s.length=e.length,a=!0}}else s[0]!==t.COLOR_ATTACHMENT0&&(s[0]=t.COLOR_ATTACHMENT0,a=!0);else s[0]!==t.BACK&&(s[0]=t.BACK,a=!0);a&&(n.isWebGL2?t.drawBuffers(s):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(s))},useProgram:function(e){return p!==e&&(t.useProgram(e),p=e,!0)},setBlending:X,setMaterial:function(e,n){2===e.side?H(t.CULL_FACE):V(t.CULL_FACE);let i=e.side===R;n&&(i=!i),q(i),1===e.blending&&!1===e.transparent?X(0):X(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),s.setFunc(e.depthFunc),s.setTest(e.depthTest),s.setMask(e.depthWrite),r.setMask(e.colorWrite);const o=e.stencilWrite;a.setTest(o),o&&(a.setMask(e.stencilWriteMask),a.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),a.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),Z(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?V(t.SAMPLE_ALPHA_TO_COVERAGE):H(t.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:q,setCullFace:Y,setLineWidth:function(e){e!==T&&(U&&t.lineWidth(e),T=e)},setPolygonOffset:Z,setScissorTest:function(e){e?V(t.SCISSOR_TEST):H(t.SCISSOR_TEST)},activeTexture:function(e){void 0===e&&(e=t.TEXTURE0+C-1),D!==e&&(t.activeTexture(e),D=e)},bindTexture:function(e,n,i){void 0===i&&(i=null===D?t.TEXTURE0+C-1:D);let r=O[i];void 0===r&&(r={type:void 0,texture:void 0},O[i]=r),r.type===e&&r.texture===n||(D!==i&&(t.activeTexture(i),D=i),t.bindTexture(e,n||G[e]),r.type=e,r.texture=n)},unbindTexture:function(){const e=O[D];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(e){}},compressedTexImage3D:function(){try{t.compressedTexImage3D.apply(t,arguments)}catch(e){}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(e){}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(e){}},updateUBOMapping:function(e,n){let i=l.get(n);void 0===i&&(i=new WeakMap,l.set(n,i));let r=i.get(e);void 0===r&&(r=t.getUniformBlockIndex(n,e.name),i.set(e,r))},uniformBlockBinding:function(e,n){const i=l.get(n).get(e);o.get(n)!==i&&(t.uniformBlockBinding(n,i,e.__bindingPointIndex),o.set(n,i))},texStorage2D:function(){try{t.texStorage2D.apply(t,arguments)}catch(e){}},texStorage3D:function(){try{t.texStorage3D.apply(t,arguments)}catch(e){}},texSubImage2D:function(){try{t.texSubImage2D.apply(t,arguments)}catch(e){}},texSubImage3D:function(){try{t.texSubImage3D.apply(t,arguments)}catch(e){}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(e){}},compressedTexSubImage3D:function(){try{t.compressedTexSubImage3D.apply(t,arguments)}catch(e){}},scissor:function(e){!1===B.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),B.copy(e))},viewport:function(e){!1===z.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),z.copy(e))},reset:function(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),!0===i&&(t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),c={},D=null,O={},h={},u=new WeakMap,d=[],p=null,f=!1,m=null,g=null,v=null,_=null,y=null,x=null,M=null,S=!1,b=null,w=null,T=null,E=null,A=null,B.set(0,0,t.canvas.width,t.canvas.height),z.set(0,0,t.canvas.width,t.canvas.height),r.reset(),s.reset(),a.reset()}}}function Ka(t,e,n,i,r,s,a){const o=r.isWebGL2,l=(r.maxTextures,r.maxCubemapSize),c=r.maxTextureSize,h=r.maxSamples,u=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,d="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),p=new WeakMap;let f;const m=new WeakMap;let g=!1;try{g="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(V){}function v(t,e){return g?new OffscreenCanvas(t,e):De("canvas")}function _(t,e,n,i){let r=1;if((t.width>i||t.height>i)&&(r=i/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=e?we:Math.floor,s=i(r*t.width),a=i(r*t.height);void 0===f&&(f=v(s,a));const o=n?v(s,a):f;o.width=s,o.height=a;return o.getContext("2d").drawImage(t,0,0,s,a),o}return t}return t}function y(t){return Se(t.width)&&Se(t.height)}function x(t,e){return t.generateMipmaps&&e&&t.minFilter!==Z&&t.minFilter!==$}function M(e){t.generateMipmap(e)}function S(n,i,r,s,a=!1){if(!1===o)return i;if(null!==n&&void 0!==t[n])return t[n];let l=i;return i===t.RED&&(r===t.FLOAT&&(l=t.R32F),r===t.HALF_FLOAT&&(l=t.R16F),r===t.UNSIGNED_BYTE&&(l=t.R8)),i===t.RG&&(r===t.FLOAT&&(l=t.RG32F),r===t.HALF_FLOAT&&(l=t.RG16F),r===t.UNSIGNED_BYTE&&(l=t.RG8)),i===t.RGBA&&(r===t.FLOAT&&(l=t.RGBA32F),r===t.HALF_FLOAT&&(l=t.RGBA16F),r===t.UNSIGNED_BYTE&&(l=s===ie&&!1===a?t.SRGB8_ALPHA8:t.RGBA8),r===t.UNSIGNED_SHORT_4_4_4_4&&(l=t.RGBA4),r===t.UNSIGNED_SHORT_5_5_5_1&&(l=t.RGB5_A1)),l!==t.R16F&&l!==t.R32F&&l!==t.RG16F&&l!==t.RG32F&&l!==t.RGBA16F&&l!==t.RGBA32F||e.get("EXT_color_buffer_float"),l}function b(t,e,n){return!0===x(t,n)||t.isFramebufferTexture&&t.minFilter!==Z&&t.minFilter!==$?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function w(e){return e===Z||e===J||e===K?t.NEAREST:t.LINEAR}function T(t){const e=t.target;e.removeEventListener("dispose",T),function(t){const e=i.get(t);if(void 0===e.__webglInit)return;const n=t.source,r=m.get(n);if(r){const i=r[e.__cacheKey];i.usedTimes--,0===i.usedTimes&&A(t),0===Object.keys(r).length&&m.delete(n)}i.remove(t)}(e),e.isVideoTexture&&p.delete(e)}function E(e){const n=e.target;n.removeEventListener("dispose",E),function(e){const n=e.texture,r=i.get(e),s=i.get(n);void 0!==s.__webglTexture&&(t.deleteTexture(s.__webglTexture),a.memory.textures--);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let i=0;i<6;i++)t.deleteFramebuffer(r.__webglFramebuffer[i]),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer[i]);else{if(t.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&t.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer)for(let e=0;e<r.__webglColorRenderbuffer.length;e++)r.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(r.__webglColorRenderbuffer[e]);r.__webglDepthRenderbuffer&&t.deleteRenderbuffer(r.__webglDepthRenderbuffer)}if(e.isWebGLMultipleRenderTargets)for(let o=0,l=n.length;o<l;o++){const e=i.get(n[o]);e.__webglTexture&&(t.deleteTexture(e.__webglTexture),a.memory.textures--),i.remove(n[o])}i.remove(n),i.remove(e)}(n)}function A(e){const n=i.get(e);t.deleteTexture(n.__webglTexture);const r=e.source;delete m.get(r)[n.__cacheKey],a.memory.textures--}let C=0;function R(e,r){const s=i.get(e);if(e.isVideoTexture&&function(t){const e=a.render.frame;p.get(t)!==e&&(p.set(t,e),t.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&s.__version!==e.version){const t=e.image;if(null===t);else if(!1!==t.complete)return void O(s,e,r)}n.bindTexture(t.TEXTURE_2D,s.__webglTexture,t.TEXTURE0+r)}const P={[X]:t.REPEAT,[q]:t.CLAMP_TO_EDGE,[Y]:t.MIRRORED_REPEAT},U={[Z]:t.NEAREST,[J]:t.NEAREST_MIPMAP_NEAREST,[K]:t.NEAREST_MIPMAP_LINEAR,[$]:t.LINEAR,[Q]:t.LINEAR_MIPMAP_NEAREST,[tt]:t.LINEAR_MIPMAP_LINEAR},L={512:t.NEVER,519:t.ALWAYS,513:t.LESS,515:t.LEQUAL,514:t.EQUAL,518:t.GEQUAL,516:t.GREATER,517:t.NOTEQUAL};function I(n,s,a){if(a?(t.texParameteri(n,t.TEXTURE_WRAP_S,P[s.wrapS]),t.texParameteri(n,t.TEXTURE_WRAP_T,P[s.wrapT]),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,P[s.wrapR]),t.texParameteri(n,t.TEXTURE_MAG_FILTER,U[s.magFilter]),t.texParameteri(n,t.TEXTURE_MIN_FILTER,U[s.minFilter])):(t.texParameteri(n,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(n,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,t.CLAMP_TO_EDGE),s.wrapS!==q||s.wrapT,t.texParameteri(n,t.TEXTURE_MAG_FILTER,w(s.magFilter)),t.texParameteri(n,t.TEXTURE_MIN_FILTER,w(s.minFilter)),s.minFilter!==Z&&s.minFilter),s.compareFunction&&(t.texParameteri(n,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(n,t.TEXTURE_COMPARE_FUNC,L[s.compareFunction])),!0===e.has("EXT_texture_filter_anisotropic")){const a=e.get("EXT_texture_filter_anisotropic");if(s.magFilter===Z)return;if(s.minFilter!==K&&s.minFilter!==tt)return;if(s.type===st&&!1===e.has("OES_texture_float_linear"))return;if(!1===o&&s.type===at&&!1===e.has("OES_texture_half_float_linear"))return;(s.anisotropy>1||i.get(s).__currentAnisotropy)&&(t.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,r.getMaxAnisotropy())),i.get(s).__currentAnisotropy=s.anisotropy)}}function D(e,n){let i=!1;void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",T));const r=n.source;let s=m.get(r);void 0===s&&(s={},m.set(r,s));const o=function(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.wrapR||0),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.colorSpace),e.join()}(n);if(o!==e.__cacheKey){void 0===s[o]&&(s[o]={texture:t.createTexture(),usedTimes:0},a.memory.textures++,i=!0),s[o].usedTimes++;const r=s[e.__cacheKey];void 0!==r&&(s[e.__cacheKey].usedTimes--,0===r.usedTimes&&A(n)),e.__cacheKey=o,e.__webglTexture=s[o].texture}return i}function O(e,r,a){let l=t.TEXTURE_2D;(r.isDataArrayTexture||r.isCompressedArrayTexture)&&(l=t.TEXTURE_2D_ARRAY),r.isData3DTexture&&(l=t.TEXTURE_3D);const h=D(e,r),u=r.source;n.bindTexture(l,e.__webglTexture,t.TEXTURE0+a);const d=i.get(u);if(u.version!==d.__version||!0===h){n.activeTexture(t.TEXTURE0+a),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,r.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,r.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,t.NONE);const e=function(t){return!o&&(t.wrapS!==q||t.wrapT!==q||t.minFilter!==Z&&t.minFilter!==$)}(r)&&!1===y(r.image);let i=_(r.image,e,!1,c);i=G(r,i);const p=y(i)||o,f=s.convert(r.format,r.colorSpace);let m,g=s.convert(r.type),v=S(r.internalFormat,f,g,r.colorSpace);I(l,r,p);const w=r.mipmaps,T=o&&!0!==r.isVideoTexture,E=void 0===d.__version||!0===h,A=b(r,i,p);if(r.isDepthTexture)v=t.DEPTH_COMPONENT,o?v=r.type===st?t.DEPTH_COMPONENT32F:r.type===rt?t.DEPTH_COMPONENT24:r.type===ct?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT16:r.type,r.format===ut&&v===t.DEPTH_COMPONENT&&r.type!==nt&&r.type!==rt&&(r.type=rt,g=s.convert(r.type)),r.format===dt&&v===t.DEPTH_COMPONENT&&(v=t.DEPTH_STENCIL,r.type!==ct&&(r.type=ct,g=s.convert(r.type))),E&&(T?n.texStorage2D(t.TEXTURE_2D,1,v,i.width,i.height):n.texImage2D(t.TEXTURE_2D,0,v,i.width,i.height,0,f,g,null));else if(r.isDataTexture)if(w.length>0&&p){T&&E&&n.texStorage2D(t.TEXTURE_2D,A,v,w[0].width,w[0].height);for(let e=0,i=w.length;e<i;e++)m=w[e],T?n.texSubImage2D(t.TEXTURE_2D,e,0,0,m.width,m.height,f,g,m.data):n.texImage2D(t.TEXTURE_2D,e,v,m.width,m.height,0,f,g,m.data);r.generateMipmaps=!1}else T?(E&&n.texStorage2D(t.TEXTURE_2D,A,v,i.width,i.height),n.texSubImage2D(t.TEXTURE_2D,0,0,0,i.width,i.height,f,g,i.data)):n.texImage2D(t.TEXTURE_2D,0,v,i.width,i.height,0,f,g,i.data);else if(r.isCompressedTexture)if(r.isCompressedArrayTexture){T&&E&&n.texStorage3D(t.TEXTURE_2D_ARRAY,A,v,w[0].width,w[0].height,i.depth);for(let e=0,s=w.length;e<s;e++)m=w[e],r.format!==ht?null!==f&&(T?n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,m.width,m.height,i.depth,f,m.data,0,0):n.compressedTexImage3D(t.TEXTURE_2D_ARRAY,e,v,m.width,m.height,i.depth,0,m.data,0,0)):T?n.texSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,m.width,m.height,i.depth,f,g,m.data):n.texImage3D(t.TEXTURE_2D_ARRAY,e,v,m.width,m.height,i.depth,0,f,g,m.data)}else{T&&E&&n.texStorage2D(t.TEXTURE_2D,A,v,w[0].width,w[0].height);for(let e=0,i=w.length;e<i;e++)m=w[e],r.format!==ht?null!==f&&(T?n.compressedTexSubImage2D(t.TEXTURE_2D,e,0,0,m.width,m.height,f,m.data):n.compressedTexImage2D(t.TEXTURE_2D,e,v,m.width,m.height,0,m.data)):T?n.texSubImage2D(t.TEXTURE_2D,e,0,0,m.width,m.height,f,g,m.data):n.texImage2D(t.TEXTURE_2D,e,v,m.width,m.height,0,f,g,m.data)}else if(r.isDataArrayTexture)T?(E&&n.texStorage3D(t.TEXTURE_2D_ARRAY,A,v,i.width,i.height,i.depth),n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,i.width,i.height,i.depth,f,g,i.data)):n.texImage3D(t.TEXTURE_2D_ARRAY,0,v,i.width,i.height,i.depth,0,f,g,i.data);else if(r.isData3DTexture)T?(E&&n.texStorage3D(t.TEXTURE_3D,A,v,i.width,i.height,i.depth),n.texSubImage3D(t.TEXTURE_3D,0,0,0,0,i.width,i.height,i.depth,f,g,i.data)):n.texImage3D(t.TEXTURE_3D,0,v,i.width,i.height,i.depth,0,f,g,i.data);else if(r.isFramebufferTexture){if(E)if(T)n.texStorage2D(t.TEXTURE_2D,A,v,i.width,i.height);else{let e=i.width,r=i.height;for(let i=0;i<A;i++)n.texImage2D(t.TEXTURE_2D,i,v,e,r,0,f,g,null),e>>=1,r>>=1}}else if(w.length>0&&p){T&&E&&n.texStorage2D(t.TEXTURE_2D,A,v,w[0].width,w[0].height);for(let e=0,i=w.length;e<i;e++)m=w[e],T?n.texSubImage2D(t.TEXTURE_2D,e,0,0,f,g,m):n.texImage2D(t.TEXTURE_2D,e,v,f,g,m);r.generateMipmaps=!1}else T?(E&&n.texStorage2D(t.TEXTURE_2D,A,v,i.width,i.height),n.texSubImage2D(t.TEXTURE_2D,0,0,0,f,g,i)):n.texImage2D(t.TEXTURE_2D,0,v,f,g,i);x(r,p)&&M(l),d.__version=u.version,r.onUpdate&&r.onUpdate(r)}e.__version=r.version}function N(e,r,a,o,l){const c=s.convert(a.format,a.colorSpace),h=s.convert(a.type),d=S(a.internalFormat,c,h,a.colorSpace);i.get(r).__hasExternalTextures||(l===t.TEXTURE_3D||l===t.TEXTURE_2D_ARRAY?n.texImage3D(l,0,d,r.width,r.height,r.depth,0,c,h,null):n.texImage2D(l,0,d,r.width,r.height,0,c,h,null)),n.bindFramebuffer(t.FRAMEBUFFER,e),k(r)?u.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,o,l,i.get(a).__webglTexture,0,z(r)):(l===t.TEXTURE_2D||l>=t.TEXTURE_CUBE_MAP_POSITIVE_X&&l<=t.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&t.framebufferTexture2D(t.FRAMEBUFFER,o,l,i.get(a).__webglTexture,0),n.bindFramebuffer(t.FRAMEBUFFER,null)}function F(e,n,i){if(t.bindRenderbuffer(t.RENDERBUFFER,e),n.depthBuffer&&!n.stencilBuffer){let r=t.DEPTH_COMPONENT16;if(i||k(n)){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===st?r=t.DEPTH_COMPONENT32F:e.type===rt&&(r=t.DEPTH_COMPONENT24));const i=z(n);k(n)?u.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,i,r,n.width,n.height):t.renderbufferStorageMultisample(t.RENDERBUFFER,i,r,n.width,n.height)}else t.renderbufferStorage(t.RENDERBUFFER,r,n.width,n.height);t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)}else if(n.depthBuffer&&n.stencilBuffer){const r=z(n);i&&!1===k(n)?t.renderbufferStorageMultisample(t.RENDERBUFFER,r,t.DEPTH24_STENCIL8,n.width,n.height):k(n)?u.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,r,t.DEPTH24_STENCIL8,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,n.width,n.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)}else{const e=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture];for(let r=0;r<e.length;r++){const a=e[r],o=s.convert(a.format,a.colorSpace),l=s.convert(a.type),c=S(a.internalFormat,o,l,a.colorSpace),h=z(n);i&&!1===k(n)?t.renderbufferStorageMultisample(t.RENDERBUFFER,h,c,n.width,n.height):k(n)?u.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,h,c,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,c,n.width,n.height)}}t.bindRenderbuffer(t.RENDERBUFFER,null)}function B(e){const r=i.get(e),s=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture&&!r.__autoAllocateDepthBuffer){if(s)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(t.FRAMEBUFFER,e),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),R(r.depthTexture,0);const s=i.get(r.depthTexture).__webglTexture,a=z(r);if(r.depthTexture.format===ut)k(r)?u.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,s,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,s,0);else{if(r.depthTexture.format!==dt)throw new Error("Unknown depthTexture format");k(r)?u.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,s,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,s,0)}}(r.__webglFramebuffer,e)}else if(s){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)n.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer[i]),r.__webglDepthbuffer[i]=t.createRenderbuffer(),F(r.__webglDepthbuffer[i],e,!1)}else n.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer),r.__webglDepthbuffer=t.createRenderbuffer(),F(r.__webglDepthbuffer,e,!1);n.bindFramebuffer(t.FRAMEBUFFER,null)}function z(t){return Math.min(h,t.samples)}function k(t){const n=i.get(t);return o&&t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function G(t,n){const i=t.colorSpace,r=t.format;t.type;return!0===t.isCompressedTexture||t.format===he||i!==re&&i!==ne&&i===ie&&!1===o&&(!0===e.has("EXT_sRGB")&&r===ht?(t.format=he,t.minFilter=$,t.generateMipmaps=!1):n=je.sRGBToLinear(n)),n}this.allocateTextureUnit=function(){const t=C;return C+=1,t},this.resetTextureUnits=function(){C=0},this.setTexture2D=R,this.setTexture2DArray=function(e,r){const s=i.get(e);e.version>0&&s.__version!==e.version?O(s,e,r):n.bindTexture(t.TEXTURE_2D_ARRAY,s.__webglTexture,t.TEXTURE0+r)},this.setTexture3D=function(e,r){const s=i.get(e);e.version>0&&s.__version!==e.version?O(s,e,r):n.bindTexture(t.TEXTURE_3D,s.__webglTexture,t.TEXTURE0+r)},this.setTextureCube=function(e,r){const a=i.get(e);e.version>0&&a.__version!==e.version?function(e,r,a){if(6!==r.image.length)return;const c=D(e,r),h=r.source;n.bindTexture(t.TEXTURE_CUBE_MAP,e.__webglTexture,t.TEXTURE0+a);const u=i.get(h);if(h.version!==u.__version||!0===c){n.activeTexture(t.TEXTURE0+a),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,r.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,r.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,t.NONE);const e=r.isCompressedTexture||r.image[0].isCompressedTexture,i=r.image[0]&&r.image[0].isDataTexture,d=[];for(let t=0;t<6;t++)d[t]=e||i?i?r.image[t].image:r.image[t]:_(r.image[t],!1,!0,l),d[t]=G(r,d[t]);const p=d[0],f=y(p)||o,m=s.convert(r.format,r.colorSpace),g=s.convert(r.type),v=S(r.internalFormat,m,g,r.colorSpace),w=o&&!0!==r.isVideoTexture,T=void 0===u.__version||!0===c;let E,A=b(r,p,f);if(I(t.TEXTURE_CUBE_MAP,r,f),e){w&&T&&n.texStorage2D(t.TEXTURE_CUBE_MAP,A,v,p.width,p.height);for(let e=0;e<6;e++){E=d[e].mipmaps;for(let i=0;i<E.length;i++){const s=E[i];r.format!==ht?null!==m&&(w?n.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,0,0,s.width,s.height,m,s.data):n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,v,s.width,s.height,0,s.data)):w?n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,0,0,s.width,s.height,m,g,s.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,v,s.width,s.height,0,m,g,s.data)}}}else{E=r.mipmaps,w&&T&&(E.length>0&&A++,n.texStorage2D(t.TEXTURE_CUBE_MAP,A,v,d[0].width,d[0].height));for(let e=0;e<6;e++)if(i){w?n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,d[e].width,d[e].height,m,g,d[e].data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,v,d[e].width,d[e].height,0,m,g,d[e].data);for(let i=0;i<E.length;i++){const r=E[i].image[e].image;w?n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,0,0,r.width,r.height,m,g,r.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,v,r.width,r.height,0,m,g,r.data)}}else{w?n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,m,g,d[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,v,m,g,d[e]);for(let i=0;i<E.length;i++){const r=E[i];w?n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,0,0,m,g,r.image[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,v,m,g,r.image[e])}}}x(r,f)&&M(t.TEXTURE_CUBE_MAP),u.__version=h.version,r.onUpdate&&r.onUpdate(r)}e.__version=r.version}(a,e,r):n.bindTexture(t.TEXTURE_CUBE_MAP,a.__webglTexture,t.TEXTURE0+r)},this.rebindTextures=function(e,n,r){const s=i.get(e);void 0!==n&&N(s.__webglFramebuffer,e,e.texture,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),void 0!==r&&B(e)},this.setupRenderTarget=function(e){const l=e.texture,c=i.get(e),h=i.get(l);e.addEventListener("dispose",E),!0!==e.isWebGLMultipleRenderTargets&&(void 0===h.__webglTexture&&(h.__webglTexture=t.createTexture()),h.__version=l.version,a.memory.textures++);const u=!0===e.isWebGLCubeRenderTarget,d=!0===e.isWebGLMultipleRenderTargets,p=y(e)||o;if(u){c.__webglFramebuffer=[];for(let e=0;e<6;e++)c.__webglFramebuffer[e]=t.createFramebuffer()}else{if(c.__webglFramebuffer=t.createFramebuffer(),d&&r.drawBuffers){const n=e.texture;for(let e=0,r=n.length;e<r;e++){const r=i.get(n[e]);void 0===r.__webglTexture&&(r.__webglTexture=t.createTexture(),a.memory.textures++)}}if(o&&e.samples>0&&!1===k(e)){const i=d?l:[l];c.__webglMultisampledFramebuffer=t.createFramebuffer(),c.__webglColorRenderbuffer=[],n.bindFramebuffer(t.FRAMEBUFFER,c.__webglMultisampledFramebuffer);for(let n=0;n<i.length;n++){const r=i[n];c.__webglColorRenderbuffer[n]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,c.__webglColorRenderbuffer[n]);const a=s.convert(r.format,r.colorSpace),o=s.convert(r.type),l=S(r.internalFormat,a,o,r.colorSpace,!0===e.isXRRenderTarget),h=z(e);t.renderbufferStorageMultisample(t.RENDERBUFFER,h,l,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+n,t.RENDERBUFFER,c.__webglColorRenderbuffer[n])}t.bindRenderbuffer(t.RENDERBUFFER,null),e.depthBuffer&&(c.__webglDepthRenderbuffer=t.createRenderbuffer(),F(c.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(t.FRAMEBUFFER,null)}}if(u){n.bindTexture(t.TEXTURE_CUBE_MAP,h.__webglTexture),I(t.TEXTURE_CUBE_MAP,l,p);for(let n=0;n<6;n++)N(c.__webglFramebuffer[n],e,l,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n);x(l,p)&&M(t.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(d){const r=e.texture;for(let s=0,a=r.length;s<a;s++){const a=r[s],o=i.get(a);n.bindTexture(t.TEXTURE_2D,o.__webglTexture),I(t.TEXTURE_2D,a,p),N(c.__webglFramebuffer,e,a,t.COLOR_ATTACHMENT0+s,t.TEXTURE_2D),x(a,p)&&M(t.TEXTURE_2D)}n.unbindTexture()}else{let i=t.TEXTURE_2D;(e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&o&&(i=e.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY),n.bindTexture(i,h.__webglTexture),I(i,l,p),N(c.__webglFramebuffer,e,l,t.COLOR_ATTACHMENT0,i),x(l,p)&&M(i),n.unbindTexture()}e.depthBuffer&&B(e)},this.updateRenderTargetMipmap=function(e){const r=y(e)||o,s=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let a=0,o=s.length;a<o;a++){const o=s[a];if(x(o,r)){const r=e.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,s=i.get(o).__webglTexture;n.bindTexture(r,s),M(r),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(o&&e.samples>0&&!1===k(e)){const r=e.isWebGLMultipleRenderTargets?e.texture:[e.texture],s=e.width,a=e.height;let o=t.COLOR_BUFFER_BIT;const l=[],c=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,h=i.get(e),u=!0===e.isWebGLMultipleRenderTargets;if(u)for(let e=0;e<r.length;e++)n.bindFramebuffer(t.FRAMEBUFFER,h.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,null),n.bindFramebuffer(t.FRAMEBUFFER,h.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,null,0);n.bindFramebuffer(t.READ_FRAMEBUFFER,h.__webglMultisampledFramebuffer),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,h.__webglFramebuffer);for(let n=0;n<r.length;n++){l.push(t.COLOR_ATTACHMENT0+n),e.depthBuffer&&l.push(c);const p=void 0!==h.__ignoreDepthValues&&h.__ignoreDepthValues;if(!1===p&&(e.depthBuffer&&(o|=t.DEPTH_BUFFER_BIT),e.stencilBuffer&&(o|=t.STENCIL_BUFFER_BIT)),u&&t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,h.__webglColorRenderbuffer[n]),!0===p&&(t.invalidateFramebuffer(t.READ_FRAMEBUFFER,[c]),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[c])),u){const e=i.get(r[n]).__webglTexture;t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)}t.blitFramebuffer(0,0,s,a,0,0,s,a,o,t.NEAREST),d&&t.invalidateFramebuffer(t.READ_FRAMEBUFFER,l)}if(n.bindFramebuffer(t.READ_FRAMEBUFFER,null),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),u)for(let e=0;e<r.length;e++){n.bindFramebuffer(t.FRAMEBUFFER,h.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,h.__webglColorRenderbuffer[e]);const s=i.get(r[e]).__webglTexture;n.bindFramebuffer(t.FRAMEBUFFER,h.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,s,0)}n.bindFramebuffer(t.DRAW_FRAMEBUFFER,h.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=B,this.setupFrameBufferTexture=N,this.useMultisampledRTT=k}function $a(t,e,n){const i=n.isWebGL2;return{convert:function(n,r=""){let s;if(n===et)return t.UNSIGNED_BYTE;if(n===ot)return t.UNSIGNED_SHORT_4_4_4_4;if(n===lt)return t.UNSIGNED_SHORT_5_5_5_1;if(1010===n)return t.BYTE;if(1011===n)return t.SHORT;if(n===nt)return t.UNSIGNED_SHORT;if(n===it)return t.INT;if(n===rt)return t.UNSIGNED_INT;if(n===st)return t.FLOAT;if(n===at)return i?t.HALF_FLOAT:(s=e.get("OES_texture_half_float"),null!==s?s.HALF_FLOAT_OES:null);if(1021===n)return t.ALPHA;if(n===ht)return t.RGBA;if(1024===n)return t.LUMINANCE;if(1025===n)return t.LUMINANCE_ALPHA;if(n===ut)return t.DEPTH_COMPONENT;if(n===dt)return t.DEPTH_STENCIL;if(n===he)return s=e.get("EXT_sRGB"),null!==s?s.SRGB_ALPHA_EXT:null;if(n===pt)return t.RED;if(n===ft)return t.RED_INTEGER;if(1030===n)return t.RG;if(n===mt)return t.RG_INTEGER;if(n===gt)return t.RGBA_INTEGER;if(n===vt||n===_t||n===yt||n===xt)if(r===ie){if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===s)return null;if(n===vt)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===_t)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===yt)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===xt)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(s=e.get("WEBGL_compressed_texture_s3tc"),null===s)return null;if(n===vt)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===_t)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===yt)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===xt)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===Mt||n===St||n===bt||n===wt){if(s=e.get("WEBGL_compressed_texture_pvrtc"),null===s)return null;if(n===Mt)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===St)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===bt)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===wt)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===n)return s=e.get("WEBGL_compressed_texture_etc1"),null!==s?s.COMPRESSED_RGB_ETC1_WEBGL:null;if(n===Tt||n===Et){if(s=e.get("WEBGL_compressed_texture_etc"),null===s)return null;if(n===Tt)return r===ie?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===Et)return r===ie?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}if(n===At||n===Ct||n===Rt||n===Pt||n===Ut||n===Lt||n===It||n===Dt||n===Ot||n===Nt||n===Ft||n===Bt||n===zt||n===kt){if(s=e.get("WEBGL_compressed_texture_astc"),null===s)return null;if(n===At)return r===ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Ct)return r===ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Rt)return r===ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Pt)return r===ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Ut)return r===ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Lt)return r===ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===It)return r===ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Dt)return r===ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Ot)return r===ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Nt)return r===ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Ft)return r===ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Bt)return r===ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===zt)return r===ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===kt)return r===ie?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===Gt){if(s=e.get("EXT_texture_compression_bptc"),null===s)return null;if(n===Gt)return r===ie?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(36283===n||n===Vt||n===Ht||n===Wt){if(s=e.get("EXT_texture_compression_rgtc"),null===s)return null;if(n===Gt)return s.COMPRESSED_RED_RGTC1_EXT;if(n===Vt)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Ht)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Wt)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===ct?i?t.UNSIGNED_INT_24_8:(s=e.get("WEBGL_depth_texture"),null!==s?s.UNSIGNED_INT_24_8_WEBGL:null):void 0!==t[n]?t[n]:null}}}class Qa extends vr{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class to extends ri{constructor(){super(),this.isGroup=!0,this.type="Group"}}const eo={type:"move"};class no{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new to,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new to,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new nn,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new nn),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new to,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new nn,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new nn),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,s=null;const a=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState){if(l&&t.hand){s=!0;for(const s of t.hand.values()){const t=e.getJointPose(s,n),i=this._getHandJoint(l,s);null!==t&&(i.matrix.fromArray(t.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.matrixWorldNeedsUpdate=!0,i.jointRadius=t.radius),i.visible=null!==t}const i=l.joints["index-finger-tip"],r=l.joints["thumb-tip"],a=i.position.distanceTo(r.position),o=.02,c=.005;l.inputState.pinching&&a>o+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&a<=o-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1));null!==a&&(i=e.getPose(t.targetRaySpace,n),null===i&&null!==r&&(i=r),null!==i&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(eo)))}return null!==a&&(a.visible=null!==i),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==s),this}_getHandJoint(t,e){if(void 0===t.joints[e.jointName]){const n=new to;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class io extends Je{constructor(t,e,n,i,r,s,a,o,l,c){if((c=void 0!==c?c:ut)!==ut&&c!==dt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&c===ut&&(n=rt),void 0===n&&c===dt&&(n=ct),super(null,i,r,s,a,o,c,n,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=void 0!==a?a:Z,this.minFilter=void 0!==o?o:Z,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return null!==this.compareFunction&&(e.compareFunction=this.compareFunction),e}}class ro extends pe{constructor(t,e){super();const n=this;let i=null,r=1,s=null,a="local-floor",o=1,l=null,c=null,h=null,u=null,d=null,p=null;const f=e.getContextAttributes();let m=null,g=null;const v=[],_=[];let y=null;const x=new vr;x.layers.enable(1),x.viewport=new Ke;const M=new vr;M.layers.enable(2),M.viewport=new Ke;const S=[x,M],b=new Qa;b.layers.enable(1),b.layers.enable(2);let w=null,T=null;function E(t){const e=_.indexOf(t.inputSource);if(-1===e)return;const n=v[e];void 0!==n&&(n.update(t.inputSource,t.frame,l||s),n.dispatchEvent({type:t.type,data:t.inputSource}))}function A(){i.removeEventListener("select",E),i.removeEventListener("selectstart",E),i.removeEventListener("selectend",E),i.removeEventListener("squeeze",E),i.removeEventListener("squeezestart",E),i.removeEventListener("squeezeend",E),i.removeEventListener("end",A),i.removeEventListener("inputsourceschange",C);for(let t=0;t<v.length;t++){const e=_[t];null!==e&&(_[t]=null,v[t].disconnect(e))}w=null,T=null,t.setRenderTarget(m),d=null,u=null,h=null,i=null,g=null,I.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function C(t){for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=_.indexOf(n);i>=0&&(_[i]=null,v[i].disconnect(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e];let i=_.indexOf(n);if(-1===i){for(let t=0;t<v.length;t++){if(t>=_.length){_.push(n),i=t;break}if(null===_[t]){_[t]=n,i=t;break}}if(-1===i)break}const r=v[i];r&&r.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getCamera=function(){},this.setUserCamera=function(t){y=t},this.getController=function(t){let e=v[t];return void 0===e&&(e=new no,v[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=v[t];return void 0===e&&(e=new no,v[t]=e),e.getGripSpace()},this.getHand=function(t){let e=v[t];return void 0===e&&(e=new no,v[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){r=t,n.isPresenting},this.setReferenceSpaceType=function(t){a=t,n.isPresenting},this.getReferenceSpace=function(){return l||s},this.setReferenceSpace=function(t){l=t},this.getBaseLayer=function(){return null!==u?u:d},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(c){if(i=c,null!==i){if(m=t.getRenderTarget(),i.addEventListener("select",E),i.addEventListener("selectstart",E),i.addEventListener("selectend",E),i.addEventListener("squeeze",E),i.addEventListener("squeezestart",E),i.addEventListener("squeezeend",E),i.addEventListener("end",A),i.addEventListener("inputsourceschange",C),!0!==f.xrCompatible&&await e.makeXRCompatible(),void 0===i.renderState.layers||!1===t.capabilities.isWebGL2){const n={antialias:void 0!==i.renderState.layers||f.antialias,alpha:!0,depth:f.depth,stencil:f.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(i,e,n),i.updateRenderState({baseLayer:d}),g=new $e(d.framebufferWidth,d.framebufferHeight,{format:ht,type:et,colorSpace:t.outputColorSpace,stencilBuffer:f.stencil})}else{let n=null,s=null,a=null;f.depth&&(a=f.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,n=f.stencil?dt:ut,s=f.stencil?ct:rt);const o={colorFormat:e.RGBA8,depthFormat:a,scaleFactor:r};h=new XRWebGLBinding(i,e),u=h.createProjectionLayer(o),i.updateRenderState({layers:[u]}),g=new $e(u.textureWidth,u.textureHeight,{format:ht,type:et,depthTexture:new io(u.textureWidth,u.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:f.stencil,colorSpace:t.outputColorSpace,samples:f.antialias?4:0});t.properties.get(g).__ignoreDepthValues=u.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(o),l=null,s=await i.requestReferenceSpace(a),I.setContext(i),I.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==i)return i.environmentBlendMode};const R=new nn,P=new nn;function U(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCameraXR=function(t){if(null===i)return t;y&&(t=y),b.near=M.near=x.near=t.near,b.far=M.far=x.far=t.far,w===b.near&&T===b.far||(i.updateRenderState({depthNear:b.near,depthFar:b.far}),w=b.near,T=b.far);const e=t.parent,n=b.cameras;U(b,e);for(let i=0;i<n.length;i++)U(n[i],e);return 2===n.length?function(t,e,n){R.setFromMatrixPosition(e.matrixWorld),P.setFromMatrixPosition(n.matrixWorld);const i=R.distanceTo(P),r=e.projectionMatrix.elements,s=n.projectionMatrix.elements,a=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(s[8]+1)/s[0],d=a*h,p=a*u,f=i/(-h+u),m=f*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=a+f,v=o+f,_=d-m,y=p+(i-m),x=l*o/v*g,M=c*o/v*g;t.projectionMatrix.makePerspective(_,y,x,M,g,v),t.projectionMatrixInverse.copy(t.projectionMatrix).invert()}(b,x,M):b.projectionMatrix.copy(x.projectionMatrix),y&&function(t,e){const n=y;null===e?n.matrix.copy(t.matrixWorld):(n.matrix.copy(e.matrixWorld),n.matrix.invert(),n.matrix.multiply(t.matrixWorld));n.matrix.decompose(n.position,n.quaternion,n.scale),n.updateMatrixWorld(!0);const i=n.children;for(let r=0,s=i.length;r<s;r++)i[r].updateMatrixWorld(!0);n.projectionMatrix.copy(t.projectionMatrix),n.projectionMatrixInverse.copy(t.projectionMatrixInverse),n.isPerspectiveCamera&&(n.fov=2*ve*Math.atan(1/n.projectionMatrix.elements[5]),n.zoom=1)}(b,e),b},this.getFoveation=function(){if(null!==u||null!==d)return o},this.setFoveation=function(t){o=t,null!==u&&(u.fixedFoveation=t),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=t)};let L=null;const I=new Rr;I.setAnimationLoop((function(e,i){if(c=i.getViewerPose(l||s),p=i,null!==c){const e=c.views;null!==d&&(t.setRenderTargetFramebuffer(g,d.framebuffer),t.setRenderTarget(g));let n=!1;e.length!==b.cameras.length&&(b.cameras.length=0,n=!0);for(let i=0;i<e.length;i++){const r=e[i];let s=null;if(null!==d)s=d.getViewport(r);else{const e=h.getViewSubImage(u,r);s=e.viewport,0===i&&(t.setRenderTargetTextures(g,e.colorTexture,u.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(g))}let a=S[i];void 0===a&&(a=new vr,a.layers.enable(i),a.viewport=new Ke,S[i]=a),a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.quaternion,a.scale),a.projectionMatrix.fromArray(r.projectionMatrix),a.projectionMatrixInverse.copy(a.projectionMatrix).invert(),a.viewport.set(s.x,s.y,s.width,s.height),0===i&&(b.matrix.copy(a.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),!0===n&&b.cameras.push(a)}}for(let t=0;t<v.length;t++){const e=_[t],n=v[t];null!==e&&void 0!==n&&n.update(e,i,l||s)}L&&L(e,i),i.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:i}),p=null})),this.setAnimationLoop=function(t){L=t},this.dispose=function(){}}}function so(t,e){function n(t,e){!0===t.matrixAutoUpdate&&t.updateMatrix(),e.value.copy(t.matrix)}function i(i,r){i.opacity.value=r.opacity,r.color&&i.diffuse.value.copy(r.color),r.emissive&&i.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(i.map.value=r.map,n(r.map,i.mapTransform)),r.alphaMap&&(i.alphaMap.value=r.alphaMap,n(r.alphaMap,i.alphaMapTransform)),r.bumpMap&&(i.bumpMap.value=r.bumpMap,n(r.bumpMap,i.bumpMapTransform),i.bumpScale.value=r.bumpScale,r.side===R&&(i.bumpScale.value*=-1)),r.normalMap&&(i.normalMap.value=r.normalMap,n(r.normalMap,i.normalMapTransform),i.normalScale.value.copy(r.normalScale),r.side===R&&i.normalScale.value.negate()),r.displacementMap&&(i.displacementMap.value=r.displacementMap,n(r.displacementMap,i.displacementMapTransform),i.displacementScale.value=r.displacementScale,i.displacementBias.value=r.displacementBias),r.emissiveMap&&(i.emissiveMap.value=r.emissiveMap,n(r.emissiveMap,i.emissiveMapTransform)),r.specularMap&&(i.specularMap.value=r.specularMap,n(r.specularMap,i.specularMapTransform)),r.alphaTest>0&&(i.alphaTest.value=r.alphaTest);const s=e.get(r).envMap;if(s&&(i.envMap.value=s,i.flipEnvMap.value=s.isCubeTexture&&!1===s.isRenderTargetTexture?-1:1,i.reflectivity.value=r.reflectivity,i.ior.value=r.ior,i.refractionRatio.value=r.refractionRatio),r.lightMap){i.lightMap.value=r.lightMap;const e=!0===t.useLegacyLights?Math.PI:1;i.lightMapIntensity.value=r.lightMapIntensity*e,n(r.lightMap,i.lightMapTransform)}r.aoMap&&(i.aoMap.value=r.aoMap,i.aoMapIntensity.value=r.aoMapIntensity,n(r.aoMap,i.aoMapTransform))}return{refreshFogUniforms:function(e,n){n.color.getRGB(e.fogColor.value,pr(t)),n.isFog?(e.fogNear.value=n.near,e.fogFar.value=n.far):n.isFogExp2&&(e.fogDensity.value=n.density)},refreshMaterialUniforms:function(t,r,s,a,o){r.isMeshBasicMaterial||r.isMeshLambertMaterial?i(t,r):r.isMeshToonMaterial?(i(t,r),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(t,r)):r.isMeshPhongMaterial?(i(t,r),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}(t,r)):r.isMeshStandardMaterial?(i(t,r),function(t,i){t.metalness.value=i.metalness,i.metalnessMap&&(t.metalnessMap.value=i.metalnessMap,n(i.metalnessMap,t.metalnessMapTransform));t.roughness.value=i.roughness,i.roughnessMap&&(t.roughnessMap.value=i.roughnessMap,n(i.roughnessMap,t.roughnessMapTransform));const r=e.get(i).envMap;r&&(t.envMapIntensity.value=i.envMapIntensity)}(t,r),r.isMeshPhysicalMaterial&&function(t,e,i){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap,n(e.sheenColorMap,t.sheenColorMapTransform)),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap,n(e.sheenRoughnessMap,t.sheenRoughnessMapTransform)));e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap,n(e.clearcoatMap,t.clearcoatMapTransform)),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap,n(e.clearcoatRoughnessMap,t.clearcoatRoughnessMapTransform)),e.clearcoatNormalMap&&(t.clearcoatNormalMap.value=e.clearcoatNormalMap,n(e.clearcoatNormalMap,t.clearcoatNormalMapTransform),t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),e.side===R&&t.clearcoatNormalScale.value.negate()));e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap,n(e.iridescenceMap,t.iridescenceMapTransform)),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap,n(e.iridescenceThicknessMap,t.iridescenceThicknessMapTransform)));e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=i.texture,t.transmissionSamplerSize.value.set(i.width,i.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap,n(e.transmissionMap,t.transmissionMapTransform)),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap,n(e.thicknessMap,t.thicknessMapTransform)),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor));e.anisotropy>0&&(t.anisotropyVector.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation)),e.anisotropyMap&&(t.anisotropyMap.value=e.anisotropyMap,n(e.anisotropyMap,t.anisotropyMapTransform)));t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap,n(e.specularColorMap,t.specularColorMapTransform));e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap,n(e.specularIntensityMap,t.specularIntensityMapTransform))}(t,r,o)):r.isMeshMatcapMaterial?(i(t,r),function(t,e){e.matcap&&(t.matcap.value=e.matcap)}(t,r)):r.isMeshDepthMaterial?i(t,r):r.isMeshDistanceMaterial?(i(t,r),function(t,n){const i=e.get(n).light;t.referencePosition.value.setFromMatrixPosition(i.matrixWorld),t.nearDistance.value=i.shadow.camera.near,t.farDistance.value=i.shadow.camera.far}(t,r)):r.isMeshNormalMaterial?i(t,r):r.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform))}(t,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,r)):r.isPointsMaterial?function(t,e,i,r){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*i,t.scale.value=.5*r,e.map&&(t.map.value=e.map,n(e.map,t.uvTransform));e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform));e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,r,s,a):r.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform));e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform));e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,r):r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function ao(t,e,n,i){let r={},s={},a=[];const o=n.isWebGL2?t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(t,e,n){const i=t.value;if(void 0===n[e]){if("number"==typeof i)n[e]=i;else{const t=Array.isArray(i)?i:[i],r=[];for(let e=0;e<t.length;e++)r.push(t[e].clone());n[e]=r}return!0}if("number"==typeof i){if(n[e]!==i)return n[e]=i,!0}else{const t=Array.isArray(n[e])?n[e]:[n[e]],r=Array.isArray(i)?i:[i];for(let e=0;e<t.length;e++){const n=t[e];if(!1===n.equals(r[e]))return n.copy(r[e]),!0}}return!1}function c(t){const e={boundary:0,storage:0};return"number"==typeof t?(e.boundary=4,e.storage=4):t.isVector2?(e.boundary=8,e.storage=8):t.isVector3||t.isColor?(e.boundary=16,e.storage=12):t.isVector4?(e.boundary=16,e.storage=16):t.isMatrix3?(e.boundary=48,e.storage=48):t.isMatrix4?(e.boundary=64,e.storage=64):t.isTexture,e}function h(e){const n=e.target;n.removeEventListener("dispose",h);const i=a.indexOf(n.__bindingPointIndex);a.splice(i,1),t.deleteBuffer(r[n.id]),delete r[n.id],delete s[n.id]}return{bind:function(t,e){const n=e.program;i.uniformBlockBinding(t,n)},update:function(n,u){let d=r[n.id];void 0===d&&(!function(t){const e=t.uniforms;let n=0;const i=16;let r=0;for(let s=0,a=e.length;s<a;s++){const t=e[s],a={boundary:0,storage:0},o=Array.isArray(t.value)?t.value:[t.value];for(let e=0,n=o.length;e<n;e++){const t=c(o[e]);a.boundary+=t.boundary,a.storage+=t.storage}if(t.__data=new Float32Array(a.storage/Float32Array.BYTES_PER_ELEMENT),t.__offset=n,s>0){r=n%i;0!==r&&i-r-a.boundary<0&&(n+=i-r,t.__offset=n)}n+=a.storage}r=n%i,r>0&&(n+=i-r);t.__size=n,t.__cache={}}(n),d=function(e){const n=function(){for(let t=0;t<o;t++)if(-1===a.indexOf(t))return a.push(t),t;return 0}();e.__bindingPointIndex=n;const i=t.createBuffer(),r=e.__size,s=e.usage;return t.bindBuffer(t.UNIFORM_BUFFER,i),t.bufferData(t.UNIFORM_BUFFER,r,s),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,n,i),i}(n),r[n.id]=d,n.addEventListener("dispose",h));const p=u.program;i.updateUBOMapping(n,p);const f=e.render.frame;s[n.id]!==f&&(!function(e){const n=r[e.id],i=e.uniforms,s=e.__cache;t.bindBuffer(t.UNIFORM_BUFFER,n);for(let r=0,a=i.length;r<a;r++){const e=i[r];if(!0===l(e,r,s)){const n=e.__offset,i=Array.isArray(e.value)?e.value:[e.value];let r=0;for(let s=0;s<i.length;s++){const a=i[s],o=c(a);"number"==typeof a?(e.__data[0]=a,t.bufferSubData(t.UNIFORM_BUFFER,n+r,e.__data)):a.isMatrix3?(e.__data[0]=a.elements[0],e.__data[1]=a.elements[1],e.__data[2]=a.elements[2],e.__data[3]=a.elements[0],e.__data[4]=a.elements[3],e.__data[5]=a.elements[4],e.__data[6]=a.elements[5],e.__data[7]=a.elements[0],e.__data[8]=a.elements[6],e.__data[9]=a.elements[7],e.__data[10]=a.elements[8],e.__data[11]=a.elements[0]):(a.toArray(e.__data,r),r+=o.storage/Float32Array.BYTES_PER_ELEMENT)}t.bufferSubData(t.UNIFORM_BUFFER,n,e.__data)}}t.bindBuffer(t.UNIFORM_BUFFER,null)}(n),s[n.id]=f)},dispose:function(){for(const e in r)t.deleteBuffer(r[e]);a=[],r={},s={}}}}function oo(){const t=De("canvas");return t.style.display="block",t}class lo{constructor(t={}){const{canvas:e=oo(),context:n=null,depth:i=!0,stencil:r=!0,alpha:s=!1,antialias:a=!1,premultipliedAlpha:o=!0,preserveDrawingBuffer:l=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:h=!1}=t;let u;this.isWebGLRenderer=!0,u=null!==n?n.getContextAttributes().alpha:s;const d=new Uint32Array(4),p=new Int32Array(4);let f=null,m=null;const g=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=ie,this.useLegacyLights=!0,this.toneMapping=D,this.toneMappingExposure=1;const _=this;let y=!1,x=0,M=0,S=null,b=-1,T=null;const E=new Ke,A=new Ke;let P=null;const U=new bi(0);let L=0,I=e.width,O=e.height,N=1,F=null,B=null;const z=new Ke(0,0,I,O),k=new Ke(0,0,I,O);let G=!1;const V=new Cr;let H=!1,W=!1,j=null;const X=new In,q=new Ce,Y=new nn,Z={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function J(){return null===S?N:1}let K,$,Q,it,ut,dt,pt,vt,_t,yt,xt,Mt,St,bt,wt,Tt,Et,At,Ct,Rt,Pt,Ut,Lt,It,Dt=n;function Ot(t,n){for(let i=0;i<t.length;i++){const r=t[i],s=e.getContext(r,n);if(null!==s)return s}return null}try{const t={alpha:!0,depth:i,stencil:r,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${w}`),e.addEventListener("webglcontextlost",Bt,!1),e.addEventListener("webglcontextrestored",zt,!1),e.addEventListener("webglcontextcreationerror",kt,!1),null===Dt){const e=["webgl2","webgl","experimental-webgl"];if(!0===_.isWebGL1Renderer&&e.shift(),Dt=Ot(e,t),null===Dt)throw Ot(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}WebGLRenderingContext,void 0===Dt.getShaderPrecisionFormat&&(Dt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch($t){throw $t}function Nt(){K=new rs(Dt),$=new zr(Dt,K,t),K.init($),Ut=new $a(Dt,K,$),Q=new Ja(Dt,K,$),it=new os(Dt),ut=new Na,dt=new Ka(Dt,K,Q,ut,$,Ut,it),pt=new Gr(_),vt=new is(_),_t=new Pr(Dt,$),Lt=new Fr(Dt,K,_t,$),yt=new ss(Dt,_t,it,Lt),xt=new us(Dt,yt,_t,it),Ct=new hs(Dt,$,dt),Tt=new kr(ut),Mt=new Oa(_,pt,vt,K,$,Lt,Tt),St=new so(_,ut),bt=new ka,wt=new Xa(K,$),At=new Nr(_,pt,vt,Q,xt,u,o),Et=new Za(_,xt,$),It=new ao(Dt,it,$,Q),Rt=new Br(Dt,K,it,$),Pt=new as(Dt,K,it,$),it.programs=Mt.programs,_.capabilities=$,_.extensions=K,_.properties=ut,_.renderLists=bt,_.shadowMap=Et,_.state=Q,_.info=it}Nt();const Ft=new ro(_,Dt);function Bt(t){t.preventDefault(),y=!0}function zt(){y=!1;const t=it.autoReset,e=Et.enabled,n=Et.autoUpdate,i=Et.needsUpdate,r=Et.type;Nt(),it.autoReset=t,Et.enabled=e,Et.autoUpdate=n,Et.needsUpdate=i,Et.type=r}function kt(t){}function Gt(t){const e=t.target;e.removeEventListener("dispose",Gt),function(t){(function(t){const e=ut.get(t).programs;void 0!==e&&(e.forEach((function(t){Mt.releaseProgram(t)})),t.isShaderMaterial&&Mt.releaseShaderCache(t))})(t),ut.remove(t)}(e)}this.xr=Ft,this.getContext=function(){return Dt},this.getContextAttributes=function(){return Dt.getContextAttributes()},this.forceContextLoss=function(){const t=K.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=K.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return N},this.setPixelRatio=function(t){void 0!==t&&(N=t,this.setSize(I,O,!1))},this.getSize=function(t){return t.set(I,O)},this.setSize=function(t,n,i=!0){Ft.isPresenting||(I=t,O=n,e.width=Math.floor(t*N),e.height=Math.floor(n*N),!0===i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(I*N,O*N).floor()},this.setDrawingBufferSize=function(t,n,i){I=t,O=n,N=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(E)},this.getViewport=function(t){return t.copy(z)},this.setViewport=function(t,e,n,i){t.isVector4?z.set(t.x,t.y,t.z,t.w):z.set(t,e,n,i),Q.viewport(E.copy(z).multiplyScalar(N).floor())},this.getScissor=function(t){return t.copy(k)},this.setScissor=function(t,e,n,i){t.isVector4?k.set(t.x,t.y,t.z,t.w):k.set(t,e,n,i),Q.scissor(A.copy(k).multiplyScalar(N).floor())},this.getScissorTest=function(){return G},this.setScissorTest=function(t){Q.setScissorTest(G=t)},this.setOpaqueSort=function(t){F=t},this.setTransparentSort=function(t){B=t},this.getClearColor=function(t){return t.copy(At.getClearColor())},this.setClearColor=function(){At.setClearColor.apply(At,arguments)},this.getClearAlpha=function(){return At.getClearAlpha()},this.setClearAlpha=function(){At.setClearAlpha.apply(At,arguments)},this.clear=function(t=!0,e=!0,n=!0){let i=0;if(t){let t=!1;if(null!==S){const e=S.texture.format;t=e===gt||e===mt||e===ft}if(t){const t=S.texture.type,e=t===et||t===rt||t===nt||t===ct||t===ot||t===lt,n=At.getClearColor(),i=At.getClearAlpha(),r=n.r,s=n.g,a=n.b,o=ut.get(S).__webglFramebuffer;e?(d[0]=r,d[1]=s,d[2]=a,d[3]=i,Dt.clearBufferuiv(Dt.COLOR,o,d)):(p[0]=r,p[1]=s,p[2]=a,p[3]=i,Dt.clearBufferiv(Dt.COLOR,o,p))}else i|=Dt.COLOR_BUFFER_BIT}e&&(i|=Dt.DEPTH_BUFFER_BIT),n&&(i|=Dt.STENCIL_BUFFER_BIT),Dt.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Bt,!1),e.removeEventListener("webglcontextrestored",zt,!1),e.removeEventListener("webglcontextcreationerror",kt,!1),bt.dispose(),wt.dispose(),ut.dispose(),pt.dispose(),vt.dispose(),xt.dispose(),Lt.dispose(),It.dispose(),Mt.dispose(),Ft.dispose(),Ft.removeEventListener("sessionstart",Ht),Ft.removeEventListener("sessionend",Wt),j&&(j.dispose(),j=null),jt.stop()},this.renderBufferDirect=function(t,e,n,i,r,s){null===e&&(e=Z);const a=r.isMesh&&r.matrixWorld.determinant()<0,o=function(t,e,n,i,r){!0!==e.isScene&&(e=Z);dt.resetTextureUnits();const s=e.fog,a=i.isMeshStandardMaterial?e.environment:null,o=null===S?_.outputColorSpace:!0===S.isXRRenderTarget?S.texture.colorSpace:re,l=(i.isMeshStandardMaterial?vt:pt).get(i.envMap||a),c=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,h=!!n.attributes.tangent&&(!!i.normalMap||i.anisotropy>0),u=!!n.morphAttributes.position,d=!!n.morphAttributes.normal,p=!!n.morphAttributes.color,f=i.toneMapped?_.toneMapping:D,g=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,v=void 0!==g?g.length:0,y=ut.get(i),x=m.state.lights;if(!0===H&&(!0===W||t!==T)){const e=t===T&&i.id===b;Tt.setState(i,t,e)}let M=!1;i.version===y.__version?y.needsLights&&y.lightsStateVersion!==x.state.version||y.outputColorSpace!==o||r.isInstancedMesh&&!1===y.instancing?M=!0:r.isInstancedMesh||!0!==y.instancing?r.isSkinnedMesh&&!1===y.skinning?M=!0:r.isSkinnedMesh||!0!==y.skinning?y.envMap!==l||!0===i.fog&&y.fog!==s?M=!0:void 0===y.numClippingPlanes||y.numClippingPlanes===Tt.numPlanes&&y.numIntersection===Tt.numIntersection?(y.vertexAlphas!==c||y.vertexTangents!==h||y.morphTargets!==u||y.morphNormals!==d||y.morphColors!==p||y.toneMapping!==f||!0===$.isWebGL2&&y.morphTargetsCount!==v)&&(M=!0):M=!0:M=!0:M=!0:(M=!0,y.__version=i.version);let w=y.currentProgram;!0===M&&(w=Jt(i,e,r));let E=!1,A=!1,C=!1;const R=w.getUniforms(),P=y.uniforms;Q.useProgram(w.program)&&(E=!0,A=!0,C=!0);i.id!==b&&(b=i.id,A=!0);if(E||T!==t){if(R.setValue(Dt,"projectionMatrix",t.projectionMatrix),$.logarithmicDepthBuffer&&R.setValue(Dt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),T!==t&&(T=t,A=!0,C=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){const e=R.map.cameraPosition;void 0!==e&&e.setValue(Dt,Y.setFromMatrixPosition(t.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&R.setValue(Dt,"isOrthographic",!0===t.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||r.isSkinnedMesh)&&R.setValue(Dt,"viewMatrix",t.matrixWorldInverse)}if(r.isSkinnedMesh){R.setOptional(Dt,r,"bindMatrix"),R.setOptional(Dt,r,"bindMatrixInverse");const t=r.skeleton;t&&$.floatVertexTextures&&(null===t.boneTexture&&t.computeBoneTexture(),R.setValue(Dt,"boneTexture",t.boneTexture,dt),R.setValue(Dt,"boneTextureSize",t.boneTextureSize))}const U=n.morphAttributes;(void 0!==U.position||void 0!==U.normal||void 0!==U.color&&!0===$.isWebGL2)&&Ct.update(r,n,w);(A||y.receiveShadow!==r.receiveShadow)&&(y.receiveShadow=r.receiveShadow,R.setValue(Dt,"receiveShadow",r.receiveShadow));i.isMeshGouraudMaterial&&null!==i.envMap&&(P.envMap.value=l,P.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1);A&&(R.setValue(Dt,"toneMappingExposure",_.toneMappingExposure),y.needsLights&&(I=C,(L=P).ambientLightColor.needsUpdate=I,L.lightProbe.needsUpdate=I,L.directionalLights.needsUpdate=I,L.directionalLightShadows.needsUpdate=I,L.pointLights.needsUpdate=I,L.pointLightShadows.needsUpdate=I,L.spotLights.needsUpdate=I,L.spotLightShadows.needsUpdate=I,L.rectAreaLights.needsUpdate=I,L.hemisphereLights.needsUpdate=I),s&&!0===i.fog&&St.refreshFogUniforms(P,s),St.refreshMaterialUniforms(P,i,N,O,j),ma.upload(Dt,y.uniformsList,P,dt));var L,I;i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(ma.upload(Dt,y.uniformsList,P,dt),i.uniformsNeedUpdate=!1);i.isSpriteMaterial&&R.setValue(Dt,"center",r.center);if(R.setValue(Dt,"modelViewMatrix",r.modelViewMatrix),R.setValue(Dt,"normalMatrix",r.normalMatrix),R.setValue(Dt,"modelMatrix",r.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial){const t=i.uniformsGroups;for(let e=0,n=t.length;e<n;e++)if($.isWebGL2){const n=t[e];It.update(n,w),It.bind(n,w)}}return w}(t,e,n,i,r);Q.setMaterial(i,a);let l=n.index,c=1;!0===i.wireframe&&(l=yt.getWireframeAttribute(n),c=2);const h=n.drawRange,u=n.attributes.position;let d=h.start*c,p=(h.start+h.count)*c;null!==s&&(d=Math.max(d,s.start*c),p=Math.min(p,(s.start+s.count)*c)),null!==l?(d=Math.max(d,0),p=Math.min(p,l.count)):null!=u&&(d=Math.max(d,0),p=Math.min(p,u.count));const f=p-d;if(f<0||f===1/0)return;let g;Lt.setup(r,i,o,n,l);let v=Rt;if(null!==l&&(g=_t.get(l),v=Pt,v.setIndex(g)),r.isMesh)!0===i.wireframe?(Q.setLineWidth(i.wireframeLinewidth*J()),v.setMode(Dt.LINES)):v.setMode(Dt.TRIANGLES);else if(r.isLine){let t=i.linewidth;void 0===t&&(t=1),Q.setLineWidth(t*J()),r.isLineSegments?v.setMode(Dt.LINES):r.isLineLoop?v.setMode(Dt.LINE_LOOP):v.setMode(Dt.LINE_STRIP)}else r.isPoints?v.setMode(Dt.POINTS):r.isSprite&&v.setMode(Dt.TRIANGLES);if(r.isInstancedMesh)v.renderInstances(d,f,r.count);else if(n.isInstancedBufferGeometry){const t=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,e=Math.min(n.instanceCount,t);v.renderInstances(d,f,e)}else v.render(d,f)},this.compile=function(t,e){function n(t,e,n){!0===t.transparent&&2===t.side&&!1===t.forceSinglePass?(t.side=R,t.needsUpdate=!0,Jt(t,e,n),t.side=C,t.needsUpdate=!0,Jt(t,e,n),t.side=2):Jt(t,e,n)}m=wt.get(t),m.init(),v.push(m),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))})),m.setupLights(_.useLegacyLights),t.traverse((function(e){const i=e.material;if(i)if(Array.isArray(i))for(let r=0;r<i.length;r++){n(i[r],t,e)}else n(i,t,e)})),v.pop(),m=null};let Vt=null;function Ht(){jt.stop()}function Wt(){jt.start()}const jt=new Rr;function Xt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)m.pushLight(t),t.castShadow&&m.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||V.intersectsSprite(t)){i&&Y.setFromMatrixPosition(t.matrixWorld).applyMatrix4(X);const e=xt.update(t),r=t.material;r.visible&&f.push(t,e,r,n,Y.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||V.intersectsObject(t))){t.isSkinnedMesh&&t.skeleton.frame!==it.render.frame&&(t.skeleton.update(),t.skeleton.frame=it.render.frame);const e=xt.update(t),r=t.material;if(i&&(void 0!==t.boundingSphere?(null===t.boundingSphere&&t.computeBoundingSphere(),Y.copy(t.boundingSphere.center)):(null===e.boundingSphere&&e.computeBoundingSphere(),Y.copy(e.boundingSphere.center)),Y.applyMatrix4(t.matrixWorld).applyMatrix4(X)),Array.isArray(r)){const i=e.groups;for(let s=0,a=i.length;s<a;s++){const a=i[s],o=r[a.materialIndex];o&&o.visible&&f.push(t,e,o,n,Y.z,a)}}else r.visible&&f.push(t,e,r,n,Y.z,null)}const r=t.children;for(let s=0,a=r.length;s<a;s++)Xt(r[s],e,n,i)}function qt(t,e,n,i){const r=t.opaque,s=t.transmissive,o=t.transparent;m.setupLightsView(n),!0===H&&Tt.setGlobalState(_.clippingPlanes,n),s.length>0&&function(t,e,n,i){const r=$.isWebGL2;null===j&&(j=new $e(1,1,{generateMipmaps:!0,type:K.has("EXT_color_buffer_half_float")?at:et,minFilter:tt,samples:r&&!0===a?4:0}));_.getDrawingBufferSize(q),r?j.setSize(q.x,q.y):j.setSize(we(q.x),we(q.y));const s=_.getRenderTarget();_.setRenderTarget(j),_.getClearColor(U),L=_.getClearAlpha(),L<1&&_.setClearColor(16777215,.5);_.clear();const o=_.toneMapping;_.toneMapping=D,Yt(t,n,i),dt.updateMultisampleRenderTarget(j),dt.updateRenderTargetMipmap(j);let l=!1;for(let a=0,c=e.length;a<c;a++){const t=e[a],r=t.object,s=t.geometry,o=t.material,c=t.group;if(2===o.side&&r.layers.test(i.layers)){const t=o.side;o.side=R,o.needsUpdate=!0,Zt(r,n,i,s,o,c),o.side=t,o.needsUpdate=!0,l=!0}}!0===l&&(dt.updateMultisampleRenderTarget(j),dt.updateRenderTargetMipmap(j));_.setRenderTarget(s),_.setClearColor(U,L),_.toneMapping=o}(r,s,e,n),i&&Q.viewport(E.copy(i)),r.length>0&&Yt(r,e,n),s.length>0&&Yt(s,e,n),o.length>0&&Yt(o,e,n),Q.buffers.depth.setTest(!0),Q.buffers.depth.setMask(!0),Q.buffers.color.setMask(!0),Q.setPolygonOffset(!1)}function Yt(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let r=0,s=t.length;r<s;r++){const s=t[r],a=s.object,o=s.geometry,l=null===i?s.material:i,c=s.group;a.layers.test(n.layers)&&Zt(a,e,n,o,l,c)}}function Zt(t,e,n,i,r,s){t.onBeforeRender(_,e,n,i,r,s),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),r.onBeforeRender(_,e,n,i,t,s),!0===r.transparent&&2===r.side&&!1===r.forceSinglePass?(r.side=R,r.needsUpdate=!0,_.renderBufferDirect(n,e,i,r,t,s),r.side=C,r.needsUpdate=!0,_.renderBufferDirect(n,e,i,r,t,s),r.side=2):_.renderBufferDirect(n,e,i,r,t,s),t.onAfterRender(_,e,n,i,r,s)}function Jt(t,e,n){!0!==e.isScene&&(e=Z);const i=ut.get(t),r=m.state.lights,s=m.state.shadowsArray,a=r.state.version,o=Mt.getParameters(t,r.state,s,e,n),l=Mt.getProgramCacheKey(o);let c=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=(t.isMeshStandardMaterial?vt:pt).get(t.envMap||i.environment),void 0===c&&(t.addEventListener("dispose",Gt),c=new Map,i.programs=c);let h=c.get(l);if(void 0!==h){if(i.currentProgram===h&&i.lightsStateVersion===a)return Kt(t,o),h}else o.uniforms=Mt.getUniforms(t),t.onBuild(n,o,_),t.onBeforeCompile(o,_),h=Mt.acquireProgram(o,l),c.set(l,h),i.uniforms=o.uniforms;const u=i.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(u.clippingPlanes=Tt.uniform),Kt(t,o),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=a,i.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotLightMatrix.value=r.state.spotLightMatrix,u.spotLightMap.value=r.state.spotLightMap,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix);const d=h.getUniforms(),p=ma.seqWithValue(d.seq,u);return i.currentProgram=h,i.uniformsList=p,h}function Kt(t,e){const n=ut.get(t);n.outputColorSpace=e.outputColorSpace,n.instancing=e.instancing,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphColors=e.morphColors,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents,n.toneMapping=e.toneMapping}jt.setAnimationLoop((function(t){Vt&&Vt(t)})),"undefined"!=typeof self&&jt.setContext(self),this.setAnimationLoop=function(t){Vt=t,Ft.setAnimationLoop(t),null===t?jt.stop():jt.start()},Ft.addEventListener("sessionstart",Ht),Ft.addEventListener("sessionend",Wt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return;if(!0===y)return;!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),!0===Ft.enabled&&!0===Ft.isPresenting&&(e=Ft.updateCameraXR(e)),!0===t.isScene&&t.onBeforeRender(_,t,e,S),m=wt.get(t,v.length),m.init(),v.push(m),X.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),V.setFromProjectionMatrix(X),W=this.localClippingEnabled,H=Tt.init(this.clippingPlanes,W),f=bt.get(t,g.length),f.init(),g.push(f),Xt(t,e,0,_.sortObjects),f.finish(),!0===_.sortObjects&&f.sort(F,B),!0===H&&Tt.beginShadows();const n=m.state.shadowsArray;if(Et.render(n,t,e),!0===H&&Tt.endShadows(),!0===this.info.autoReset&&this.info.reset(),this.info.render.frame++,At.render(f,t),m.setupLights(_.useLegacyLights),e.isArrayCamera){const n=e.cameras;for(let e=0,i=n.length;e<i;e++){const i=n[e];qt(f,t,i,i.viewport)}}else qt(f,t,e);null!==S&&(dt.updateMultisampleRenderTarget(S),dt.updateRenderTargetMipmap(S)),!0===t.isScene&&t.onAfterRender(_,t,e),Lt.resetDefaultState(),b=-1,T=null,v.pop(),m=v.length>0?v[v.length-1]:null,g.pop(),f=g.length>0?g[g.length-1]:null},this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(t,e,n){ut.get(t.texture).__webglTexture=e,ut.get(t.depthTexture).__webglTexture=n;const i=ut.get(t);i.__hasExternalTextures=!0,i.__hasExternalTextures&&(i.__autoAllocateDepthBuffer=void 0===n,i.__autoAllocateDepthBuffer||!0===K.has("WEBGL_multisampled_render_to_texture")&&(i.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(t,e){const n=ut.get(t);n.__webglFramebuffer=e,n.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,n=0){S=t,x=e,M=n;let i=!0,r=null,s=!1,a=!1;if(t){const n=ut.get(t);void 0!==n.__useDefaultFramebuffer?(Q.bindFramebuffer(Dt.FRAMEBUFFER,null),i=!1):void 0===n.__webglFramebuffer?dt.setupRenderTarget(t):n.__hasExternalTextures&&dt.rebindTextures(t,ut.get(t.texture).__webglTexture,ut.get(t.depthTexture).__webglTexture);const o=t.texture;(o.isData3DTexture||o.isDataArrayTexture||o.isCompressedArrayTexture)&&(a=!0);const l=ut.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(r=l[e],s=!0):r=$.isWebGL2&&t.samples>0&&!1===dt.useMultisampledRTT(t)?ut.get(t).__webglMultisampledFramebuffer:l,E.copy(t.viewport),A.copy(t.scissor),P=t.scissorTest}else E.copy(z).multiplyScalar(N).floor(),A.copy(k).multiplyScalar(N).floor(),P=G;if(Q.bindFramebuffer(Dt.FRAMEBUFFER,r)&&$.drawBuffers&&i&&Q.drawBuffers(t,r),Q.viewport(E),Q.scissor(A),Q.setScissorTest(P),s){const i=ut.get(t.texture);Dt.framebufferTexture2D(Dt.FRAMEBUFFER,Dt.COLOR_ATTACHMENT0,Dt.TEXTURE_CUBE_MAP_POSITIVE_X+e,i.__webglTexture,n)}else if(a){const i=ut.get(t.texture),r=e||0;Dt.framebufferTextureLayer(Dt.FRAMEBUFFER,Dt.COLOR_ATTACHMENT0,i.__webglTexture,n||0,r)}b=-1},this.readRenderTargetPixels=function(t,e,n,i,r,s,a){if(!t||!t.isWebGLRenderTarget)return;let o=ut.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){Q.bindFramebuffer(Dt.FRAMEBUFFER,o);try{const a=t.texture,o=a.format,l=a.type;if(o!==ht&&Ut.convert(o)!==Dt.getParameter(Dt.IMPLEMENTATION_COLOR_READ_FORMAT))return;const c=l===at&&(K.has("EXT_color_buffer_half_float")||$.isWebGL2&&K.has("EXT_color_buffer_float"));if(!(l===et||Ut.convert(l)===Dt.getParameter(Dt.IMPLEMENTATION_COLOR_READ_TYPE)||l===st&&($.isWebGL2||K.has("OES_texture_float")||K.has("WEBGL_color_buffer_float"))||c))return;e>=0&&e<=t.width-i&&n>=0&&n<=t.height-r&&Dt.readPixels(e,n,i,r,Ut.convert(o),Ut.convert(l),s)}finally{const t=null!==S?ut.get(S).__webglFramebuffer:null;Q.bindFramebuffer(Dt.FRAMEBUFFER,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){const i=Math.pow(2,-n),r=Math.floor(e.image.width*i),s=Math.floor(e.image.height*i);dt.setTexture2D(e,0),Dt.copyTexSubImage2D(Dt.TEXTURE_2D,n,0,0,t.x,t.y,r,s),Q.unbindTexture()},this.copyTextureToTexture=function(t,e,n,i=0){const r=e.image.width,s=e.image.height,a=Ut.convert(n.format),o=Ut.convert(n.type);dt.setTexture2D(n,0),Dt.pixelStorei(Dt.UNPACK_FLIP_Y_WEBGL,n.flipY),Dt.pixelStorei(Dt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),Dt.pixelStorei(Dt.UNPACK_ALIGNMENT,n.unpackAlignment),e.isDataTexture?Dt.texSubImage2D(Dt.TEXTURE_2D,i,t.x,t.y,r,s,a,o,e.image.data):e.isCompressedTexture?Dt.compressedTexSubImage2D(Dt.TEXTURE_2D,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,a,e.mipmaps[0].data):Dt.texSubImage2D(Dt.TEXTURE_2D,i,t.x,t.y,a,o,e.image),0===i&&n.generateMipmaps&&Dt.generateMipmap(Dt.TEXTURE_2D),Q.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,i,r=0){if(_.isWebGL1Renderer)return;const s=t.max.x-t.min.x+1,a=t.max.y-t.min.y+1,o=t.max.z-t.min.z+1,l=Ut.convert(i.format),c=Ut.convert(i.type);let h;if(i.isData3DTexture)dt.setTexture3D(i,0),h=Dt.TEXTURE_3D;else{if(!i.isDataArrayTexture)return;dt.setTexture2DArray(i,0),h=Dt.TEXTURE_2D_ARRAY}Dt.pixelStorei(Dt.UNPACK_FLIP_Y_WEBGL,i.flipY),Dt.pixelStorei(Dt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),Dt.pixelStorei(Dt.UNPACK_ALIGNMENT,i.unpackAlignment);const u=Dt.getParameter(Dt.UNPACK_ROW_LENGTH),d=Dt.getParameter(Dt.UNPACK_IMAGE_HEIGHT),p=Dt.getParameter(Dt.UNPACK_SKIP_PIXELS),f=Dt.getParameter(Dt.UNPACK_SKIP_ROWS),m=Dt.getParameter(Dt.UNPACK_SKIP_IMAGES),g=n.isCompressedTexture?n.mipmaps[0]:n.image;Dt.pixelStorei(Dt.UNPACK_ROW_LENGTH,g.width),Dt.pixelStorei(Dt.UNPACK_IMAGE_HEIGHT,g.height),Dt.pixelStorei(Dt.UNPACK_SKIP_PIXELS,t.min.x),Dt.pixelStorei(Dt.UNPACK_SKIP_ROWS,t.min.y),Dt.pixelStorei(Dt.UNPACK_SKIP_IMAGES,t.min.z),n.isDataTexture||n.isData3DTexture?Dt.texSubImage3D(h,r,e.x,e.y,e.z,s,a,o,l,c,g.data):n.isCompressedArrayTexture?Dt.compressedTexSubImage3D(h,r,e.x,e.y,e.z,s,a,o,l,g.data):Dt.texSubImage3D(h,r,e.x,e.y,e.z,s,a,o,l,c,g),Dt.pixelStorei(Dt.UNPACK_ROW_LENGTH,u),Dt.pixelStorei(Dt.UNPACK_IMAGE_HEIGHT,d),Dt.pixelStorei(Dt.UNPACK_SKIP_PIXELS,p),Dt.pixelStorei(Dt.UNPACK_SKIP_ROWS,f),Dt.pixelStorei(Dt.UNPACK_SKIP_IMAGES,m),0===r&&i.generateMipmaps&&Dt.generateMipmap(h),Q.unbindTexture()},this.initTexture=function(t){t.isCubeTexture?dt.setTextureCube(t,0):t.isData3DTexture?dt.setTexture3D(t,0):t.isDataArrayTexture||t.isCompressedArrayTexture?dt.setTexture2DArray(t,0):dt.setTexture2D(t,0),Q.unbindTexture()},this.resetState=function(){x=0,M=0,S=null,Q.reset(),Lt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ue}get physicallyCorrectLights(){return!this.useLegacyLights}set physicallyCorrectLights(t){this.useLegacyLights=!t}get outputEncoding(){return this.outputColorSpace===ie?te:Qt}set outputEncoding(t){this.outputColorSpace=t===te?ie:re}}class co extends lo{}co.prototype.isWebGL1Renderer=!0;class ho{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new bi(t),this.density=e}clone(){return new ho(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class uo{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new bi(t),this.near=e,this.far=n}clone(){return new uo(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class po extends ri{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(e.object.backgroundIntensity=this.backgroundIntensity),e}get autoUpdate(){return this.matrixWorldAutoUpdate}set autoUpdate(t){this.matrixWorldAutoUpdate=t}}class fo{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=le,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=_e()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=_e()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=_e()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const mo=new nn;class go{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)mo.fromBufferAttribute(this,e),mo.applyMatrix4(t),this.setXYZ(e,mo.x,mo.y,mo.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)mo.fromBufferAttribute(this,e),mo.applyNormalMatrix(t),this.setXYZ(e,mo.x,mo.y,mo.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)mo.fromBufferAttribute(this,e),mo.transformDirection(t),this.setXYZ(e,mo.x,mo.y,mo.z);return this}setX(t,e){return this.normalized&&(e=Ee(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=Ee(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=Ee(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=Ee(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=Te(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=Te(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=Te(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=Te(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=Ee(e,this.array),n=Ee(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=Ee(e,this.array),n=Ee(n,this.array),i=Ee(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.normalized&&(e=Ee(e,this.array),n=Ee(n,this.array),i=Ee(i,this.array),r=Ee(r,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this}clone(t){if(void 0===t){const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new Ii(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new go(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class vo extends _i{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new bi(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let _o;const yo=new nn,xo=new nn,Mo=new nn,So=new Ce,bo=new Ce,wo=new In,To=new nn,Eo=new nn,Ao=new nn,Co=new Ce,Ro=new Ce,Po=new Ce;class Uo extends ri{constructor(t){if(super(),this.isSprite=!0,this.type="Sprite",void 0===_o){_o=new Wi;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new fo(t,5);_o.setIndex([0,1,2,0,2,3]),_o.setAttribute("position",new go(e,3,0,!1)),_o.setAttribute("uv",new go(e,2,3,!1))}this.geometry=_o,this.material=void 0!==t?t:new vo,this.center=new Ce(.5,.5)}raycast(t,e){t.camera,xo.setFromMatrixScale(this.matrixWorld),wo.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Mo.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&xo.multiplyScalar(-Mo.z);const n=this.material.rotation;let i,r;0!==n&&(r=Math.cos(n),i=Math.sin(n));const s=this.center;Lo(To.set(-.5,-.5,0),Mo,s,xo,i,r),Lo(Eo.set(.5,-.5,0),Mo,s,xo,i,r),Lo(Ao.set(.5,.5,0),Mo,s,xo,i,r),Co.set(0,0),Ro.set(1,0),Po.set(1,1);let a=t.ray.intersectTriangle(To,Eo,Ao,!1,yo);if(null===a&&(Lo(Eo.set(-.5,.5,0),Mo,s,xo,i,r),Ro.set(0,1),a=t.ray.intersectTriangle(To,Ao,Eo,!1,yo),null===a))return;const o=t.ray.origin.distanceTo(yo);o<t.near||o>t.far||e.push({distance:o,point:yo.clone(),uv:gi.getInterpolation(yo,To,Eo,Ao,Co,Ro,Po,new Ce),face:null,object:this})}copy(t,e){return super.copy(t,e),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function Lo(t,e,n,i,r,s){So.subVectors(t,n).addScalar(.5).multiply(i),void 0!==r?(bo.x=s*So.x-r*So.y,bo.y=r*So.x+s*So.y):bo.copy(So),t.copy(e),t.x+=bo.x,t.y+=bo.y,t.applyMatrix4(wo)}const Io=new nn,Do=new nn;class Oo extends ri{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const t=e[n];this.addLevel(t.object.clone(),t.distance,t.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let r;for(r=0;r<i.length&&!(e<i[r].distance);r++);return i.splice(r,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let i=e[n].distance;if(e[n].object.visible&&(i-=i*e[n].hysteresis),t<i)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){Io.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(Io);this.getObjectForDistance(n).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){Io.setFromMatrixPosition(t.matrixWorld),Do.setFromMatrixPosition(this.matrixWorld);const n=Io.distanceTo(Do)/t.zoom;let i,r;for(e[0].object.visible=!0,i=1,r=e.length;i<r;i++){let t=e[i].distance;if(e[i].object.visible&&(t-=t*e[i].hysteresis),!(n>=t))break;e[i-1].object.visible=!1,e[i].object.visible=!0}for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const t=n[i];e.object.levels.push({object:t.object.uuid,distance:t.distance,hysteresis:t.hysteresis})}return e}}const No=new nn,Fo=new Ke,Bo=new Ke,zo=new nn,ko=new In,Go=new nn,Vo=new wn,Ho=new In,Wo=new Ln;class jo extends lr{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new In,this.bindMatrixInverse=new In,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;null===this.boundingBox&&(this.boundingBox=new an),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)Go.fromBufferAttribute(e,n),this.applyBoneTransform(n,Go),this.boundingBox.expandByPoint(Go)}computeBoundingSphere(){const t=this.geometry;null===this.boundingSphere&&(this.boundingSphere=new wn),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)Go.fromBufferAttribute(e,n),this.applyBoneTransform(n,Go),this.boundingSphere.expandByPoint(Go)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;void 0!==n&&(null===this.boundingSphere&&this.computeBoundingSphere(),Vo.copy(this.boundingSphere),Vo.applyMatrix4(i),!1!==t.ray.intersectsSphere(Vo)&&(Ho.copy(i).invert(),Wo.copy(t.ray).applyMatrix4(Ho),null!==this.boundingBox&&!1===Wo.intersectsBox(this.boundingBox)||this._computeIntersections(t,e,Wo)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Ke,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode&&this.bindMatrixInverse.copy(this.bindMatrix).invert()}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;Fo.fromBufferAttribute(i.attributes.skinIndex,t),Bo.fromBufferAttribute(i.attributes.skinWeight,t),No.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let r=0;r<4;r++){const t=Bo.getComponent(r);if(0!==t){const i=Fo.getComponent(r);ko.multiplyMatrices(n.bones[i].matrixWorld,n.boneInverses[i]),e.addScaledVector(zo.copy(No).applyMatrix4(ko),t)}}return e.applyMatrix4(this.bindMatrixInverse)}boneTransform(t,e){return this.applyBoneTransform(t,e)}}class Xo extends ri{constructor(){super(),this.isBone=!0,this.type="Bone"}}class qo extends Je{constructor(t=null,e=1,n=1,i,r,s,a,o,l=1003,c=1003,h,u){super(null,s,a,o,l,c,i,r,h,u),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Yo=new In,Zo=new In;class Jo{constructor(t=[],e=[]){this.uuid=_e(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new In)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new In;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,s=t.length;r<s;r++){const i=t[r]?t[r].matrixWorld:Zo;Yo.multiplyMatrices(i,e[r]),Yo.toArray(n,16*r)}null!==i&&(i.needsUpdate=!0)}clone(){return new Jo(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(4*this.bones.length);t=be(t),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new qo(e,t,t,ht,st);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this.boneTextureSize=t,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){let i=e[t.bones[n]];void 0===i&&(i=new Xo),this.bones.push(i),this.boneInverses.push((new In).fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,r=e.length;i<r;i++){const r=e[i];t.bones.push(r.uuid);const s=n[i];t.boneInverses.push(s.toArray())}return t}}class Ko extends Ii{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const $o=new In,Qo=new In,tl=[],el=new an,nl=new In,il=new lr,rl=new wn;class sl extends lr{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new Ko(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,nl)}computeBoundingBox(){const t=this.geometry,e=this.count;null===this.boundingBox&&(this.boundingBox=new an),null===t.boundingBox&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,$o),el.copy(t.boundingBox).applyMatrix4($o),this.boundingBox.union(el)}computeBoundingSphere(){const t=this.geometry,e=this.count;null===this.boundingSphere&&(this.boundingSphere=new wn),null===t.boundingSphere&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,$o),rl.copy(t.boundingSphere).applyMatrix4($o),this.boundingSphere.union(rl)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const n=this.matrixWorld,i=this.count;if(il.geometry=this.geometry,il.material=this.material,void 0!==il.material&&(null===this.boundingSphere&&this.computeBoundingSphere(),rl.copy(this.boundingSphere),rl.applyMatrix4(n),!1!==t.ray.intersectsSphere(rl)))for(let r=0;r<i;r++){this.getMatrixAt(r,$o),Qo.multiplyMatrices(n,$o),il.matrixWorld=Qo,il.raycast(t,tl);for(let t=0,n=tl.length;t<n;t++){const n=tl[t];n.instanceId=r,n.object=this,e.push(n)}tl.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new Ko(new Float32Array(3*this.instanceMatrix.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class al extends _i{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new bi(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const ol=new nn,ll=new nn,cl=new In,hl=new Ln,ul=new wn;class dl extends ri{constructor(t=new Wi,e=new al){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,i=e.count;t<i;t++)ol.fromBufferAttribute(e,t-1),ll.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=ol.distanceTo(ll);t.setAttribute("lineDistance",new Ni(n,1))}return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),ul.copy(n.boundingSphere),ul.applyMatrix4(i),ul.radius+=r,!1===t.ray.intersectsSphere(ul))return;cl.copy(i).invert(),hl.copy(t.ray).applyMatrix4(cl);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=new nn,c=new nn,h=new nn,u=new nn,d=this.isLineSegments?2:1,p=n.index,f=n.attributes.position;if(null!==p){for(let n=Math.max(0,s.start),i=Math.min(p.count,s.start+s.count)-1;n<i;n+=d){const i=p.getX(n),r=p.getX(n+1);l.fromBufferAttribute(f,i),c.fromBufferAttribute(f,r);if(hl.distanceSqToSegment(l,c,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const s=t.ray.origin.distanceTo(u);s<t.near||s>t.far||e.push({distance:s,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else{for(let n=Math.max(0,s.start),i=Math.min(f.count,s.start+s.count)-1;n<i;n+=d){l.fromBufferAttribute(f,n),c.fromBufferAttribute(f,n+1);if(hl.distanceSqToSegment(l,c,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const i=t.ray.origin.distanceTo(u);i<t.near||i>t.far||e.push({distance:i,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}const pl=new nn,fl=new nn;class ml extends dl{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,i=e.count;t<i;t+=2)pl.fromBufferAttribute(e,t),fl.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+pl.distanceTo(fl);t.setAttribute("lineDistance",new Ni(n,1))}return this}}class gl extends dl{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class vl extends _i{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new bi(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const _l=new In,yl=new Ln,xl=new wn,Ml=new nn;class Sl extends ri{constructor(t=new Wi,e=new vl){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold,s=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),xl.copy(n.boundingSphere),xl.applyMatrix4(i),xl.radius+=r,!1===t.ray.intersectsSphere(xl))return;_l.copy(i).invert(),yl.copy(t.ray).applyMatrix4(_l);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=n.index,c=n.attributes.position;if(null!==l){for(let n=Math.max(0,s.start),r=Math.min(l.count,s.start+s.count);n<r;n++){const r=l.getX(n);Ml.fromBufferAttribute(c,r),bl(Ml,r,o,i,t,e,this)}}else{for(let n=Math.max(0,s.start),r=Math.min(c.count,s.start+s.count);n<r;n++)Ml.fromBufferAttribute(c,n),bl(Ml,n,o,i,t,e,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function bl(t,e,n,i,r,s,a){const o=yl.distanceSqToPoint(t);if(o<n){const n=new nn;yl.closestPointToPoint(t,n),n.applyMatrix4(i);const l=r.ray.origin.distanceTo(n);if(l<r.near||l>r.far)return;s.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:e,face:null,object:a})}}class wl extends Je{constructor(t,e,n,i,r,s,a,o,l){super(t,e,n,i,r,s,a,o,l),this.isVideoTexture=!0,this.minFilter=void 0!==s?s:$,this.magFilter=void 0!==r?r:$,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){c.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1==="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Tl extends Je{constructor(t,e,n,i,r,s,a,o,l,c,h,u){super(null,s,a,o,l,c,i,r,h,u),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class El{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let s=1;s<=t;s++)n=this.getPoint(s/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const r=n.length;let s;s=e||t*n[r-1];let a,o=0,l=r-1;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),a=n[i]-s,a<0)o=i+1;else{if(!(a>0)){l=i;break}l=i-1}if(i=l,n[i]===s)return i/(r-1);const c=n[i];return(i+(s-c)/(n[i+1]-c))/(r-1)}getTangent(t,e){const n=1e-4;let i=t-n,r=t+n;i<0&&(i=0),r>1&&(r=1);const s=this.getPoint(i),a=this.getPoint(r),o=e||(s.isVector2?new Ce:new nn);return o.copy(a).sub(s).normalize(),o}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new nn,i=[],r=[],s=[],a=new nn,o=new In;for(let d=0;d<=t;d++){const e=d/t;i[d]=this.getTangentAt(e,new nn)}r[0]=new nn,s[0]=new nn;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);c<=l&&(l=c,n.set(1,0,0)),h<=l&&(l=h,n.set(0,1,0)),u<=l&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],a),s[0].crossVectors(i[0],r[0]);for(let d=1;d<=t;d++){if(r[d]=r[d-1].clone(),s[d]=s[d-1].clone(),a.crossVectors(i[d-1],i[d]),a.length()>Number.EPSILON){a.normalize();const t=Math.acos(ye(i[d-1].dot(i[d]),-1,1));r[d].applyMatrix4(o.makeRotationAxis(a,t))}s[d].crossVectors(i[d],r[d])}if(!0===e){let e=Math.acos(ye(r[0].dot(r[t]),-1,1));e/=t,i[0].dot(a.crossVectors(r[0],r[t]))>0&&(e=-e);for(let n=1;n<=t;n++)r[n].applyMatrix4(o.makeRotationAxis(i[n],e*n)),s[n].crossVectors(i[n],r[n])}return{tangents:i,normals:r,binormals:s}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Al extends El{constructor(t=0,e=0,n=1,i=1,r=0,s=2*Math.PI,a=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(t,e){const n=e||new Ce,i=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=s?0:i),!0!==this.aClockwise||s||(r===i?r=-i:r-=i);const a=this.aStartAngle+t*r;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,i=l-this.aY;o=n*t-i*e+this.aX,l=n*e+i*t+this.aY}return n.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class Cl extends Al{constructor(t,e,n,i,r,s){super(t,e,n,n,i,r,s),this.isArcCurve=!0,this.type="ArcCurve"}}function Rl(){let t=0,e=0,n=0,i=0;function r(r,s,a,o){t=r,e=a,n=-3*r+3*s-2*a-o,i=2*r-2*s+a+o}return{initCatmullRom:function(t,e,n,i,s){r(e,n,s*(n-t),s*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,s,a,o){let l=(e-t)/s-(n-t)/(s+a)+(n-e)/a,c=(n-e)/a-(i-e)/(a+o)+(i-n)/o;l*=a,c*=a,r(e,n,l,c)},calc:function(r){const s=r*r;return t+e*r+n*s+i*(s*r)}}}const Pl=new nn,Ul=new Rl,Ll=new Rl,Il=new Rl;class Dl extends El{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new nn){const n=e,i=this.points,r=i.length,s=(r-(this.closed?0:1))*t;let a,o,l=Math.floor(s),c=s-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:0===c&&l===r-1&&(l=r-2,c=1),this.closed||l>0?a=i[(l-1)%r]:(Pl.subVectors(i[0],i[1]).add(i[0]),a=Pl);const h=i[l%r],u=i[(l+1)%r];if(this.closed||l+2<r?o=i[(l+2)%r]:(Pl.subVectors(i[r-1],i[r-2]).add(i[r-1]),o=Pl),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(a.distanceToSquared(h),t),n=Math.pow(h.distanceToSquared(u),t),i=Math.pow(u.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),Ul.initNonuniformCatmullRom(a.x,h.x,u.x,o.x,e,n,i),Ll.initNonuniformCatmullRom(a.y,h.y,u.y,o.y,e,n,i),Il.initNonuniformCatmullRom(a.z,h.z,u.z,o.z,e,n,i)}else"catmullrom"===this.curveType&&(Ul.initCatmullRom(a.x,h.x,u.x,o.x,this.tension),Ll.initCatmullRom(a.y,h.y,u.y,o.y,this.tension),Il.initCatmullRom(a.z,h.z,u.z,o.z,this.tension));return n.set(Ul.calc(c),Ll.calc(c),Il.calc(c)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new nn).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Ol(t,e,n,i,r){const s=.5*(i-e),a=.5*(r-n),o=t*t;return(2*n-2*i+s+a)*(t*o)+(-3*n+3*i-2*s-a)*o+s*t+n}function Nl(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function Fl(t,e,n,i,r){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,r)}class Bl extends El{constructor(t=new Ce,e=new Ce,n=new Ce,i=new Ce){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new Ce){const n=e,i=this.v0,r=this.v1,s=this.v2,a=this.v3;return n.set(Fl(t,i.x,r.x,s.x,a.x),Fl(t,i.y,r.y,s.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class zl extends El{constructor(t=new nn,e=new nn,n=new nn,i=new nn){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new nn){const n=e,i=this.v0,r=this.v1,s=this.v2,a=this.v3;return n.set(Fl(t,i.x,r.x,s.x,a.x),Fl(t,i.y,r.y,s.y,a.y),Fl(t,i.z,r.z,s.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class kl extends El{constructor(t=new Ce,e=new Ce){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new Ce){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new Ce){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Gl extends El{constructor(t=new nn,e=new nn){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new nn){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new nn){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Vl extends El{constructor(t=new Ce,e=new Ce,n=new Ce){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Ce){const n=e,i=this.v0,r=this.v1,s=this.v2;return n.set(Nl(t,i.x,r.x,s.x),Nl(t,i.y,r.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Hl extends El{constructor(t=new nn,e=new nn,n=new nn){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new nn){const n=e,i=this.v0,r=this.v1,s=this.v2;return n.set(Nl(t,i.x,r.x,s.x),Nl(t,i.y,r.y,s.y),Nl(t,i.z,r.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Wl extends El{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new Ce){const n=e,i=this.points,r=(i.length-1)*t,s=Math.floor(r),a=r-s,o=i[0===s?s:s-1],l=i[s],c=i[s>i.length-2?i.length-1:s+1],h=i[s>i.length-3?i.length-1:s+2];return n.set(Ol(a,o.x,l.x,c.x,h.x),Ol(a,o.y,l.y,c.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new Ce).fromArray(n))}return this}}var jl=Object.freeze({__proto__:null,ArcCurve:Cl,CatmullRomCurve3:Dl,CubicBezierCurve:Bl,CubicBezierCurve3:zl,EllipseCurve:Al,LineCurve:kl,LineCurve3:Gl,QuadraticBezierCurve:Vl,QuadraticBezierCurve3:Hl,SplineCurve:Wl});class Xl extends El{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new kl(e,t))}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const t=i[r]-n,s=this.curves[r],a=s.getLength(),o=0===a?0:1-t/a;return s.getPointAt(o,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i],a=s.isEllipseCurve?2*t:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?t*s.points.length:t,o=s.getPoints(a);for(let t=0;t<o.length;t++){const i=o[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new jl[n.type]).fromJSON(n))}return this}}class ql extends Xl{constructor(t){super(),this.type="Path",this.currentPoint=new Ce,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new kl(this.currentPoint.clone(),new Ce(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new Vl(this.currentPoint.clone(),new Ce(t,e),new Ce(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,s){const a=new Bl(this.currentPoint.clone(),new Ce(t,e),new Ce(n,i),new Ce(r,s));return this.curves.push(a),this.currentPoint.set(r,s),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Wl(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,s){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+a,e+o,n,i,r,s),this}absarc(t,e,n,i,r,s){return this.absellipse(t,e,n,n,i,r,s),this}ellipse(t,e,n,i,r,s,a,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,n,i,r,s,a,o),this}absellipse(t,e,n,i,r,s,a,o){const l=new Al(t,e,n,i,r,s,a,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Yl extends Wi{constructor(t=[new Ce(0,-.5),new Ce(.5,0),new Ce(0,.5)],e=12,n=0,i=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=ye(i,0,2*Math.PI);const r=[],s=[],a=[],o=[],l=[],c=1/e,h=new nn,u=new Ce,d=new nn,p=new nn,f=new nn;let m=0,g=0;for(let v=0;v<=t.length-1;v++)switch(v){case 0:m=t[v+1].x-t[v].x,g=t[v+1].y-t[v].y,d.x=1*g,d.y=-m,d.z=0*g,f.copy(d),d.normalize(),o.push(d.x,d.y,d.z);break;case t.length-1:o.push(f.x,f.y,f.z);break;default:m=t[v+1].x-t[v].x,g=t[v+1].y-t[v].y,d.x=1*g,d.y=-m,d.z=0*g,p.copy(d),d.x+=f.x,d.y+=f.y,d.z+=f.z,d.normalize(),o.push(d.x,d.y,d.z),f.copy(p)}for(let v=0;v<=e;v++){const r=n+v*c*i,d=Math.sin(r),p=Math.cos(r);for(let n=0;n<=t.length-1;n++){h.x=t[n].x*d,h.y=t[n].y,h.z=t[n].x*p,s.push(h.x,h.y,h.z),u.x=v/e,u.y=n/(t.length-1),a.push(u.x,u.y);const i=o[3*n+0]*d,r=o[3*n+1],c=o[3*n+0]*p;l.push(i,r,c)}}for(let v=0;v<e;v++)for(let e=0;e<t.length-1;e++){const n=e+v*t.length,i=n,s=n+t.length,a=n+t.length+1,o=n+1;r.push(i,s,o),r.push(a,o,s)}this.setIndex(r),this.setAttribute("position",new Ni(s,3)),this.setAttribute("uv",new Ni(a,2)),this.setAttribute("normal",new Ni(l,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Yl(t.points,t.segments,t.phiStart,t.phiLength)}}class Zl extends Yl{constructor(t=1,e=1,n=4,i=8){const r=new ql;r.absarc(0,-e/2,t,1.5*Math.PI,0),r.absarc(0,e/2,t,0,.5*Math.PI),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:i}}static fromJSON(t){return new Zl(t.radius,t.length,t.capSegments,t.radialSegments)}}class Jl extends Wi{constructor(t=1,e=32,n=0,i=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const r=[],s=[],a=[],o=[],l=new nn,c=new Ce;s.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let h=0,u=3;h<=e;h++,u+=3){const r=n+h/e*i;l.x=t*Math.cos(r),l.y=t*Math.sin(r),s.push(l.x,l.y,l.z),a.push(0,0,1),c.x=(s[u]/t+1)/2,c.y=(s[u+1]/t+1)/2,o.push(c.x,c.y)}for(let h=1;h<=e;h++)r.push(h,h+1,0);this.setIndex(r),this.setAttribute("position",new Ni(s,3)),this.setAttribute("normal",new Ni(a,3)),this.setAttribute("uv",new Ni(o,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Jl(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class Kl extends Wi{constructor(t=1,e=1,n=1,i=32,r=1,s=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o};const l=this;i=Math.floor(i),r=Math.floor(r);const c=[],h=[],u=[],d=[];let p=0;const f=[],m=n/2;let g=0;function v(n){const r=p,s=new Ce,f=new nn;let v=0;const _=!0===n?t:e,y=!0===n?1:-1;for(let t=1;t<=i;t++)h.push(0,m*y,0),u.push(0,y,0),d.push(.5,.5),p++;const x=p;for(let t=0;t<=i;t++){const e=t/i*o+a,n=Math.cos(e),r=Math.sin(e);f.x=_*r,f.y=m*y,f.z=_*n,h.push(f.x,f.y,f.z),u.push(0,y,0),s.x=.5*n+.5,s.y=.5*r*y+.5,d.push(s.x,s.y),p++}for(let t=0;t<i;t++){const e=r+t,i=x+t;!0===n?c.push(i,i+1,e):c.push(i+1,i,e),v+=3}l.addGroup(g,v,!0===n?1:2),g+=v}!function(){const s=new nn,v=new nn;let _=0;const y=(e-t)/n;for(let l=0;l<=r;l++){const c=[],g=l/r,_=g*(e-t)+t;for(let t=0;t<=i;t++){const e=t/i,r=e*o+a,l=Math.sin(r),f=Math.cos(r);v.x=_*l,v.y=-g*n+m,v.z=_*f,h.push(v.x,v.y,v.z),s.set(l,y,f).normalize(),u.push(s.x,s.y,s.z),d.push(e,1-g),c.push(p++)}f.push(c)}for(let t=0;t<i;t++)for(let e=0;e<r;e++){const n=f[e][t],i=f[e+1][t],r=f[e+1][t+1],s=f[e][t+1];c.push(n,i,s),c.push(i,r,s),_+=6}l.addGroup(g,_,0),g+=_}(),!1===s&&(t>0&&v(!0),e>0&&v(!1)),this.setIndex(c),this.setAttribute("position",new Ni(h,3)),this.setAttribute("normal",new Ni(u,3)),this.setAttribute("uv",new Ni(d,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Kl(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class $l extends Kl{constructor(t=1,e=1,n=32,i=1,r=!1,s=0,a=2*Math.PI){super(0,t,e,n,i,r,s,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:s,thetaLength:a}}static fromJSON(t){return new $l(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Ql extends Wi{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const r=[],s=[];function a(t,e,n,i){const r=i+1,s=[];for(let a=0;a<=r;a++){s[a]=[];const i=t.clone().lerp(n,a/r),o=e.clone().lerp(n,a/r),l=r-a;for(let t=0;t<=l;t++)s[a][t]=0===t&&a===r?i:i.clone().lerp(o,t/l)}for(let a=0;a<r;a++)for(let t=0;t<2*(r-a)-1;t++){const e=Math.floor(t/2);t%2==0?(o(s[a][e+1]),o(s[a+1][e]),o(s[a][e])):(o(s[a][e+1]),o(s[a+1][e+1]),o(s[a+1][e]))}}function o(t){r.push(t.x,t.y,t.z)}function l(e,n){const i=3*e;n.x=t[i+0],n.y=t[i+1],n.z=t[i+2]}function c(t,e,n,i){i<0&&1===t.x&&(s[e]=t.x-1),0===n.x&&0===n.z&&(s[e]=i/2/Math.PI+.5)}function h(t){return Math.atan2(t.z,-t.x)}!function(t){const n=new nn,i=new nn,r=new nn;for(let s=0;s<e.length;s+=3)l(e[s+0],n),l(e[s+1],i),l(e[s+2],r),a(n,i,r,t)}(i),function(t){const e=new nn;for(let n=0;n<r.length;n+=3)e.x=r[n+0],e.y=r[n+1],e.z=r[n+2],e.normalize().multiplyScalar(t),r[n+0]=e.x,r[n+1]=e.y,r[n+2]=e.z}(n),function(){const t=new nn;for(let n=0;n<r.length;n+=3){t.x=r[n+0],t.y=r[n+1],t.z=r[n+2];const i=h(t)/2/Math.PI+.5,a=(e=t,Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5);s.push(i,1-a)}var e;(function(){const t=new nn,e=new nn,n=new nn,i=new nn,a=new Ce,o=new Ce,l=new Ce;for(let u=0,d=0;u<r.length;u+=9,d+=6){t.set(r[u+0],r[u+1],r[u+2]),e.set(r[u+3],r[u+4],r[u+5]),n.set(r[u+6],r[u+7],r[u+8]),a.set(s[d+0],s[d+1]),o.set(s[d+2],s[d+3]),l.set(s[d+4],s[d+5]),i.copy(t).add(e).add(n).divideScalar(3);const p=h(i);c(a,d+0,t,p),c(o,d+2,e,p),c(l,d+4,n,p)}})(),function(){for(let t=0;t<s.length;t+=6){const e=s[t+0],n=s[t+2],i=s[t+4],r=Math.max(e,n,i),a=Math.min(e,n,i);r>.9&&a<.1&&(e<.2&&(s[t+0]+=1),n<.2&&(s[t+2]+=1),i<.2&&(s[t+4]+=1))}}()}(),this.setAttribute("position",new Ni(r,3)),this.setAttribute("normal",new Ni(r.slice(),3)),this.setAttribute("uv",new Ni(s,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ql(t.vertices,t.indices,t.radius,t.details)}}class tc extends Ql{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new tc(t.radius,t.detail)}}const ec=new nn,nc=new nn,ic=new nn,rc=new gi;class sc extends Wi{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},null!==t){const n=4,i=Math.pow(10,n),r=Math.cos(ge*e),s=t.getIndex(),a=t.getAttribute("position"),o=s?s.count:a.count,l=[0,0,0],c=["a","b","c"],h=new Array(3),u={},d=[];for(let t=0;t<o;t+=3){s?(l[0]=s.getX(t),l[1]=s.getX(t+1),l[2]=s.getX(t+2)):(l[0]=t,l[1]=t+1,l[2]=t+2);const{a:e,b:n,c:o}=rc;if(e.fromBufferAttribute(a,l[0]),n.fromBufferAttribute(a,l[1]),o.fromBufferAttribute(a,l[2]),rc.getNormal(ic),h[0]=`${Math.round(e.x*i)},${Math.round(e.y*i)},${Math.round(e.z*i)}`,h[1]=`${Math.round(n.x*i)},${Math.round(n.y*i)},${Math.round(n.z*i)}`,h[2]=`${Math.round(o.x*i)},${Math.round(o.y*i)},${Math.round(o.z*i)}`,h[0]!==h[1]&&h[1]!==h[2]&&h[2]!==h[0])for(let t=0;t<3;t++){const e=(t+1)%3,n=h[t],i=h[e],s=rc[c[t]],a=rc[c[e]],o=`${n}_${i}`,p=`${i}_${n}`;p in u&&u[p]?(ic.dot(u[p].normal)<=r&&(d.push(s.x,s.y,s.z),d.push(a.x,a.y,a.z)),u[p]=null):o in u||(u[o]={index0:l[t],index1:l[e],normal:ic.clone()})}}for(const t in u)if(u[t]){const{index0:e,index1:n}=u[t];ec.fromBufferAttribute(a,e),nc.fromBufferAttribute(a,n),d.push(ec.x,ec.y,ec.z),d.push(nc.x,nc.y,nc.z)}this.setAttribute("position",new Ni(d,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class ac extends ql{constructor(t){super(t),this.uuid=_e(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new ql).fromJSON(n))}return this}}const oc=function(t,e,n=2){const i=e&&e.length,r=i?e[0]*n:t.length;let s=lc(t,0,r,n,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,c,h,u,d,p;if(i&&(s=function(t,e,n,i){const r=[];let s,a,o,l,c;for(s=0,a=e.length;s<a;s++)o=e[s]*i,l=s<a-1?e[s+1]*i:t.length,c=lc(t,o,l,i,!1),c===c.next&&(c.steiner=!0),r.push(yc(c));for(r.sort(mc),s=0;s<r.length;s++)n=gc(r[s],n);return n}(t,e,s,n)),t.length>80*n){o=c=t[0],l=h=t[1];for(let e=n;e<r;e+=n)u=t[e],d=t[e+1],u<o&&(o=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);p=Math.max(c-o,h-l),p=0!==p?32767/p:0}return hc(s,a,n,o,l,p,0),a};function lc(t,e,n,i,r){let s,a;if(r===function(t,e,n,i){let r=0;for(let s=e,a=n-i;s<n;s+=i)r+=(t[a]-t[s])*(t[s+1]+t[a+1]),a=s;return r}(t,e,n,i)>0)for(s=e;s<n;s+=i)a=Rc(s,t[s],t[s+1],a);else for(s=n-i;s>=e;s-=i)a=Rc(s,t[s],t[s+1],a);return a&&bc(a,a.next)&&(Pc(a),a=a.next),a}function cc(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!bc(i,i.next)&&0!==Sc(i.prev,i,i.next))i=i.next;else{if(Pc(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function hc(t,e,n,i,r,s,a){if(!t)return;!a&&s&&function(t,e,n,i){let r=t;do{0===r.z&&(r.z=_c(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){let e,n,i,r,s,a,o,l,c=1;do{for(n=t,t=null,s=null,a=0;n;){for(a++,i=n,o=0,e=0;e<c&&(o++,i=i.nextZ,i);e++);for(l=c;o>0||l>0&&i;)0!==o&&(0===l||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),s?s.nextZ=r:t=r,r.prevZ=s,s=r;n=i}s.nextZ=null,c*=2}while(a>1)}(r)}(t,i,r,s);let o,l,c=t;for(;t.prev!==t.next;)if(o=t.prev,l=t.next,s?dc(t,i,r,s):uc(t))e.push(o.i/n|0),e.push(t.i/n|0),e.push(l.i/n|0),Pc(t),t=l.next,c=l.next;else if((t=l)===c){a?1===a?hc(t=pc(cc(t),e,n),e,n,i,r,s,2):2===a&&fc(t,e,n,i,r,s):hc(cc(t),e,n,i,r,s,1);break}}function uc(t){const e=t.prev,n=t,i=t.next;if(Sc(e,n,i)>=0)return!1;const r=e.x,s=n.x,a=i.x,o=e.y,l=n.y,c=i.y,h=r<s?r<a?r:a:s<a?s:a,u=o<l?o<c?o:c:l<c?l:c,d=r>s?r>a?r:a:s>a?s:a,p=o>l?o>c?o:c:l>c?l:c;let f=i.next;for(;f!==e;){if(f.x>=h&&f.x<=d&&f.y>=u&&f.y<=p&&xc(r,o,s,l,a,c,f.x,f.y)&&Sc(f.prev,f,f.next)>=0)return!1;f=f.next}return!0}function dc(t,e,n,i){const r=t.prev,s=t,a=t.next;if(Sc(r,s,a)>=0)return!1;const o=r.x,l=s.x,c=a.x,h=r.y,u=s.y,d=a.y,p=o<l?o<c?o:c:l<c?l:c,f=h<u?h<d?h:d:u<d?u:d,m=o>l?o>c?o:c:l>c?l:c,g=h>u?h>d?h:d:u>d?u:d,v=_c(p,f,e,n,i),_=_c(m,g,e,n,i);let y=t.prevZ,x=t.nextZ;for(;y&&y.z>=v&&x&&x.z<=_;){if(y.x>=p&&y.x<=m&&y.y>=f&&y.y<=g&&y!==r&&y!==a&&xc(o,h,l,u,c,d,y.x,y.y)&&Sc(y.prev,y,y.next)>=0)return!1;if(y=y.prevZ,x.x>=p&&x.x<=m&&x.y>=f&&x.y<=g&&x!==r&&x!==a&&xc(o,h,l,u,c,d,x.x,x.y)&&Sc(x.prev,x,x.next)>=0)return!1;x=x.nextZ}for(;y&&y.z>=v;){if(y.x>=p&&y.x<=m&&y.y>=f&&y.y<=g&&y!==r&&y!==a&&xc(o,h,l,u,c,d,y.x,y.y)&&Sc(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;x&&x.z<=_;){if(x.x>=p&&x.x<=m&&x.y>=f&&x.y<=g&&x!==r&&x!==a&&xc(o,h,l,u,c,d,x.x,x.y)&&Sc(x.prev,x,x.next)>=0)return!1;x=x.nextZ}return!0}function pc(t,e,n){let i=t;do{const r=i.prev,s=i.next.next;!bc(r,s)&&wc(r,i,i.next,s)&&Ac(r,s)&&Ac(s,r)&&(e.push(r.i/n|0),e.push(i.i/n|0),e.push(s.i/n|0),Pc(i),Pc(i.next),i=t=s),i=i.next}while(i!==t);return cc(i)}function fc(t,e,n,i,r,s){let a=t;do{let t=a.next.next;for(;t!==a.prev;){if(a.i!==t.i&&Mc(a,t)){let o=Cc(a,t);return a=cc(a,a.next),o=cc(o,o.next),hc(a,e,n,i,r,s,0),void hc(o,e,n,i,r,s,0)}t=t.next}a=a.next}while(a!==t)}function mc(t,e){return t.x-e.x}function gc(t,e){const n=function(t,e){let n,i=e,r=-1/0;const s=t.x,a=t.y;do{if(a<=i.y&&a>=i.next.y&&i.next.y!==i.y){const t=i.x+(a-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=s&&t>r&&(r=t,n=i.x<i.next.x?i:i.next,t===s))return n}i=i.next}while(i!==e);if(!n)return null;const o=n,l=n.x,c=n.y;let h,u=1/0;i=n;do{s>=i.x&&i.x>=l&&s!==i.x&&xc(a<c?s:r,a,l,c,a<c?r:s,a,i.x,i.y)&&(h=Math.abs(a-i.y)/(s-i.x),Ac(i,t)&&(h<u||h===u&&(i.x>n.x||i.x===n.x&&vc(n,i)))&&(n=i,u=h)),i=i.next}while(i!==o);return n}(t,e);if(!n)return e;const i=Cc(n,t);return cc(i,i.next),cc(n,n.next)}function vc(t,e){return Sc(t.prev,t,e.prev)<0&&Sc(e.next,t,t.next)<0}function _c(t,e,n,i,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-n)*r|0)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-i)*r|0)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function yc(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function xc(t,e,n,i,r,s,a,o){return(r-a)*(e-o)>=(t-a)*(s-o)&&(t-a)*(i-o)>=(n-a)*(e-o)&&(n-a)*(s-o)>=(r-a)*(i-o)}function Mc(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&wc(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Ac(t,e)&&Ac(e,t)&&function(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,s=(t.y+e.y)/2;do{n.y>s!=n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(Sc(t.prev,t,e.prev)||Sc(t,e.prev,e))||bc(t,e)&&Sc(t.prev,t,t.next)>0&&Sc(e.prev,e,e.next)>0)}function Sc(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function bc(t,e){return t.x===e.x&&t.y===e.y}function wc(t,e,n,i){const r=Ec(Sc(t,e,n)),s=Ec(Sc(t,e,i)),a=Ec(Sc(n,i,t)),o=Ec(Sc(n,i,e));return r!==s&&a!==o||(!(0!==r||!Tc(t,n,e))||(!(0!==s||!Tc(t,i,e))||(!(0!==a||!Tc(n,t,i))||!(0!==o||!Tc(n,e,i)))))}function Tc(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Ec(t){return t>0?1:t<0?-1:0}function Ac(t,e){return Sc(t.prev,t,t.next)<0?Sc(t,e,t.next)>=0&&Sc(t,t.prev,e)>=0:Sc(t,e,t.prev)<0||Sc(t,t.next,e)<0}function Cc(t,e){const n=new Uc(t.i,t.x,t.y),i=new Uc(e.i,e.x,e.y),r=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function Rc(t,e,n,i){const r=new Uc(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Pc(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Uc(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Lc{static area(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return.5*n}static isClockWise(t){return Lc.area(t)<0}static triangulateShape(t,e){const n=[],i=[],r=[];Ic(t),Dc(n,t);let s=t.length;e.forEach(Ic);for(let o=0;o<e.length;o++)i.push(s),s+=e[o].length,Dc(n,e[o]);const a=oc(n,i);for(let o=0;o<a.length;o+=3)r.push(a.slice(o,o+3));return r}}function Ic(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Dc(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class Oc extends Wi{constructor(t=new ac([new Ce(.5,.5),new Ce(-.5,.5),new Ce(-.5,-.5),new Ce(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let a=0,o=t.length;a<o;a++){s(t[a])}function s(t){const s=[],a=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1,l=void 0!==e.depth?e.depth:1;let c=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:.2,u=void 0!==e.bevelSize?e.bevelSize:h-.1,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:Nc;let g,v,_,y,x,M=!1;f&&(g=f.getSpacedPoints(o),M=!0,c=!1,v=f.computeFrenetFrames(o,!1),_=new nn,y=new nn,x=new nn),c||(p=0,h=0,u=0,d=0);const S=t.extractPoints(a);let b=S.shape;const w=S.holes;if(!Lc.isClockWise(b)){b=b.reverse();for(let t=0,e=w.length;t<e;t++){const e=w[t];Lc.isClockWise(e)&&(w[t]=e.reverse())}}const T=Lc.triangulateShape(b,w),E=b;for(let e=0,n=w.length;e<n;e++){const t=w[e];b=b.concat(t)}function A(t,e,n){return t.clone().addScaledVector(e,n)}const C=b.length,R=T.length;function P(t,e,n){let i,r,s;const a=t.x-e.x,o=t.y-e.y,l=n.x-t.x,c=n.y-t.y,h=a*a+o*o,u=a*c-o*l;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(l*l+c*c),p=e.x-o/u,f=e.y+a/u,m=((n.x-c/d-p)*c-(n.y+l/d-f)*l)/(a*c-o*l);i=p+a*m-t.x,r=f+o*m-t.y;const g=i*i+r*r;if(g<=2)return new Ce(i,r);s=Math.sqrt(g/2)}else{let t=!1;a>Number.EPSILON?l>Number.EPSILON&&(t=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(c)&&(t=!0),t?(i=-o,r=a,s=Math.sqrt(h)):(i=a,r=o,s=Math.sqrt(h/2))}return new Ce(i/s,r/s)}const U=[];for(let e=0,n=E.length,i=n-1,r=e+1;e<n;e++,i++,r++)i===n&&(i=0),r===n&&(r=0),U[e]=P(E[e],E[i],E[r]);const L=[];let I,D=U.concat();for(let e=0,n=w.length;e<n;e++){const t=w[e];I=[];for(let e=0,n=t.length,i=n-1,r=e+1;e<n;e++,i++,r++)i===n&&(i=0),r===n&&(r=0),I[e]=P(t[e],t[i],t[r]);L.push(I),D=D.concat(I)}for(let e=0;e<p;e++){const t=e/p,n=h*Math.cos(t*Math.PI/2),i=u*Math.sin(t*Math.PI/2)+d;for(let e=0,r=E.length;e<r;e++){const t=A(E[e],U[e],i);F(t.x,t.y,-n)}for(let e=0,r=w.length;e<r;e++){const t=w[e];I=L[e];for(let e=0,r=t.length;e<r;e++){const r=A(t[e],I[e],i);F(r.x,r.y,-n)}}}const O=u+d;for(let e=0;e<C;e++){const t=c?A(b[e],D[e],O):b[e];M?(y.copy(v.normals[0]).multiplyScalar(t.x),_.copy(v.binormals[0]).multiplyScalar(t.y),x.copy(g[0]).add(y).add(_),F(x.x,x.y,x.z)):F(t.x,t.y,0)}for(let e=1;e<=o;e++)for(let t=0;t<C;t++){const n=c?A(b[t],D[t],O):b[t];M?(y.copy(v.normals[e]).multiplyScalar(n.x),_.copy(v.binormals[e]).multiplyScalar(n.y),x.copy(g[e]).add(y).add(_),F(x.x,x.y,x.z)):F(n.x,n.y,l/o*e)}for(let e=p-1;e>=0;e--){const t=e/p,n=h*Math.cos(t*Math.PI/2),i=u*Math.sin(t*Math.PI/2)+d;for(let e=0,r=E.length;e<r;e++){const t=A(E[e],U[e],i);F(t.x,t.y,l+n)}for(let e=0,r=w.length;e<r;e++){const t=w[e];I=L[e];for(let e=0,r=t.length;e<r;e++){const r=A(t[e],I[e],i);M?F(r.x,r.y+g[o-1].y,g[o-1].x+n):F(r.x,r.y,l+n)}}}function N(t,e){let n=t.length;for(;--n>=0;){const i=n;let r=n-1;r<0&&(r=t.length-1);for(let t=0,n=o+2*p;t<n;t++){const n=C*t,s=C*(t+1);z(e+i+n,e+r+n,e+r+s,e+i+s)}}}function F(t,e,n){s.push(t),s.push(e),s.push(n)}function B(t,e,r){k(t),k(e),k(r);const s=i.length/3,a=m.generateTopUV(n,i,s-3,s-2,s-1);G(a[0]),G(a[1]),G(a[2])}function z(t,e,r,s){k(t),k(e),k(s),k(e),k(r),k(s);const a=i.length/3,o=m.generateSideWallUV(n,i,a-6,a-3,a-2,a-1);G(o[0]),G(o[1]),G(o[3]),G(o[1]),G(o[2]),G(o[3])}function k(t){i.push(s[3*t+0]),i.push(s[3*t+1]),i.push(s[3*t+2])}function G(t){r.push(t.x),r.push(t.y)}!function(){const t=i.length/3;if(c){let t=0,e=C*t;for(let n=0;n<R;n++){const t=T[n];B(t[2]+e,t[1]+e,t[0]+e)}t=o+2*p,e=C*t;for(let n=0;n<R;n++){const t=T[n];B(t[0]+e,t[1]+e,t[2]+e)}}else{for(let t=0;t<R;t++){const e=T[t];B(e[2],e[1],e[0])}for(let t=0;t<R;t++){const e=T[t];B(e[0]+C*o,e[1]+C*o,e[2]+C*o)}}n.addGroup(t,i.length/3-t,0)}(),function(){const t=i.length/3;let e=0;N(E,e),e+=E.length;for(let n=0,i=w.length;n<i;n++){const t=w[n];N(t,e),e+=t.length}n.addGroup(t,i.length/3-t,1)}()}this.setAttribute("position",new Ni(i,3)),this.setAttribute("uv",new Ni(r,2)),this.computeVertexNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let i=0,r=t.length;i<r;i++){const e=t[i];n.shapes.push(e.uuid)}else n.shapes.push(t.uuid);n.options=Object.assign({},e),void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON());return n}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){const n=[];for(let r=0,s=t.shapes.length;r<s;r++){const i=e[t.shapes[r]];n.push(i)}const i=t.options.extrudePath;return void 0!==i&&(t.options.extrudePath=(new jl[i.type]).fromJSON(i)),new Oc(n,t.options)}}const Nc={generateTopUV:function(t,e,n,i,r){const s=e[3*n],a=e[3*n+1],o=e[3*i],l=e[3*i+1],c=e[3*r],h=e[3*r+1];return[new Ce(s,a),new Ce(o,l),new Ce(c,h)]},generateSideWallUV:function(t,e,n,i,r,s){const a=e[3*n],o=e[3*n+1],l=e[3*n+2],c=e[3*i],h=e[3*i+1],u=e[3*i+2],d=e[3*r],p=e[3*r+1],f=e[3*r+2],m=e[3*s],g=e[3*s+1],v=e[3*s+2];return Math.abs(o-h)<Math.abs(a-c)?[new Ce(a,1-l),new Ce(c,1-u),new Ce(d,1-f),new Ce(m,1-v)]:[new Ce(o,1-l),new Ce(h,1-u),new Ce(p,1-f),new Ce(g,1-v)]}};class Fc extends Ql{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Fc(t.radius,t.detail)}}class Bc extends Ql{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Bc(t.radius,t.detail)}}class zc extends Wi{constructor(t=.5,e=1,n=32,i=1,r=0,s=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:s},n=Math.max(3,n);const a=[],o=[],l=[],c=[];let h=t;const u=(e-t)/(i=Math.max(1,i)),d=new nn,p=new Ce;for(let f=0;f<=i;f++){for(let t=0;t<=n;t++){const i=r+t/n*s;d.x=h*Math.cos(i),d.y=h*Math.sin(i),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,c.push(p.x,p.y)}h+=u}for(let f=0;f<i;f++){const t=f*(n+1);for(let e=0;e<n;e++){const i=e+t,r=i,s=i+n+1,o=i+n+2,l=i+1;a.push(r,s,l),a.push(s,o,l)}}this.setIndex(a),this.setAttribute("position",new Ni(o,3)),this.setAttribute("normal",new Ni(l,3)),this.setAttribute("uv",new Ni(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new zc(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class kc extends Wi{constructor(t=new ac([new Ce(0,.5),new Ce(-.5,-.5),new Ce(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],r=[],s=[];let a=0,o=0;if(!1===Array.isArray(t))l(t);else for(let c=0;c<t.length;c++)l(t[c]),this.addGroup(a,o,c),a+=o,o=0;function l(t){const a=i.length/3,l=t.extractPoints(e);let c=l.shape;const h=l.holes;!1===Lc.isClockWise(c)&&(c=c.reverse());for(let e=0,n=h.length;e<n;e++){const t=h[e];!0===Lc.isClockWise(t)&&(h[e]=t.reverse())}const u=Lc.triangulateShape(c,h);for(let e=0,n=h.length;e<n;e++){const t=h[e];c=c.concat(t)}for(let e=0,n=c.length;e<n;e++){const t=c[e];i.push(t.x,t.y,0),r.push(0,0,1),s.push(t.x,t.y)}for(let e=0,i=u.length;e<i;e++){const t=u[e],i=t[0]+a,r=t[1]+a,s=t[2]+a;n.push(i,r,s),o+=3}}this.setIndex(n),this.setAttribute("position",new Ni(i,3)),this.setAttribute("normal",new Ni(r,3)),this.setAttribute("uv",new Ni(s,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}static fromJSON(t,e){const n=[];for(let i=0,r=t.shapes.length;i<r;i++){const r=e[t.shapes[i]];n.push(r)}return new kc(n,t.curveSegments)}}class Gc extends Wi{constructor(t=1,e=32,n=16,i=0,r=2*Math.PI,s=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:s,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const o=Math.min(s+a,Math.PI);let l=0;const c=[],h=new nn,u=new nn,d=[],p=[],f=[],m=[];for(let g=0;g<=n;g++){const d=[],v=g/n;let _=0;0===g&&0===s?_=.5/e:g===n&&o===Math.PI&&(_=-.5/e);for(let n=0;n<=e;n++){const o=n/e;h.x=-t*Math.cos(i+o*r)*Math.sin(s+v*a),h.y=t*Math.cos(s+v*a),h.z=t*Math.sin(i+o*r)*Math.sin(s+v*a),p.push(h.x,h.y,h.z),u.copy(h).normalize(),f.push(u.x,u.y,u.z),m.push(o+_,1-v),d.push(l++)}c.push(d)}for(let g=0;g<n;g++)for(let t=0;t<e;t++){const e=c[g][t+1],i=c[g][t],r=c[g+1][t],a=c[g+1][t+1];(0!==g||s>0)&&d.push(e,i,a),(g!==n-1||o<Math.PI)&&d.push(i,r,a)}this.setIndex(d),this.setAttribute("position",new Ni(p,3)),this.setAttribute("normal",new Ni(f,3)),this.setAttribute("uv",new Ni(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Gc(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Vc extends Ql{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Vc(t.radius,t.detail)}}class Hc extends Wi{constructor(t=1,e=.4,n=12,i=48,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const s=[],a=[],o=[],l=[],c=new nn,h=new nn,u=new nn;for(let d=0;d<=n;d++)for(let s=0;s<=i;s++){const p=s/i*r,f=d/n*Math.PI*2;h.x=(t+e*Math.cos(f))*Math.cos(p),h.y=(t+e*Math.cos(f))*Math.sin(p),h.z=e*Math.sin(f),a.push(h.x,h.y,h.z),c.x=t*Math.cos(p),c.y=t*Math.sin(p),u.subVectors(h,c).normalize(),o.push(u.x,u.y,u.z),l.push(s/i),l.push(d/n)}for(let d=1;d<=n;d++)for(let t=1;t<=i;t++){const e=(i+1)*d+t-1,n=(i+1)*(d-1)+t-1,r=(i+1)*(d-1)+t,a=(i+1)*d+t;s.push(e,n,a),s.push(n,r,a)}this.setIndex(s),this.setAttribute("position",new Ni(a,3)),this.setAttribute("normal",new Ni(o,3)),this.setAttribute("uv",new Ni(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Hc(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Wc extends Wi{constructor(t=1,e=.4,n=64,i=8,r=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:r,q:s},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],l=[],c=[],h=new nn,u=new nn,d=new nn,p=new nn,f=new nn,m=new nn,g=new nn;for(let _=0;_<=n;++_){const a=_/n*r*Math.PI*2;v(a,r,s,t,d),v(a+.01,r,s,t,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let t=0;t<=i;++t){const r=t/i*Math.PI*2,s=-e*Math.cos(r),a=e*Math.sin(r);h.x=d.x+(s*g.x+a*f.x),h.y=d.y+(s*g.y+a*f.y),h.z=d.z+(s*g.z+a*f.z),o.push(h.x,h.y,h.z),u.subVectors(h,d).normalize(),l.push(u.x,u.y,u.z),c.push(_/n),c.push(t/i)}}for(let _=1;_<=n;_++)for(let t=1;t<=i;t++){const e=(i+1)*(_-1)+(t-1),n=(i+1)*_+(t-1),r=(i+1)*_+t,s=(i+1)*(_-1)+t;a.push(e,n,s),a.push(n,r,s)}function v(t,e,n,i,r){const s=Math.cos(t),a=Math.sin(t),o=n/e*t,l=Math.cos(o);r.x=i*(2+l)*.5*s,r.y=i*(2+l)*a*.5,r.z=i*Math.sin(o)*.5}this.setIndex(a),this.setAttribute("position",new Ni(o,3)),this.setAttribute("normal",new Ni(l,3)),this.setAttribute("uv",new Ni(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Wc(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class jc extends Wi{constructor(t=new Hl(new nn(-1,-1,0),new nn(-1,1,0),new nn(1,1,0)),e=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r};const s=t.computeFrenetFrames(e,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const a=new nn,o=new nn,l=new Ce;let c=new nn;const h=[],u=[],d=[],p=[];function f(r){c=t.getPointAt(r/e,c);const l=s.normals[r],d=s.binormals[r];for(let t=0;t<=i;t++){const e=t/i*Math.PI*2,r=Math.sin(e),s=-Math.cos(e);o.x=s*l.x+r*d.x,o.y=s*l.y+r*d.y,o.z=s*l.z+r*d.z,o.normalize(),u.push(o.x,o.y,o.z),a.x=c.x+n*o.x,a.y=c.y+n*o.y,a.z=c.z+n*o.z,h.push(a.x,a.y,a.z)}}!function(){for(let t=0;t<e;t++)f(t);f(!1===r?e:0),function(){for(let t=0;t<=e;t++)for(let n=0;n<=i;n++)l.x=t/e,l.y=n/i,d.push(l.x,l.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=i;e++){const n=(i+1)*(t-1)+(e-1),r=(i+1)*t+(e-1),s=(i+1)*t+e,a=(i+1)*(t-1)+e;p.push(n,r,a),p.push(r,s,a)}}()}(),this.setIndex(p),this.setAttribute("position",new Ni(h,3)),this.setAttribute("normal",new Ni(u,3)),this.setAttribute("uv",new Ni(d,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new jc((new jl[t.path.type]).fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Xc extends Wi{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},null!==t){const e=[],n=new Set,i=new nn,r=new nn;if(null!==t.index){const s=t.attributes.position,a=t.index;let o=t.groups;0===o.length&&(o=[{start:0,count:a.count,materialIndex:0}]);for(let t=0,l=o.length;t<l;++t){const l=o[t],c=l.start;for(let t=c,o=c+l.count;t<o;t+=3)for(let l=0;l<3;l++){const o=a.getX(t+l),c=a.getX(t+(l+1)%3);i.fromBufferAttribute(s,o),r.fromBufferAttribute(s,c),!0===qc(i,r,n)&&(e.push(i.x,i.y,i.z),e.push(r.x,r.y,r.z))}}}else{const s=t.attributes.position;for(let t=0,a=s.count/3;t<a;t++)for(let o=0;o<3;o++){const a=3*t+o,l=3*t+(o+1)%3;i.fromBufferAttribute(s,a),r.fromBufferAttribute(s,l),!0===qc(i,r,n)&&(e.push(i.x,i.y,i.z),e.push(r.x,r.y,r.z))}}this.setAttribute("position",new Ni(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function qc(t,e,n){const i=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`,r=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;return!0!==n.has(i)&&!0!==n.has(r)&&(n.add(i),n.add(r),!0)}var Yc=Object.freeze({__proto__:null,BoxGeometry:hr,CapsuleGeometry:Zl,CircleGeometry:Jl,ConeGeometry:$l,CylinderGeometry:Kl,DodecahedronGeometry:tc,EdgesGeometry:sc,ExtrudeGeometry:Oc,IcosahedronGeometry:Fc,LatheGeometry:Yl,OctahedronGeometry:Bc,PlaneGeometry:Ur,PolyhedronGeometry:Ql,RingGeometry:zc,ShapeGeometry:kc,SphereGeometry:Gc,TetrahedronGeometry:Vc,TorusGeometry:Hc,TorusKnotGeometry:Wc,TubeGeometry:jc,WireframeGeometry:Xc});class Zc extends _i{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new bi(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Jc extends mr{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Kc extends _i{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new bi(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new bi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class $c extends Kc{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Ce(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return ye(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new bi(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new bi(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new bi(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class Qc extends _i{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new bi(16777215),this.specular=new bi(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new bi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=U,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class th extends _i{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new bi(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new bi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class eh extends _i{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class nh extends _i{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new bi(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new bi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=U,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class ih extends _i{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new bi(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class rh extends al{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function sh(t,e,n){return oh(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)}function ah(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)}function oh(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function lh(t){const e=t.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort((function(e,n){return t[e]-t[n]})),n}function ch(t,e,n){const i=t.length,r=new t.constructor(i);for(let s=0,a=0;a!==i;++s){const i=n[s]*e;for(let n=0;n!==e;++n)r[a++]=t[i+n]}return r}function hh(t,e,n,i){let r=1,s=t[0];for(;void 0!==s&&void 0===s[i];)s=t[r++];if(void 0===s)return;let a=s[i];if(void 0!==a)if(Array.isArray(a))do{a=s[i],void 0!==a&&(e.push(s.time),n.push.apply(n,a)),s=t[r++]}while(void 0!==s);else if(void 0!==a.toArray)do{a=s[i],void 0!==a&&(e.push(s.time),a.toArray(n,n.length)),s=t[r++]}while(void 0!==s);else do{a=s[i],void 0!==a&&(e.push(s.time),n.push(a)),s=t[r++]}while(void 0!==s)}const uh={arraySlice:sh,convertArray:ah,isTypedArray:oh,getKeyframeOrder:lh,sortedArray:ch,flattenJSON:hh,subclip:function(t,e,n,i,r=30){const s=t.clone();s.name=e;const a=[];for(let l=0;l<s.tracks.length;++l){const t=s.tracks[l],e=t.getValueSize(),o=[],c=[];for(let s=0;s<t.times.length;++s){const a=t.times[s]*r;if(!(a<n||a>=i)){o.push(t.times[s]);for(let n=0;n<e;++n)c.push(t.values[s*e+n])}}0!==o.length&&(t.times=ah(o,t.times.constructor),t.values=ah(c,t.values.constructor),a.push(t))}s.tracks=a;let o=1/0;for(let l=0;l<s.tracks.length;++l)o>s.tracks[l].times[0]&&(o=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*o);return s.resetDuration(),s},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const r=n.tracks.length,s=e/i;for(let a=0;a<r;++a){const e=n.tracks[a],i=e.ValueTypeName;if("bool"===i||"string"===i)continue;const r=t.tracks.find((function(t){return t.name===e.name&&t.ValueTypeName===i}));if(void 0===r)continue;let o=0;const l=e.getValueSize();e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let c=0;const h=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=h/3);const u=e.times.length-1;let d;if(s<=e.times[0]){const t=o,n=l-o;d=sh(e.values,t,n)}else if(s>=e.times[u]){const t=u*l+o,n=t+l-o;d=sh(e.values,t,n)}else{const t=e.createInterpolant(),n=o,i=l-o;t.evaluate(s),d=sh(t.resultBuffer,n,i)}if("quaternion"===i){(new en).fromArray(d).normalize().conjugate().toArray(d)}const p=r.times.length;for(let t=0;t<p;++t){const e=t*h+c;if("quaternion"===i)en.multiplyQuaternionsFlat(r.values,e,d,0,r.values,e);else{const t=h-2*c;for(let n=0;n<t;++n)r.values[e+n]-=d[n]}}}return t.blendMode=$t,t}};class dh{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];t:{e:{let s;n:{i:if(!(t<i)){for(let s=n+2;;){if(void 0===i){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===s)break;if(r=i,i=e[++n],t<i)break e}s=e.length;break n}if(t>=r)break t;{const a=e[1];t<a&&(n=2,r=a);for(let s=n-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(n===s)break;if(i=r,r=e[--n-1],t>=r)break e}s=n,n=0}}for(;n<s;){const i=n+s>>>1;t<e[i]?s=i:n=i+1}if(i=e[n],r=e[n-1],void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let s=0;s!==i;++s)e[s]=n[r+s];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class ph extends dh{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Yt,endingEnd:Yt}}intervalChanged_(t,e,n){const i=this.parameterPositions;let r=t-2,s=t+1,a=i[r],o=i[s];if(void 0===a)switch(this.getSettings_().endingStart){case Zt:r=t,a=2*e-n;break;case Jt:r=i.length-2,a=e+i[r]-i[r+1];break;default:r=t,a=n}if(void 0===o)switch(this.getSettings_().endingEnd){case Zt:s=t,o=2*n-e;break;case Jt:s=1,o=n+i[1]-i[0];break;default:s=t-1,o=e}const l=.5*(n-e),c=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-n),this._offsetPrev=r*c,this._offsetNext=s*c}interpolate_(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(n-e)/(i-e),f=p*p,m=f*p,g=-u*m+2*u*f-u*p,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,_=(-1-d)*m+(1.5+d)*f+.5*p,y=d*m-d*f;for(let x=0;x!==a;++x)r[x]=g*s[c+x]+v*s[l+x]+_*s[o+x]+y*s[h+x];return r}}class fh extends dh{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=(n-e)/(i-e),h=1-c;for(let u=0;u!==a;++u)r[u]=s[l+u]*h+s[o+u]*c;return r}}class mh extends dh{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class gh{constructor(t,e,n,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=ah(e,this.TimeBufferType),this.values=ah(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:ah(t.times,Array),values:ah(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new mh(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new fh(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new ph(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case jt:e=this.InterpolantFactoryMethodDiscrete;break;case Xt:e=this.InterpolantFactoryMethodLinear;break;case qt:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return jt;case this.InterpolantFactoryMethodLinear:return Xt;case this.InterpolantFactoryMethodSmooth:return qt}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let r=0,s=i-1;for(;r!==i&&n[r]<t;)++r;for(;-1!==s&&n[s]>e;)--s;if(++s,0!==r||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const t=this.getValueSize();this.times=sh(n,r,s),this.values=sh(this.values,r*t,s*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(t=!1);const n=this.times,i=this.values,r=n.length;0===r&&(t=!1);let s=null;for(let a=0;a!==r;a++){const e=n[a];if("number"==typeof e&&isNaN(e)){t=!1;break}if(null!==s&&s>e){t=!1;break}s=e}if(void 0!==i&&oh(i))for(let a=0,o=i.length;a!==o;++a){const e=i[a];if(isNaN(e)){t=!1;break}}return t}optimize(){const t=sh(this.times),e=sh(this.values),n=this.getValueSize(),i=this.getInterpolation()===qt,r=t.length-1;let s=1;for(let a=1;a<r;++a){let r=!1;const o=t[a];if(o!==t[a+1]&&(1!==a||o!==t[0]))if(i)r=!0;else{const t=a*n,i=t-n,s=t+n;for(let a=0;a!==n;++a){const n=e[t+a];if(n!==e[i+a]||n!==e[s+a]){r=!0;break}}}if(r){if(a!==s){t[s]=t[a];const i=a*n,r=s*n;for(let t=0;t!==n;++t)e[r+t]=e[i+t]}++s}}if(r>0){t[s]=t[r];for(let t=r*n,i=s*n,a=0;a!==n;++a)e[i+a]=e[t+a];++s}return s!==t.length?(this.times=sh(t,0,s),this.values=sh(e,0,s*n)):(this.times=t,this.values=e),this}clone(){const t=sh(this.times,0),e=sh(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}gh.prototype.TimeBufferType=Float32Array,gh.prototype.ValueBufferType=Float32Array,gh.prototype.DefaultInterpolation=Xt;class vh extends gh{}vh.prototype.ValueTypeName="bool",vh.prototype.ValueBufferType=Array,vh.prototype.DefaultInterpolation=jt,vh.prototype.InterpolantFactoryMethodLinear=void 0,vh.prototype.InterpolantFactoryMethodSmooth=void 0;class _h extends gh{}_h.prototype.ValueTypeName="color";class yh extends gh{}yh.prototype.ValueTypeName="number";class xh extends dh{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(n-e)/(i-e);let l=t*a;for(let c=l+a;l!==c;l+=4)en.slerpFlat(r,0,s,l-a,s,l,o);return r}}class Mh extends gh{InterpolantFactoryMethodLinear(t){return new xh(this.times,this.values,this.getValueSize(),t)}}Mh.prototype.ValueTypeName="quaternion",Mh.prototype.DefaultInterpolation=Xt,Mh.prototype.InterpolantFactoryMethodSmooth=void 0;class Sh extends gh{}Sh.prototype.ValueTypeName="string",Sh.prototype.ValueBufferType=Array,Sh.prototype.DefaultInterpolation=jt,Sh.prototype.InterpolantFactoryMethodLinear=void 0,Sh.prototype.InterpolantFactoryMethodSmooth=void 0;class bh extends gh{}bh.prototype.ValueTypeName="vector";class wh{constructor(t,e=-1,n,i=2500){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=_e(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let s=0,a=n.length;s!==a;++s)e.push(Th(n[s]).scale(i));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let r=0,s=n.length;r!==s;++r)e.push(gh.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const r=e.length,s=[];for(let a=0;a<r;a++){let t=[],o=[];t.push((a+r-1)%r,a,(a+1)%r),o.push(0,1,0);const l=lh(t);t=ch(t,1,l),o=ch(o,1,l),i||0!==t[0]||(t.push(r),o.push(o[0])),s.push(new yh(".morphTargetInfluences["+e[a].name+"]",t,o).scale(1/n))}return new this(t,-1,s)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,o=t.length;a<o;a++){const e=t[a],n=e.name.match(r);if(n&&n.length>1){const t=n[1];let r=i[t];r||(i[t]=r=[]),r.push(e)}}const s=[];for(const a in i)s.push(this.CreateFromMorphTargetSequence(a,i[a],e,n));return s}static parseAnimation(t,e){if(!t)return null;const n=function(t,e,n,i,r){if(0!==n.length){const s=[],a=[];hh(n,s,a,i),0!==s.length&&r.push(new t(e,s,a))}},i=[],r=t.name||"default",s=t.fps||30,a=t.blendMode;let o=t.length||-1;const l=t.hierarchy||[];for(let c=0;c<l.length;c++){const t=l[c].keys;if(t&&0!==t.length)if(t[0].morphTargets){const e={};let n;for(n=0;n<t.length;n++)if(t[n].morphTargets)for(let i=0;i<t[n].morphTargets.length;i++)e[t[n].morphTargets[i]]=-1;for(const r in e){const e=[],s=[];for(let i=0;i!==t[n].morphTargets.length;++i){const i=t[n];e.push(i.time),s.push(i.morphTarget===r?1:0)}i.push(new yh(".morphTargetInfluence["+r+"]",e,s))}o=e.length*s}else{const r=".bones["+e[c].name+"]";n(bh,r+".position",t,"pos",i),n(Mh,r+".quaternion",t,"rot",i),n(bh,r+".scale",t,"scl",i)}}if(0===i.length)return null;return new this(r,o,i,a)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Th(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return yh;case"vector":case"vector2":case"vector3":case"vector4":return bh;case"color":return _h;case"quaternion":return Mh;case"bool":case"boolean":return vh;case"string":return Sh}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];hh(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const Eh={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class Ah{constructor(t,e,n){const i=this;let r,s=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===s&&void 0!==i.onStart&&i.onStart(t,a,o),s=!0},this.itemEnd=function(t){a++,void 0!==i.onProgress&&i.onProgress(t,a,o),a===o&&(s=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return r?r(t):t},this.setURLModifier=function(t){return r=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=l.length;e<n;e+=2){const n=l[e],i=l[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null}}}const Ch=new Ah;class Rh{constructor(t){this.manager=void 0!==t?t:Ch,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise((function(i,r){n.load(t,i,e,r)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const Ph={};class Uh extends Error{constructor(t,e){super(t),this.response=e}}class Lh extends Rh{constructor(t){super(t)}load(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=Eh.get(t);if(void 0!==r)return this.manager.itemStart(t),setTimeout((()=>{e&&e(r),this.manager.itemEnd(t)}),0),r;if(void 0!==Ph[t])return void Ph[t].push({onLoad:e,onProgress:n,onError:i});Ph[t]=[],Ph[t].push({onLoad:e,onProgress:n,onError:i});const s=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,o=this.responseType;fetch(s).then((e=>{if(200===e.status||0===e.status){if(e.status,"undefined"==typeof ReadableStream||void 0===e.body||void 0===e.body.getReader)return e;const n=Ph[t],i=e.body.getReader(),r=e.headers.get("Content-Length")||e.headers.get("X-File-Size"),s=r?parseInt(r):0,a=0!==s;let o=0;const l=new ReadableStream({start(t){!function e(){i.read().then((({done:i,value:r})=>{if(i)t.close();else{o+=r.byteLength;const i=new ProgressEvent("progress",{lengthComputable:a,loaded:o,total:s});for(let t=0,e=n.length;t<e;t++){const e=n[t];e.onProgress&&e.onProgress(i)}t.enqueue(r),e()}}))}()}});return new Response(l)}throw new Uh(`fetch for "${e.url}" responded with ${e.status}: ${e.statusText}`,e)})).then((t=>{switch(o){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then((t=>(new DOMParser).parseFromString(t,a)));case"json":return t.json();default:if(void 0===a)return t.text();{const e=/charset="?([^;"\s]*)"?/i.exec(a),n=e&&e[1]?e[1].toLowerCase():void 0,i=new TextDecoder(n);return t.arrayBuffer().then((t=>i.decode(t)))}}})).then((e=>{Eh.add(t,e);const n=Ph[t];delete Ph[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onLoad&&i.onLoad(e)}})).catch((e=>{const n=Ph[t];if(void 0===n)throw this.manager.itemError(t),e;delete Ph[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}this.manager.itemError(t)})).finally((()=>{this.manager.itemEnd(t)})),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class Ih extends Rh{constructor(t){super(t)}load(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=Eh.get(t);if(void 0!==s)return r.manager.itemStart(t),setTimeout((function(){e&&e(s),r.manager.itemEnd(t)}),0),s;const a=De("img");function o(){c(),Eh.add(t,this),e&&e(this),r.manager.itemEnd(t)}function l(e){c(),i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}function c(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==t.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(t),a.src=t,a}}class Dh extends Rh{constructor(t){super(t)}load(t,e,n,i){const r=new xr;r.colorSpace=ie;const s=new Ih(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let a=0;function o(n){s.load(t[n],(function(t){r.images[n]=t,a++,6===a&&(r.needsUpdate=!0,e&&e(r))}),void 0,i)}for(let l=0;l<t.length;++l)o(l);return r}}class Oh extends Rh{constructor(t){super(t)}load(t,e,n,i){const r=this,s=new qo,a=new Lh(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(t,(function(t){const n=r.parse(t);n&&(void 0!==n.image?s.image=n.image:void 0!==n.data&&(s.image.width=n.width,s.image.height=n.height,s.image.data=n.data),s.wrapS=void 0!==n.wrapS?n.wrapS:q,s.wrapT=void 0!==n.wrapT?n.wrapT:q,s.magFilter=void 0!==n.magFilter?n.magFilter:$,s.minFilter=void 0!==n.minFilter?n.minFilter:$,s.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.colorSpace?s.colorSpace=n.colorSpace:void 0!==n.encoding&&(s.encoding=n.encoding),void 0!==n.flipY&&(s.flipY=n.flipY),void 0!==n.format&&(s.format=n.format),void 0!==n.type&&(s.type=n.type),void 0!==n.mipmaps&&(s.mipmaps=n.mipmaps,s.minFilter=tt),1===n.mipmapCount&&(s.minFilter=$),void 0!==n.generateMipmaps&&(s.generateMipmaps=n.generateMipmaps),s.needsUpdate=!0,e&&e(s,n))}),n,i),s}}class Nh extends Rh{constructor(t){super(t)}load(t,e,n,i){const r=new Je,s=new Ih(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,(function(t){r.image=t,r.needsUpdate=!0,void 0!==e&&e(r)}),n,i),r}}class Fh extends ri{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new bi(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}class Bh extends Fh{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(ri.DEFAULT_UP),this.updateMatrix(),this.groundColor=new bi(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const zh=new In,kh=new nn,Gh=new nn;class Vh{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Ce(512,512),this.map=null,this.mapPass=null,this.matrix=new In,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Cr,this._frameExtents=new Ce(1,1),this._viewportCount=1,this._viewports=[new Ke(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;kh.setFromMatrixPosition(t.matrixWorld),e.position.copy(kh),Gh.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Gh),e.updateMatrixWorld(),zh.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(zh),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(zh)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Hh extends Vh{constructor(){super(new vr(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,n=2*ve*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;n===e.fov&&i===e.aspect&&r===e.far||(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class Wh extends Fh{constructor(t,e,n=0,i=Math.PI/3,r=0,s=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(ri.DEFAULT_UP),this.updateMatrix(),this.target=new ri,this.distance=n,this.angle=i,this.penumbra=r,this.decay=s,this.map=null,this.shadow=new Hh}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const jh=new In,Xh=new nn,qh=new nn;class Yh extends Vh{constructor(){super(new vr(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Ce(4,2),this._viewportCount=6,this._viewports=[new Ke(2,1,1,1),new Ke(0,1,1,1),new Ke(3,1,1,1),new Ke(1,1,1,1),new Ke(3,0,1,1),new Ke(1,0,1,1)],this._cubeDirections=[new nn(1,0,0),new nn(-1,0,0),new nn(0,0,1),new nn(0,0,-1),new nn(0,1,0),new nn(0,-1,0)],this._cubeUps=[new nn(0,1,0),new nn(0,1,0),new nn(0,1,0),new nn(0,1,0),new nn(0,0,1),new nn(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Xh.setFromMatrixPosition(t.matrixWorld),n.position.copy(Xh),qh.copy(n.position),qh.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(qh),n.updateMatrixWorld(),i.makeTranslation(-Xh.x,-Xh.y,-Xh.z),jh.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(jh)}}class Zh extends Fh{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Yh}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class Jh extends Vh{constructor(){super(new Vr(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Kh extends Fh{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(ri.DEFAULT_UP),this.updateMatrix(),this.target=new ri,this.shadow=new Jh}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class $h extends Fh{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class Qh extends Fh{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class tu{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new nn)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,r=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.282095),e.addScaledVector(s[1],.488603*i),e.addScaledVector(s[2],.488603*r),e.addScaledVector(s[3],.488603*n),e.addScaledVector(s[4],n*i*1.092548),e.addScaledVector(s[5],i*r*1.092548),e.addScaledVector(s[6],.315392*(3*r*r-1)),e.addScaledVector(s[7],n*r*1.092548),e.addScaledVector(s[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,r=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.886227),e.addScaledVector(s[1],1.023328*i),e.addScaledVector(s[2],1.023328*r),e.addScaledVector(s[3],1.023328*n),e.addScaledVector(s[4],.858086*n*i),e.addScaledVector(s[5],.858086*i*r),e.addScaledVector(s[6],.743125*r*r-.247708),e.addScaledVector(s[7],.858086*n*r),e.addScaledVector(s[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+3*i);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+3*i);return t}static getBasisAt(t,e){const n=t.x,i=t.y,r=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-i*i)}}class eu extends Fh{constructor(t=new tu,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class nu extends Rh{constructor(t){super(t),this.textures={}}load(t,e,n,i){const r=this,s=new Lh(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,(function(n){try{e(r.parse(JSON.parse(n)))}catch(s){i&&i(s),r.manager.itemError(t)}}),n,i)}parse(t){const e=this.textures;function n(t){return e[t],e[t]}const i=nu.createMaterialFromType(t.type);if(void 0!==t.uuid&&(i.uuid=t.uuid),void 0!==t.name&&(i.name=t.name),void 0!==t.color&&void 0!==i.color&&i.color.setHex(t.color),void 0!==t.roughness&&(i.roughness=t.roughness),void 0!==t.metalness&&(i.metalness=t.metalness),void 0!==t.sheen&&(i.sheen=t.sheen),void 0!==t.sheenColor&&(i.sheenColor=(new bi).setHex(t.sheenColor)),void 0!==t.sheenRoughness&&(i.sheenRoughness=t.sheenRoughness),void 0!==t.emissive&&void 0!==i.emissive&&i.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==i.specular&&i.specular.setHex(t.specular),void 0!==t.specularIntensity&&(i.specularIntensity=t.specularIntensity),void 0!==t.specularColor&&void 0!==i.specularColor&&i.specularColor.setHex(t.specularColor),void 0!==t.shininess&&(i.shininess=t.shininess),void 0!==t.clearcoat&&(i.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(i.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.iridescence&&(i.iridescence=t.iridescence),void 0!==t.iridescenceIOR&&(i.iridescenceIOR=t.iridescenceIOR),void 0!==t.iridescenceThicknessRange&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),void 0!==t.transmission&&(i.transmission=t.transmission),void 0!==t.thickness&&(i.thickness=t.thickness),void 0!==t.attenuationDistance&&(i.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==i.attenuationColor&&i.attenuationColor.setHex(t.attenuationColor),void 0!==t.anisotropy&&(i.anisotropy=t.anisotropy),void 0!==t.anisotropyRotation&&(i.anisotropyRotation=t.anisotropyRotation),void 0!==t.fog&&(i.fog=t.fog),void 0!==t.flatShading&&(i.flatShading=t.flatShading),void 0!==t.blending&&(i.blending=t.blending),void 0!==t.combine&&(i.combine=t.combine),void 0!==t.side&&(i.side=t.side),void 0!==t.shadowSide&&(i.shadowSide=t.shadowSide),void 0!==t.opacity&&(i.opacity=t.opacity),void 0!==t.transparent&&(i.transparent=t.transparent),void 0!==t.alphaTest&&(i.alphaTest=t.alphaTest),void 0!==t.depthTest&&(i.depthTest=t.depthTest),void 0!==t.depthWrite&&(i.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(i.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(i.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(i.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(i.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(i.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(i.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(i.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(i.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(i.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(i.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(i.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(i.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(i.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(i.rotation=t.rotation),1!==t.linewidth&&(i.linewidth=t.linewidth),void 0!==t.dashSize&&(i.dashSize=t.dashSize),void 0!==t.gapSize&&(i.gapSize=t.gapSize),void 0!==t.scale&&(i.scale=t.scale),void 0!==t.polygonOffset&&(i.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(i.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(i.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(i.dithering=t.dithering),void 0!==t.alphaToCoverage&&(i.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(i.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.forceSinglePass&&(i.forceSinglePass=t.forceSinglePass),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.toneMapped&&(i.toneMapped=t.toneMapped),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const r in t.uniforms){const e=t.uniforms[r];switch(i.uniforms[r]={},e.type){case"t":i.uniforms[r].value=n(e.value);break;case"c":i.uniforms[r].value=(new bi).setHex(e.value);break;case"v2":i.uniforms[r].value=(new Ce).fromArray(e.value);break;case"v3":i.uniforms[r].value=(new nn).fromArray(e.value);break;case"v4":i.uniforms[r].value=(new Ke).fromArray(e.value);break;case"m3":i.uniforms[r].value=(new Re).fromArray(e.value);break;case"m4":i.uniforms[r].value=(new In).fromArray(e.value);break;default:i.uniforms[r].value=e.value}}if(void 0!==t.defines&&(i.defines=t.defines),void 0!==t.vertexShader&&(i.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(i.fragmentShader=t.fragmentShader),void 0!==t.glslVersion&&(i.glslVersion=t.glslVersion),void 0!==t.extensions)for(const r in t.extensions)i.extensions[r]=t.extensions[r];if(void 0!==t.lights&&(i.lights=t.lights),void 0!==t.clipping&&(i.clipping=t.clipping),void 0!==t.size&&(i.size=t.size),void 0!==t.sizeAttenuation&&(i.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(i.map=n(t.map)),void 0!==t.matcap&&(i.matcap=n(t.matcap)),void 0!==t.alphaMap&&(i.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(i.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(i.bumpScale=t.bumpScale),void 0!==t.normalMap&&(i.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(i.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),i.normalScale=(new Ce).fromArray(e)}return void 0!==t.displacementMap&&(i.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(i.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(i.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(i.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(i.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(i.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(i.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(i.specularMap=n(t.specularMap)),void 0!==t.specularIntensityMap&&(i.specularIntensityMap=n(t.specularIntensityMap)),void 0!==t.specularColorMap&&(i.specularColorMap=n(t.specularColorMap)),void 0!==t.envMap&&(i.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(i.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(i.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(i.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(i.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(i.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(i.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(i.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(i.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(i.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(i.clearcoatNormalScale=(new Ce).fromArray(t.clearcoatNormalScale)),void 0!==t.iridescenceMap&&(i.iridescenceMap=n(t.iridescenceMap)),void 0!==t.iridescenceThicknessMap&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),void 0!==t.transmissionMap&&(i.transmissionMap=n(t.transmissionMap)),void 0!==t.thicknessMap&&(i.thicknessMap=n(t.thicknessMap)),void 0!==t.anisotropyMap&&(i.anisotropyMap=n(t.anisotropyMap)),void 0!==t.sheenColorMap&&(i.sheenColorMap=n(t.sheenColorMap)),void 0!==t.sheenRoughnessMap&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}static createMaterialFromType(t){return new{ShadowMaterial:Zc,SpriteMaterial:vo,RawShaderMaterial:Jc,ShaderMaterial:mr,PointsMaterial:vl,MeshPhysicalMaterial:$c,MeshStandardMaterial:Kc,MeshPhongMaterial:Qc,MeshToonMaterial:th,MeshNormalMaterial:eh,MeshLambertMaterial:nh,MeshDepthMaterial:qa,MeshDistanceMaterial:Ya,MeshBasicMaterial:Ti,MeshMatcapMaterial:ih,LineDashedMaterial:rh,LineBasicMaterial:al,Material:_i}[t]}}class iu{static decodeText(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let i=0,r=t.length;i<r;i++)e+=String.fromCharCode(t[i]);try{return decodeURIComponent(escape(e))}catch(n){return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.slice(0,e+1)}static resolveURL(t,e){return"string"!=typeof t||""===t?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class ru extends Wi{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class su extends Rh{constructor(t){super(t)}load(t,e,n,i){const r=this,s=new Lh(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,(function(n){try{e(r.parse(JSON.parse(n)))}catch(s){i&&i(s),r.manager.itemError(t)}}),n,i)}parse(t){const e={},n={};function i(t,i){if(void 0!==e[i])return e[i];const r=t.interleavedBuffers[i],s=function(t,e){if(void 0!==n[e])return n[e];const i=t.arrayBuffers,r=i[e],s=new Uint32Array(r).buffer;return n[e]=s,s}(t,r.buffer),a=Ie(r.type,s),o=new fo(a,r.stride);return o.uuid=r.uuid,e[i]=o,o}const r=t.isInstancedBufferGeometry?new ru:new Wi,s=t.data.index;if(void 0!==s){const t=Ie(s.type,s.array);r.setIndex(new Ii(t,1))}const a=t.data.attributes;for(const h in a){const e=a[h];let n;if(e.isInterleavedBufferAttribute){const r=i(t.data,e.data);n=new go(r,e.itemSize,e.offset,e.normalized)}else{const t=Ie(e.type,e.array);n=new(e.isInstancedBufferAttribute?Ko:Ii)(t,e.itemSize,e.normalized)}void 0!==e.name&&(n.name=e.name),void 0!==e.usage&&n.setUsage(e.usage),void 0!==e.updateRange&&(n.updateRange.offset=e.updateRange.offset,n.updateRange.count=e.updateRange.count),r.setAttribute(h,n)}const o=t.data.morphAttributes;if(o)for(const h in o){const e=o[h],n=[];for(let r=0,s=e.length;r<s;r++){const s=e[r];let a;if(s.isInterleavedBufferAttribute){const e=i(t.data,s.data);a=new go(e,s.itemSize,s.offset,s.normalized)}else{const t=Ie(s.type,s.array);a=new Ii(t,s.itemSize,s.normalized)}void 0!==s.name&&(a.name=s.name),n.push(a)}r.morphAttributes[h]=n}t.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const l=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==l)for(let h=0,u=l.length;h!==u;++h){const t=l[h];r.addGroup(t.start,t.count,t.materialIndex)}const c=t.data.boundingSphere;if(void 0!==c){const t=new nn;void 0!==c.center&&t.fromArray(c.center),r.boundingSphere=new wn(t,c.radius)}return t.name&&(r.name=t.name),t.userData&&(r.userData=t.userData),r}}const au={UVMapping:k,CubeReflectionMapping:G,CubeRefractionMapping:V,EquirectangularReflectionMapping:H,EquirectangularRefractionMapping:W,CubeUVReflectionMapping:j},ou={RepeatWrapping:X,ClampToEdgeWrapping:q,MirroredRepeatWrapping:Y},lu={NearestFilter:Z,NearestMipmapNearestFilter:J,NearestMipmapLinearFilter:K,LinearFilter:$,LinearMipmapNearestFilter:Q,LinearMipmapLinearFilter:tt};let cu;class hu{static getContext(){return void 0===cu&&(cu=new(window.AudioContext||window.webkitAudioContext)),cu}static setContext(t){cu=t}}const uu=new In,du=new In,pu=new In;class fu{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=mu(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=mu();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function mu(){return("undefined"==typeof performance?Date:performance).now()}const gu=new nn,vu=new en,_u=new nn,yu=new nn;class xu extends ri{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return;if(!1===this.hasPlaybackControl)return;this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,null!==this.source&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1!==this.hasPlaybackControl&&this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const Mu=new nn,Su=new en,bu=new nn,wu=new nn;class Tu{constructor(t,e,n){let i,r,s;switch(this.binding=t,this.valueSize=n,e){case"quaternion":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let s=this.cumulativeWeight;if(0===s){for(let t=0;t!==i;++t)n[r+t]=n[t];s=e}else{s+=e;const t=e/s;this._mixBufferRegion(n,r,0,t,i)}this.cumulativeWeight=s}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const t=e*this._origIndex;this._mixBufferRegion(n,i,t,1-r,e)}s>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let o=e,l=e+e;o!==l;++o)if(n[o]!==n[o+e]){a.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let r=n,s=i;r!==s;++r)e[r]=e[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,r){if(i>=.5)for(let s=0;s!==r;++s)t[e+s]=t[n+s]}_slerp(t,e,n,i){en.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,r){const s=this._workIndex*r;en.multiplyQuaternionsFlat(t,s,t,e,t,n),en.slerpFlat(t,e,t,e,t,s,i)}_lerp(t,e,n,i,r){const s=1-i;for(let a=0;a!==r;++a){const r=e+a;t[r]=t[r]*s+t[n+a]*i}}_lerpAdditive(t,e,n,i,r){for(let s=0;s!==r;++s){const r=e+s;t[r]=t[r]+t[n+s]*i}}}const Eu="\\[\\]\\.:\\/",Au=new RegExp("["+Eu+"]","g"),Cu="[^"+Eu+"]",Ru="[^"+Eu.replace("\\.","")+"]",Pu=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Cu)+/(WCOD+)?/.source.replace("WCOD",Ru)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Cu)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Cu)+"$"),Uu=["material","materials","bones","map"];class Lu{constructor(t,e,n){this.path=e,this.parsedPath=n||Lu.parseTrackName(e),this.node=Lu.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Lu.Composite(t,e,n):new Lu(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(Au,"")}static parseTrackName(t){const e=Pu.exec(t);if(null===e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const t=n.nodeName.substring(i+1);-1!==Uu.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let i=0;i<t.length;i++){const r=t[i];if(r.name===e||r.uuid===e)return r;const s=n(r.children);if(s)return s}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=Lu.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return;if(n){let i=e.objectIndex;switch(n){case"materials":if(!t.material)return;if(!t.material.materials)return;t=t.material.materials;break;case"bones":if(!t.skeleton)return;t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material)return;if(!t.material.map)return;t=t.material.map;break;default:if(void 0===t[n])return;t=t[n]}if(void 0!==i){if(void 0===t[i])return;t=t[i]}}const s=t[i];if(void 0===s){e.nodeName;return}let a=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!t.geometry)return;if(!t.geometry.morphAttributes)return;void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Lu.Composite=class{constructor(t,e,n){const i=n||Lu.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}},Lu.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Lu.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Lu.prototype.GetterByBindingType=[Lu.prototype._getValue_direct,Lu.prototype._getValue_array,Lu.prototype._getValue_arrayElement,Lu.prototype._getValue_toArray],Lu.prototype.SetterByBindingTypeAndVersioning=[[Lu.prototype._setValue_direct,Lu.prototype._setValue_direct_setNeedsUpdate,Lu.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Lu.prototype._setValue_array,Lu.prototype._setValue_array_setNeedsUpdate,Lu.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Lu.prototype._setValue_arrayElement,Lu.prototype._setValue_arrayElement_setNeedsUpdate,Lu.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Lu.prototype._setValue_fromArray,Lu.prototype._setValue_fromArray_setNeedsUpdate,Lu.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Iu{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const r=e.tracks,s=r.length,a=new Array(s),o={endingStart:Yt,endingEnd:Yt};for(let l=0;l!==s;++l){const t=r[l].createInterpolant(null);a[l]=t,t.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,i=t._clip.duration,r=i/n,s=n/i;t.warp(1,r,e),this.warp(s,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,r=i.time,s=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=r,o[1]=r+n,l[0]=t/s,l[1]=e/s,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled)return void this._updateWeight(t);const r=this._startTime;if(null!==r){const i=(t-r)*n;i<0||0===n?e=0:(this._startTime=null,e=n*i)}e*=this._updateTimeScale(t);const s=this._updateTime(e),a=this._updateWeight(t);if(a>0){const t=this._interpolants,e=this._propertyBindings;if(this.blendMode===$t)for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(s),e[n].accumulateAdditive(a);else for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(s),e[n].accumulate(i,a)}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(null!==n){e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,r=this._loopCount;const s=2202===n;if(0===t)return-1===r?i:s&&1==(1&r)?e-i:i;if(2200===n){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else{if(!(i<0)){this.time=i;break t}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),i>=e||i<0){const n=Math.floor(i/e);i-=e*n,r+=Math.abs(n);const a=this.repetitions-r;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===a){const e=t<0;this._setEndings(e,!e,s)}else this._setEndings(!1,!1,s);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=i;if(s&&1==(1&r))return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=Zt,i.endingEnd=Zt):(i.endingStart=t?this.zeroSlopeAtStart?Zt:Yt:Jt,i.endingEnd=e?this.zeroSlopeAtEnd?Zt:Yt:Jt)}_scheduleFading(t,e,n){const i=this._mixer,r=i.time;let s=this._weightInterpolant;null===s&&(s=i._lendControlInterpolant(),this._weightInterpolant=s);const a=s.parameterPositions,o=s.sampleValues;return a[0]=r,o[0]=e,a[1]=r+t,o[1]=n,this}}const Du=new Float32Array(1);class Ou{constructor(t){this.value=t}clone(){return new Ou(void 0===this.value.clone?this.value:this.value.clone())}}let Nu=0;class Fu{constructor(t,e,n=0,i=1/0){this.ray=new Ln(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Wn,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera&&(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e)}intersectObject(t,e=!0,n=[]){return zu(t,this,n,e),n.sort(Bu),n}intersectObjects(t,e=!0,n=[]){for(let i=0,r=t.length;i<r;i++)zu(t[i],this,n,e);return n.sort(Bu),n}}function Bu(t,e){return t.distance-e.distance}function zu(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===i){const i=t.children;for(let t=0,r=i.length;t<r;t++)zu(i[t],e,n,!0)}}class ku{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(ye(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}const Gu=new Ce;class Vu{constructor(t=new Ce(1/0,1/0),e=new Ce(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Gu.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Gu).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Hu=new nn,Wu=new nn;class ju{constructor(t=new nn,e=new nn){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Hu.subVectors(t,this.start),Wu.subVectors(this.end,this.start);const n=Wu.dot(Wu);let i=Wu.dot(Hu)/n;return e&&(i=ye(i,0,1)),i}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const Xu=new nn;class qu extends ri{constructor(t,e){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new Wi,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let s=0,a=1,o=32;s<o;s++,a++){const t=s/o*Math.PI*2,e=a/o*Math.PI*2;i.push(Math.cos(t),Math.sin(t),1,Math.cos(e),Math.sin(e),1)}n.setAttribute("position",new Ni(i,3));const r=new al({fog:!1,toneMapped:!1});this.cone=new ml(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),Xu.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Xu),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Yu=new nn,Zu=new In,Ju=new In;function Ku(t){const e=[];!0===t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,Ku(t.children[n]));return e}class $u extends lr{constructor(t,e,n){super(new Gc(e,4,2),new Ti({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Qu=new nn,td=new bi,ed=new bi;const nd=new nn,id=new nn,rd=new nn;class sd extends ri{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",void 0===e&&(e=1);let i=new Wi;i.setAttribute("position",new Ni([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const r=new al({fog:!1,toneMapped:!1});this.lightPlane=new dl(i,r),this.add(this.lightPlane),i=new Wi,i.setAttribute("position",new Ni([0,0,0,0,0,1],3)),this.targetLine=new dl(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),nd.setFromMatrixPosition(this.light.matrixWorld),id.setFromMatrixPosition(this.light.target.matrixWorld),rd.subVectors(id,nd),this.lightPlane.lookAt(id),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(id),this.targetLine.scale.z=rd.length()}}const ad=new nn,od=new gr;class ld extends ml{constructor(t){const e=new Wi,n=new al({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],s={};function a(t,e){o(t),o(e)}function o(t){i.push(0,0,0),r.push(0,0,0),void 0===s[t]&&(s[t]=[]),s[t].push(i.length/3-1)}a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4"),e.setAttribute("position",new Ni(i,3)),e.setAttribute("color",new Ni(r,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update();const l=new bi(16755200),c=new bi(16711680),h=new bi(43775),u=new bi(16777215),d=new bi(3355443);this.setColors(l,c,h,u,d)}setColors(t,e,n,i,r){const s=this.geometry.getAttribute("color");s.setXYZ(0,t.r,t.g,t.b),s.setXYZ(1,t.r,t.g,t.b),s.setXYZ(2,t.r,t.g,t.b),s.setXYZ(3,t.r,t.g,t.b),s.setXYZ(4,t.r,t.g,t.b),s.setXYZ(5,t.r,t.g,t.b),s.setXYZ(6,t.r,t.g,t.b),s.setXYZ(7,t.r,t.g,t.b),s.setXYZ(8,t.r,t.g,t.b),s.setXYZ(9,t.r,t.g,t.b),s.setXYZ(10,t.r,t.g,t.b),s.setXYZ(11,t.r,t.g,t.b),s.setXYZ(12,t.r,t.g,t.b),s.setXYZ(13,t.r,t.g,t.b),s.setXYZ(14,t.r,t.g,t.b),s.setXYZ(15,t.r,t.g,t.b),s.setXYZ(16,t.r,t.g,t.b),s.setXYZ(17,t.r,t.g,t.b),s.setXYZ(18,t.r,t.g,t.b),s.setXYZ(19,t.r,t.g,t.b),s.setXYZ(20,t.r,t.g,t.b),s.setXYZ(21,t.r,t.g,t.b),s.setXYZ(22,t.r,t.g,t.b),s.setXYZ(23,t.r,t.g,t.b),s.setXYZ(24,e.r,e.g,e.b),s.setXYZ(25,e.r,e.g,e.b),s.setXYZ(26,e.r,e.g,e.b),s.setXYZ(27,e.r,e.g,e.b),s.setXYZ(28,e.r,e.g,e.b),s.setXYZ(29,e.r,e.g,e.b),s.setXYZ(30,e.r,e.g,e.b),s.setXYZ(31,e.r,e.g,e.b),s.setXYZ(32,n.r,n.g,n.b),s.setXYZ(33,n.r,n.g,n.b),s.setXYZ(34,n.r,n.g,n.b),s.setXYZ(35,n.r,n.g,n.b),s.setXYZ(36,n.r,n.g,n.b),s.setXYZ(37,n.r,n.g,n.b),s.setXYZ(38,i.r,i.g,i.b),s.setXYZ(39,i.r,i.g,i.b),s.setXYZ(40,r.r,r.g,r.b),s.setXYZ(41,r.r,r.g,r.b),s.setXYZ(42,r.r,r.g,r.b),s.setXYZ(43,r.r,r.g,r.b),s.setXYZ(44,r.r,r.g,r.b),s.setXYZ(45,r.r,r.g,r.b),s.setXYZ(46,r.r,r.g,r.b),s.setXYZ(47,r.r,r.g,r.b),s.setXYZ(48,r.r,r.g,r.b),s.setXYZ(49,r.r,r.g,r.b),s.needsUpdate=!0}update(){const t=this.geometry,e=this.pointMap;od.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),cd("c",e,t,od,0,0,-1),cd("t",e,t,od,0,0,1),cd("n1",e,t,od,-1,-1,-1),cd("n2",e,t,od,1,-1,-1),cd("n3",e,t,od,-1,1,-1),cd("n4",e,t,od,1,1,-1),cd("f1",e,t,od,-1,-1,1),cd("f2",e,t,od,1,-1,1),cd("f3",e,t,od,-1,1,1),cd("f4",e,t,od,1,1,1),cd("u1",e,t,od,.7,1.1,-1),cd("u2",e,t,od,-.7,1.1,-1),cd("u3",e,t,od,0,2,-1),cd("cf1",e,t,od,-1,0,1),cd("cf2",e,t,od,1,0,1),cd("cf3",e,t,od,0,-1,1),cd("cf4",e,t,od,0,1,1),cd("cn1",e,t,od,-1,0,-1),cd("cn2",e,t,od,1,0,-1),cd("cn3",e,t,od,0,-1,-1),cd("cn4",e,t,od,0,1,-1),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function cd(t,e,n,i,r,s,a){ad.set(r,s,a).unproject(i);const o=e[t];if(void 0!==o){const t=n.getAttribute("position");for(let e=0,n=o.length;e<n;e++)t.setXYZ(o[e],ad.x,ad.y,ad.z)}}const hd=new an;class ud extends ml{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Wi;i.setIndex(new Ii(n,1)),i.setAttribute("position",new Ni([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new al({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}const dd=new nn;let pd,fd;class md extends ml{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=new Wi;n.setAttribute("position",new Ni(e,3)),n.setAttribute("color",new Ni([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(n,new al({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(t,e,n){const i=new bi,r=this.geometry.attributes.color.array;return i.set(t),i.toArray(r,0),i.toArray(r,3),i.set(e),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class gd{constructor(){this.type="ShapePath",this.color=new bi,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new ql,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,r,s){return this.currentPath.bezierCurveTo(t,e,n,i,r,s),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(t,e){const n=e.length;let i=!1;for(let r=n-1,s=0;s<n;r=s++){let n=e[r],a=e[s],o=a.x-n.x,l=a.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=e[s],o=-o,a=e[r],l=-l),t.y<n.y||t.y>a.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=l*(t.x-n.x)-o*(t.y-n.y);if(0===e)return!0;if(e<0)continue;i=!i}}else{if(t.y!==n.y)continue;if(a.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=a.x)return!0}}return i}const n=Lc.isClockWise,i=this.subPaths;if(0===i.length)return[];let r,s,a;const o=[];if(1===i.length)return s=i[0],a=new ac,a.curves=s.curves,o.push(a),o;let l=!n(i[0].getPoints());l=t?!l:l;const c=[],h=[];let u,d,p=[],f=0;h[f]=void 0,p[f]=[];for(let m=0,g=i.length;m<g;m++)s=i[m],u=s.getPoints(),r=n(u),r=t?!r:r,r?(!l&&h[f]&&f++,h[f]={s:new ac,p:u},h[f].s.curves=s.curves,l&&f++,p[f]=[]):p[f].push({h:s,p:u[0]});if(!h[0])return function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n],r=new ac;r.curves=i.curves,e.push(r)}return e}(i);if(h.length>1){let t=!1,n=0;for(let e=0,i=h.length;e<i;e++)c[e]=[];for(let i=0,r=h.length;i<r;i++){const r=p[i];for(let s=0;s<r.length;s++){const a=r[s];let o=!0;for(let r=0;r<h.length;r++)e(a.p,h[r].p)&&(i!==r&&n++,o?(o=!1,c[r].push(a)):t=!0);o&&c[i].push(a)}}n>0&&!1===t&&(p=c)}for(let m=0,g=h.length;m<g;m++){a=h[m].s,o.push(a),d=p[m];for(let t=0,e=d.length;t<e;t++)a.holes.push(d[t].h)}return o}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:w}})),"undefined"!=typeof window&&(window.__THREE__||(window.__THREE__=w));const vd=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:B,AddEquation:P,AddOperation:I,AdditiveAnimationBlendMode:$t,AdditiveBlending:2,AlphaFormat:1021,AlwaysCompare:519,AlwaysDepth:1,AlwaysStencilFunc:519,AmbientLight:$h,AmbientLightProbe:class extends eu{constructor(t,e=1){super(void 0,e),this.isAmbientLightProbe=!0;const n=(new bi).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}},AnimationAction:Iu,AnimationClip:wh,AnimationLoader:class extends Rh{constructor(t){super(t)}load(t,e,n,i){const r=this,s=new Lh(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(function(n){try{e(r.parse(JSON.parse(n)))}catch(s){i&&i(s),r.manager.itemError(t)}}),n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=wh.parse(t[n]);e.push(i)}return e}},AnimationMixer:class extends pe{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,s=t._propertyBindings,a=t._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let c=l[o];void 0===c&&(c={},l[o]=c);for(let h=0;h!==r;++h){const t=i[h],r=t.name;let l=c[r];if(void 0!==l)++l.referenceCount,s[h]=l;else{if(l=s[h],void 0!==l){null===l._cacheIndex&&(++l.referenceCount,this._addInactiveBinding(l,o,r));continue}const i=e&&e._propertyBindings[h].binding.parsedPath;l=new Tu(Lu.create(n,r,i),t.ValueTypeName,t.getValueSize()),++l.referenceCount,this._addInactiveBinding(l,o,r),s[h]=l}a[h].resultBuffer=l.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,r=this._actionsByClip;let s=r[e];if(void 0===s)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=s;else{const e=s.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=i.length,i.push(t),s.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,s=this._actionsByClip,a=s[r],o=a.knownActions,l=o[o.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),t._byClipCacheIndex=null;delete a.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete s[r],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const t=e[n];0==--t.referenceCount&&this._removeInactiveBinding(t)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[e];void 0===s&&(s={},i[e]=s),s[n]=t,t._cacheIndex=r.length,r.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,a=s[i],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[r],0===Object.keys(a).length&&delete s[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new fh(new Float32Array(2),new Float32Array(2),1,Du),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r}clipAction(t,e,n){const i=e||this._root,r=i.uuid;let s="string"==typeof t?wh.findByName(i,t):t;const a=null!==s?s.uuid:t,o=this._actionsByClip[a];let l=null;if(void 0===n&&(n=null!==s?s.blendMode:Kt),void 0!==o){const t=o.actionByRoot[r];if(void 0!==t&&t.blendMode===n)return t;l=o.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;const c=new Iu(this,s,e,n);return this._bindAction(c,l),this._addInactiveAction(c,a,r),c}existingAction(t,e){const n=e||this._root,i=n.uuid,r="string"==typeof t?wh.findByName(n,t):t,s=r?r.uuid:t,a=this._actionsByClip[s];return void 0!==a&&a.actionByRoot[i]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),s=this._accuIndex^=1;for(let l=0;l!==n;++l){e[l]._update(i,t,r,s)}const a=this._bindings,o=this._nActiveBindings;for(let l=0;l!==o;++l)a[l].apply(s);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(void 0!==r){const t=r.knownActions;for(let n=0,i=t.length;n!==i;++n){const i=t[n];this._deactivateAction(i);const r=i._cacheIndex,s=e[e.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,s._cacheIndex=r,e[r]=s,e.pop(),this._removeInactiveBindingsForAction(i)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const r in n){const t=n[r].actionByRoot[e];void 0!==t&&(this._deactivateAction(t),this._removeInactiveAction(t))}const i=this._bindingsByRootAndName[e];if(void 0!==i)for(const r in i){const t=i[r];t.restoreOriginalState(),this._removeInactiveBinding(t)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}},AnimationObjectGroup:class{constructor(){this.isAnimationObjectGroup=!0,this.uuid=_e(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let a,o=t.length,l=this.nCachedObjects_;for(let c=0,h=arguments.length;c!==h;++c){const h=arguments[c],u=h.uuid;let d=e[u];if(void 0===d){d=o++,e[u]=d,t.push(h);for(let t=0,e=s;t!==e;++t)r[t].push(new Lu(h,n[t],i[t]))}else if(d<l){a=t[d];const o=--l,c=t[o];e[c.uuid]=d,t[d]=c,e[u]=o,t[o]=h;for(let t=0,e=s;t!==e;++t){const e=r[t],s=e[o];let a=e[d];e[d]=s,void 0===a&&(a=new Lu(h,n[t],i[t])),e[o]=a}}else t[d]}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let s=0,a=arguments.length;s!==a;++s){const a=arguments[s],o=a.uuid,l=e[o];if(void 0!==l&&l>=r){const s=r++,c=t[s];e[c.uuid]=l,t[l]=c,e[o]=s,t[s]=a;for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[s],r=e[l];e[l]=i,e[s]=r}}}this.nCachedObjects_=r}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,s=t.length;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a].uuid,l=e[o];if(void 0!==l)if(delete e[o],l<r){const a=--r,o=t[a],c=--s,h=t[c];e[o.uuid]=l,t[l]=o,e[h.uuid]=a,t[a]=h,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t],i=e[a],r=e[c];e[l]=i,e[a]=r,e.pop()}}else{const r=--s,a=t[r];r>0&&(e[a.uuid]=l),t[l]=a,t.pop();for(let t=0,e=i;t!==e;++t){const e=n[t];e[l]=e[r],e.pop()}}}this.nCachedObjects_=r}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const r=this._bindings;if(void 0!==i)return r[i];const s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,h=new Array(l);i=r.length,n[t]=i,s.push(t),a.push(e),r.push(h);for(let u=c,d=o.length;u!==d;++u){const n=o[u];h[u]=new Lu(n,t,e)}return h}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const i=this._paths,r=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a];e[t[a]]=n,s[n]=o,s.pop(),r[n]=r[a],r.pop(),i[n]=i[a],i.pop()}}},AnimationUtils:uh,ArcCurve:Cl,ArrayCamera:Qa,ArrowHelper:class extends ri{constructor(t=new nn(0,0,1),e=new nn(0,0,0),n=1,i=16776960,r=.2*n,s=.2*r){super(),this.type="ArrowHelper",void 0===pd&&(pd=new Wi,pd.setAttribute("position",new Ni([0,0,0,0,1,0],3)),fd=new Kl(0,.5,1,5,1),fd.translate(0,-.5,0)),this.position.copy(e),this.line=new dl(pd,new al({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new lr(fd,new Ti({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,s)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{dd.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(dd,e)}}setLength(t,e=.2*t,n=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}},Audio:xu,AudioAnalyser:class{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}},AudioContext:hu,AudioListener:class extends ri{constructor(){super(),this.type="AudioListener",this.context=hu.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new fu}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(gu,vu,_u),yu.set(0,0,-1).applyQuaternion(vu),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(gu.x,t),e.positionY.linearRampToValueAtTime(gu.y,t),e.positionZ.linearRampToValueAtTime(gu.z,t),e.forwardX.linearRampToValueAtTime(yu.x,t),e.forwardY.linearRampToValueAtTime(yu.y,t),e.forwardZ.linearRampToValueAtTime(yu.z,t),e.upX.linearRampToValueAtTime(n.x,t),e.upY.linearRampToValueAtTime(n.y,t),e.upZ.linearRampToValueAtTime(n.z,t)}else e.setPosition(gu.x,gu.y,gu.z),e.setOrientation(yu.x,yu.y,yu.z,n.x,n.y,n.z)}},AudioLoader:class extends Rh{constructor(t){super(t)}load(t,e,n,i){const r=this,s=new Lh(this.manager);function a(e){i&&i(e),r.manager.itemError(t)}s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(function(t){try{const n=t.slice(0);hu.getContext().decodeAudioData(n,(function(t){e(t)}),a)}catch(n){a(n)}}),n,i)}},AxesHelper:md,BackSide:R,BasicDepthPacking:3200,BasicShadowMap:0,Bone:Xo,BooleanKeyframeTrack:vh,Box2:Vu,Box3:an,Box3Helper:ud,BoxBufferGeometry:class extends hr{constructor(t,e,n,i,r,s){super(t,e,n,i,r,s)}},BoxGeometry:hr,BoxHelper:class extends ml{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),r=new Wi;r.setIndex(new Ii(n,1)),r.setAttribute("position",new Ii(i,3)),super(r,new al({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(void 0!==this.object&&hd.setFromObject(this.object),hd.isEmpty())return;const e=hd.min,n=hd.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=e.x,r[4]=n.y,r[5]=n.z,r[6]=e.x,r[7]=e.y,r[8]=n.z,r[9]=n.x,r[10]=e.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=e.z,r[15]=e.x,r[16]=n.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=n.x,r[22]=e.y,r[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}},BufferAttribute:Ii,BufferGeometry:Wi,BufferGeometryLoader:su,ByteType:1010,Cache:Eh,Camera:gr,CameraHelper:ld,CanvasTexture:class extends Je{constructor(t,e,n,i,r,s,a,o,l){super(t,e,n,i,r,s,a,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}},CapsuleBufferGeometry:class extends Zl{constructor(t,e,n,i){super(t,e,n,i)}},CapsuleGeometry:Zl,CatmullRomCurve3:Dl,CineonToneMapping:F,CircleBufferGeometry:class extends Jl{constructor(t,e,n,i){super(t,e,n,i)}},CircleGeometry:Jl,ClampToEdgeWrapping:q,Clock:fu,Color:bi,ColorKeyframeTrack:_h,ColorManagement:He,CompressedArrayTexture:class extends Tl{constructor(t,e,n,i,r,s){super(t,e,n,r,s),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=q}},CompressedTexture:Tl,CompressedTextureLoader:class extends Rh{constructor(t){super(t)}load(t,e,n,i){const r=this,s=[],a=new Tl,o=new Lh(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(r.withCredentials);let l=0;function c(c){o.load(t[c],(function(t){const n=r.parse(t,!0);s[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},l+=1,6===l&&(1===n.mipmapCount&&(a.minFilter=$),a.image=s,a.format=n.format,a.needsUpdate=!0,e&&e(a))}),n,i)}if(Array.isArray(t))for(let h=0,u=t.length;h<u;++h)c(h);else o.load(t,(function(t){const n=r.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){s[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)s[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),s[e].format=n.format,s[e].width=n.width,s[e].height=n.height}a.image=s}else a.image.width=n.width,a.image.height=n.height,a.mipmaps=n.mipmaps;1===n.mipmapCount&&(a.minFilter=$),a.format=n.format,a.needsUpdate=!0,e&&e(a)}),n,i);return a}},ConeBufferGeometry:class extends $l{constructor(t,e,n,i,r,s,a){super(t,e,n,i,r,s,a)}},ConeGeometry:$l,CubeCamera:yr,CubeReflectionMapping:G,CubeRefractionMapping:V,CubeTexture:xr,CubeTextureLoader:Dh,CubeUVReflectionMapping:j,CubicBezierCurve:Bl,CubicBezierCurve3:zl,CubicInterpolant:ph,CullFaceBack:1,CullFaceFront:2,CullFaceFrontBack:3,CullFaceNone:0,Curve:El,CurvePath:Xl,CustomBlending:5,CustomToneMapping:z,CylinderBufferGeometry:class extends Kl{constructor(t,e,n,i,r,s,a,o){super(t,e,n,i,r,s,a,o)}},CylinderGeometry:Kl,Cylindrical:class{constructor(t=1,e=0,n=0){return this.radius=t,this.theta=e,this.y=n,this}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return(new this.constructor).copy(this)}},Data3DTexture:tn,DataArrayTexture:Qe,DataTexture:qo,DataTextureLoader:Oh,DataUtils:Pi,DecrementStencilOp:7683,DecrementWrapStencilOp:34056,DefaultLoadingManager:Ch,DepthFormat:ut,DepthStencilFormat:dt,DepthTexture:io,DirectionalLight:Kh,DirectionalLightHelper:sd,DiscreteInterpolant:mh,DisplayP3ColorSpace:se,DodecahedronBufferGeometry:class extends tc{constructor(t,e){super(t,e)}},DodecahedronGeometry:tc,DoubleSide:2,DstAlphaFactor:206,DstColorFactor:208,DynamicCopyUsage:35050,DynamicDrawUsage:35048,DynamicReadUsage:35049,EdgesGeometry:sc,EllipseCurve:Al,EqualCompare:514,EqualDepth:4,EqualStencilFunc:514,EquirectangularReflectionMapping:H,EquirectangularRefractionMapping:W,Euler:Hn,EventDispatcher:pe,ExtrudeBufferGeometry:class extends Oc{constructor(t,e){super(t,e)}},ExtrudeGeometry:Oc,FileLoader:Lh,Float16BufferAttribute:class extends Ii{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=Ri(this.array[t*this.itemSize]);return this.normalized&&(e=Te(e,this.array)),e}setX(t,e){return this.normalized&&(e=Ee(e,this.array)),this.array[t*this.itemSize]=Ci(e),this}getY(t){let e=Ri(this.array[t*this.itemSize+1]);return this.normalized&&(e=Te(e,this.array)),e}setY(t,e){return this.normalized&&(e=Ee(e,this.array)),this.array[t*this.itemSize+1]=Ci(e),this}getZ(t){let e=Ri(this.array[t*this.itemSize+2]);return this.normalized&&(e=Te(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Ee(e,this.array)),this.array[t*this.itemSize+2]=Ci(e),this}getW(t){let e=Ri(this.array[t*this.itemSize+3]);return this.normalized&&(e=Te(e,this.array)),e}setW(t,e){return this.normalized&&(e=Ee(e,this.array)),this.array[t*this.itemSize+3]=Ci(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Ee(e,this.array),n=Ee(n,this.array)),this.array[t+0]=Ci(e),this.array[t+1]=Ci(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=Ee(e,this.array),n=Ee(n,this.array),i=Ee(i,this.array)),this.array[t+0]=Ci(e),this.array[t+1]=Ci(n),this.array[t+2]=Ci(i),this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=Ee(e,this.array),n=Ee(n,this.array),i=Ee(i,this.array),r=Ee(r,this.array)),this.array[t+0]=Ci(e),this.array[t+1]=Ci(n),this.array[t+2]=Ci(i),this.array[t+3]=Ci(r),this}},Float32BufferAttribute:Ni,Float64BufferAttribute:class extends Ii{constructor(t,e,n){super(new Float64Array(t),e,n)}},FloatType:st,Fog:uo,FogExp2:ho,FramebufferTexture:class extends Je{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=Z,this.minFilter=Z,this.generateMipmaps=!1,this.needsUpdate=!0}},FrontSide:C,Frustum:Cr,GLBufferAttribute:class{constructor(t,e,n,i,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}},GLSL1:"100",GLSL3:ce,GreaterCompare:516,GreaterDepth:6,GreaterEqualCompare:518,GreaterEqualDepth:5,GreaterEqualStencilFunc:518,GreaterStencilFunc:516,GridHelper:class extends ml{constructor(t=10,e=10,n=4473924,i=8947848){n=new bi(n),i=new bi(i);const r=e/2,s=t/e,a=t/2,o=[],l=[];for(let h=0,u=0,d=-a;h<=e;h++,d+=s){o.push(-a,0,d,a,0,d),o.push(d,0,-a,d,0,a);const t=h===r?n:i;t.toArray(l,u),u+=3,t.toArray(l,u),u+=3,t.toArray(l,u),u+=3,t.toArray(l,u),u+=3}const c=new Wi;c.setAttribute("position",new Ni(o,3)),c.setAttribute("color",new Ni(l,3));super(c,new al({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}},Group:to,HalfFloatType:at,HemisphereLight:Bh,HemisphereLightHelper:class extends ri{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Bc(e);i.rotateY(.5*Math.PI),this.material=new Ti({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),s=new Float32Array(3*r.count);i.setAttribute("color",new Ii(s,3)),this.add(new lr(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");td.copy(this.light.color),ed.copy(this.light.groundColor);for(let t=0,n=e.count;t<n;t++){const i=t<n/2?td:ed;e.setXYZ(t,i.r,i.g,i.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(Qu.setFromMatrixPosition(this.light.matrixWorld).negate())}},HemisphereLightProbe:class extends eu{constructor(t,e,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=(new bi).set(t),r=(new bi).set(e),s=new nn(i.r,i.g,i.b),a=new nn(r.r,r.g,r.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(a).multiplyScalar(o),this.sh.coefficients[1].copy(s).sub(a).multiplyScalar(l)}},IcosahedronBufferGeometry:class extends Fc{constructor(t,e){super(t,e)}},IcosahedronGeometry:Fc,ImageBitmapLoader:class extends Rh{constructor(t){super(t),this.isImageBitmapLoader=!0,this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=Eh.get(t);if(void 0!==s)return r.manager.itemStart(t),setTimeout((function(){e&&e(s),r.manager.itemEnd(t)}),0),s;const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,fetch(t,a).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(r.options,{colorSpaceConversion:"none"}))})).then((function(n){Eh.add(t,n),e&&e(n),r.manager.itemEnd(t)})).catch((function(e){i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)})),r.manager.itemStart(t)}},ImageLoader:Ih,ImageUtils:je,IncrementStencilOp:7682,IncrementWrapStencilOp:34055,InstancedBufferAttribute:Ko,InstancedBufferGeometry:ru,InstancedInterleavedBuffer:class extends fo{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}},InstancedMesh:sl,Int16BufferAttribute:class extends Ii{constructor(t,e,n){super(new Int16Array(t),e,n)}},Int32BufferAttribute:class extends Ii{constructor(t,e,n){super(new Int32Array(t),e,n)}},Int8BufferAttribute:class extends Ii{constructor(t,e,n){super(new Int8Array(t),e,n)}},IntType:it,InterleavedBuffer:fo,InterleavedBufferAttribute:go,Interpolant:dh,InterpolateDiscrete:jt,InterpolateLinear:Xt,InterpolateSmooth:qt,InvertStencilOp:5386,KeepStencilOp:ae,KeyframeTrack:gh,LOD:Oo,LatheBufferGeometry:class extends Yl{constructor(t,e,n,i){super(t,e,n,i)}},LatheGeometry:Yl,Layers:Wn,LessCompare:513,LessDepth:2,LessEqualCompare:515,LessEqualDepth:3,LessEqualStencilFunc:515,LessStencilFunc:513,Light:Fh,LightProbe:eu,Line:dl,Line3:ju,LineBasicMaterial:al,LineCurve:kl,LineCurve3:Gl,LineDashedMaterial:rh,LineLoop:gl,LineSegments:ml,LinearEncoding:Qt,LinearFilter:$,LinearInterpolant:fh,LinearMipMapLinearFilter:1008,LinearMipMapNearestFilter:1007,LinearMipmapLinearFilter:tt,LinearMipmapNearestFilter:Q,LinearSRGBColorSpace:re,LinearToneMapping:O,Loader:Rh,LoaderUtils:iu,LoadingManager:Ah,LoopOnce:2200,LoopPingPong:2202,LoopRepeat:2201,LuminanceAlphaFormat:1025,LuminanceFormat:1024,MOUSE:{LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Material:_i,MaterialLoader:nu,MathUtils:Ae,Matrix3:Re,Matrix4:In,MaxEquation:104,Mesh:lr,MeshBasicMaterial:Ti,MeshDepthMaterial:qa,MeshDistanceMaterial:Ya,MeshLambertMaterial:nh,MeshMatcapMaterial:ih,MeshNormalMaterial:eh,MeshPhongMaterial:Qc,MeshPhysicalMaterial:$c,MeshStandardMaterial:Kc,MeshToonMaterial:th,MinEquation:103,MirroredRepeatWrapping:Y,MixOperation:L,MultiplyBlending:4,MultiplyOperation:U,NearestFilter:Z,NearestMipMapLinearFilter:1005,NearestMipMapNearestFilter:1004,NearestMipmapLinearFilter:K,NearestMipmapNearestFilter:J,NeverCompare:512,NeverDepth:0,NeverStencilFunc:512,NoBlending:0,NoColorSpace:ne,NoToneMapping:D,NormalAnimationBlendMode:Kt,NormalBlending:1,NotEqualCompare:517,NotEqualDepth:7,NotEqualStencilFunc:517,NumberKeyframeTrack:yh,Object3D:ri,ObjectLoader:class extends Rh{constructor(t){super(t)}load(t,e,n,i){const r=this,s=""===this.path?iu.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||s;const a=new Lh(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(n){let s=null;try{s=JSON.parse(n)}catch(o){return void(void 0!==i&&i(o))}const a=s.metadata;void 0!==a&&void 0!==a.type&&"geometry"!==a.type.toLowerCase()?r.parse(s,e):void 0!==i&&i(new Error("THREE.ObjectLoader: Can't load "+t))}),n,i)}async loadAsync(t,e){const n=""===this.path?iu.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||n;const i=new Lh(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials);const r=await i.loadAsync(t,e),s=JSON.parse(r),a=s.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+t);return await this.parseAsync(s)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,i),s=this.parseImages(t.images,(function(){void 0!==e&&e(l)})),a=this.parseTextures(t.textures,s),o=this.parseMaterials(t.materials,a),l=this.parseObject(t.object,r,o,a,n),c=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,c),void 0!==e){let t=!1;for(const e in s)if(s[e].data instanceof HTMLImageElement){t=!0;break}!1===t&&e(l)}return l}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),r=await this.parseImagesAsync(t.images),s=this.parseTextures(t.textures,r),a=this.parseMaterials(t.materials,s),o=this.parseObject(t.object,i,a,s,e),l=this.parseSkeletons(t.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(t){const e={};if(void 0!==t)for(let n=0,i=t.length;n<i;n++){const i=(new ac).fromJSON(t[n]);e[i.uuid]=i}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse((function(t){t.isBone&&(i[t.uuid]=t)})),void 0!==t)for(let r=0,s=t.length;r<s;r++){const e=(new Jo).fromJSON(t[r],i);n[e.uuid]=e}return n}parseGeometries(t,e){const n={};if(void 0!==t){const i=new su;for(let r=0,s=t.length;r<s;r++){let s;const a=t[r];switch(a.type){case"BufferGeometry":case"InstancedBufferGeometry":s=i.parse(a);break;default:a.type in Yc&&(s=Yc[a.type].fromJSON(a,e))}s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),void 0!==a.userData&&(s.userData=a.userData),n[a.uuid]=s}}return n}parseMaterials(t,e){const n={},i={};if(void 0!==t){const r=new nu;r.setTextures(e);for(let e=0,s=t.length;e<s;e++){const s=t[e];void 0===n[s.uuid]&&(n[s.uuid]=r.parse(s)),i[s.uuid]=n[s.uuid]}}return i}parseAnimations(t){const e={};if(void 0!==t)for(let n=0;n<t.length;n++){const i=t[n],r=wh.parse(i);e[r.uuid]=r}return e}parseImages(t,e){const n=this,i={};let r;function s(t){if("string"==typeof t){const e=t;return function(t){return n.manager.itemStart(t),r.load(t,(function(){n.manager.itemEnd(t)}),void 0,(function(){n.manager.itemError(t),n.manager.itemEnd(t)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:n.resourcePath+e)}return t.data?{data:Ie(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){const n=new Ah(e);r=new Ih(n),r.setCrossOrigin(this.crossOrigin);for(let e=0,r=t.length;e<r;e++){const n=t[e],r=n.url;if(Array.isArray(r)){const t=[];for(let e=0,n=r.length;e<n;e++){const n=s(r[e]);null!==n&&(n instanceof HTMLImageElement?t.push(n):t.push(new qo(n.data,n.width,n.height)))}i[n.uuid]=new qe(t)}else{const t=s(n.url);i[n.uuid]=new qe(t)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function r(t){if("string"==typeof t){const n=t,r=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:e.resourcePath+n;return await i.loadAsync(r)}return t.data?{data:Ie(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){i=new Ih(this.manager),i.setCrossOrigin(this.crossOrigin);for(let e=0,i=t.length;e<i;e++){const i=t[e],s=i.url;if(Array.isArray(s)){const t=[];for(let e=0,n=s.length;e<n;e++){const n=s[e],i=await r(n);null!==i&&(i instanceof HTMLImageElement?t.push(i):t.push(new qo(i.data,i.width,i.height)))}n[i.uuid]=new qe(t)}else{const t=await r(i.url);n[i.uuid]=new qe(t)}}}return n}parseTextures(t,e){function n(t,e){return"number"==typeof t?t:e[t]}const i={};if(void 0!==t)for(let r=0,s=t.length;r<s;r++){const s=t[r];s.image,e[s.image];const a=e[s.image],o=a.data;let l;Array.isArray(o)?(l=new xr,6===o.length&&(l.needsUpdate=!0)):(l=o&&o.data?new qo:new Je,o&&(l.needsUpdate=!0)),l.source=a,l.uuid=s.uuid,void 0!==s.name&&(l.name=s.name),void 0!==s.mapping&&(l.mapping=n(s.mapping,au)),void 0!==s.channel&&(l.channel=s.channel),void 0!==s.offset&&l.offset.fromArray(s.offset),void 0!==s.repeat&&l.repeat.fromArray(s.repeat),void 0!==s.center&&l.center.fromArray(s.center),void 0!==s.rotation&&(l.rotation=s.rotation),void 0!==s.wrap&&(l.wrapS=n(s.wrap[0],ou),l.wrapT=n(s.wrap[1],ou)),void 0!==s.format&&(l.format=s.format),void 0!==s.internalFormat&&(l.internalFormat=s.internalFormat),void 0!==s.type&&(l.type=s.type),void 0!==s.colorSpace&&(l.colorSpace=s.colorSpace),void 0!==s.encoding&&(l.encoding=s.encoding),void 0!==s.minFilter&&(l.minFilter=n(s.minFilter,lu)),void 0!==s.magFilter&&(l.magFilter=n(s.magFilter,lu)),void 0!==s.anisotropy&&(l.anisotropy=s.anisotropy),void 0!==s.flipY&&(l.flipY=s.flipY),void 0!==s.generateMipmaps&&(l.generateMipmaps=s.generateMipmaps),void 0!==s.premultiplyAlpha&&(l.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(l.unpackAlignment=s.unpackAlignment),void 0!==s.compareFunction&&(l.compareFunction=s.compareFunction),void 0!==s.userData&&(l.userData=s.userData),i[s.uuid]=l}return i}parseObject(t,e,n,i,r){let s,a,o;function l(t){return e[t],e[t]}function c(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let i=0,r=t.length;i<r;i++){const r=t[i];n[r],e.push(n[r])}return e}return n[t],n[t]}}function h(t){return i[t],i[t]}switch(t.type){case"Scene":s=new po,void 0!==t.background&&(Number.isInteger(t.background)?s.background=new bi(t.background):s.background=h(t.background)),void 0!==t.environment&&(s.environment=h(t.environment)),void 0!==t.fog&&("Fog"===t.fog.type?s.fog=new uo(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(s.fog=new ho(t.fog.color,t.fog.density))),void 0!==t.backgroundBlurriness&&(s.backgroundBlurriness=t.backgroundBlurriness),void 0!==t.backgroundIntensity&&(s.backgroundIntensity=t.backgroundIntensity);break;case"PerspectiveCamera":s=new vr(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(s.focus=t.focus),void 0!==t.zoom&&(s.zoom=t.zoom),void 0!==t.filmGauge&&(s.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(s.filmOffset=t.filmOffset),void 0!==t.view&&(s.view=Object.assign({},t.view));break;case"OrthographicCamera":s=new Vr(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(s.zoom=t.zoom),void 0!==t.view&&(s.view=Object.assign({},t.view));break;case"AmbientLight":s=new $h(t.color,t.intensity);break;case"DirectionalLight":s=new Kh(t.color,t.intensity);break;case"PointLight":s=new Zh(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":s=new Qh(t.color,t.intensity,t.width,t.height);break;case"SpotLight":s=new Wh(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":s=new Bh(t.color,t.groundColor,t.intensity);break;case"LightProbe":s=(new eu).fromJSON(t);break;case"SkinnedMesh":a=l(t.geometry),o=c(t.material),s=new jo(a,o),void 0!==t.bindMode&&(s.bindMode=t.bindMode),void 0!==t.bindMatrix&&s.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(s.skeleton=t.skeleton);break;case"Mesh":a=l(t.geometry),o=c(t.material),s=new lr(a,o);break;case"InstancedMesh":a=l(t.geometry),o=c(t.material);const e=t.count,n=t.instanceMatrix,i=t.instanceColor;s=new sl(a,o,e),s.instanceMatrix=new Ko(new Float32Array(n.array),16),void 0!==i&&(s.instanceColor=new Ko(new Float32Array(i.array),i.itemSize));break;case"LOD":s=new Oo;break;case"Line":s=new dl(l(t.geometry),c(t.material));break;case"LineLoop":s=new gl(l(t.geometry),c(t.material));break;case"LineSegments":s=new ml(l(t.geometry),c(t.material));break;case"PointCloud":case"Points":s=new Sl(l(t.geometry),c(t.material));break;case"Sprite":s=new Uo(c(t.material));break;case"Group":s=new to;break;case"Bone":s=new Xo;break;default:s=new ri}if(s.uuid=t.uuid,void 0!==t.name&&(s.name=t.name),void 0!==t.matrix?(s.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(s.matrixAutoUpdate=t.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(void 0!==t.position&&s.position.fromArray(t.position),void 0!==t.rotation&&s.rotation.fromArray(t.rotation),void 0!==t.quaternion&&s.quaternion.fromArray(t.quaternion),void 0!==t.scale&&s.scale.fromArray(t.scale)),void 0!==t.up&&s.up.fromArray(t.up),void 0!==t.castShadow&&(s.castShadow=t.castShadow),void 0!==t.receiveShadow&&(s.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(s.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(s.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(s.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&s.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(s.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(s.visible=t.visible),void 0!==t.frustumCulled&&(s.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(s.renderOrder=t.renderOrder),void 0!==t.userData&&(s.userData=t.userData),void 0!==t.layers&&(s.layers.mask=t.layers),void 0!==t.children){const a=t.children;for(let t=0;t<a.length;t++)s.add(this.parseObject(a[t],e,n,i,r))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const n=e[t];s.animations.push(r[n])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(s.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const n=e[t],i=s.getObjectByProperty("uuid",n.object);void 0!==i&&s.addLevel(i,n.distance,n.hysteresis)}}return s}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse((function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const n=e[t.skeleton];void 0===n||t.bind(n,t.bindMatrix)}}))}},ObjectSpaceNormalMap:1,OctahedronBufferGeometry:class extends Bc{constructor(t,e){super(t,e)}},OctahedronGeometry:Bc,OneFactor:201,OneMinusDstAlphaFactor:207,OneMinusDstColorFactor:209,OneMinusSrcAlphaFactor:205,OneMinusSrcColorFactor:203,OrthographicCamera:Vr,PCFShadowMap:T,PCFSoftShadowMap:E,PMREMGenerator:Kr,Path:ql,PerspectiveCamera:vr,Plane:Tr,PlaneBufferGeometry:class extends Ur{constructor(t,e,n,i){super(t,e,n,i)}},PlaneGeometry:Ur,PlaneHelper:class extends dl{constructor(t,e=1,n=16776960){const i=n,r=new Wi;r.setAttribute("position",new Ni([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),r.computeBoundingSphere(),super(r,new al({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const s=new Wi;s.setAttribute("position",new Ni([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),s.computeBoundingSphere(),this.add(new lr(s,new Ti({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}},PointLight:Zh,PointLightHelper:$u,Points:Sl,PointsMaterial:vl,PolarGridHelper:class extends ml{constructor(t=10,e=16,n=8,i=64,r=4473924,s=8947848){r=new bi(r),s=new bi(s);const a=[],o=[];if(e>1)for(let c=0;c<e;c++){const n=c/e*(2*Math.PI),i=Math.sin(n)*t,l=Math.cos(n)*t;a.push(0,0,0),a.push(i,0,l);const h=1&c?r:s;o.push(h.r,h.g,h.b),o.push(h.r,h.g,h.b)}for(let c=0;c<n;c++){const e=1&c?r:s,l=t-t/n*c;for(let t=0;t<i;t++){let n=t/i*(2*Math.PI),r=Math.sin(n)*l,s=Math.cos(n)*l;a.push(r,0,s),o.push(e.r,e.g,e.b),n=(t+1)/i*(2*Math.PI),r=Math.sin(n)*l,s=Math.cos(n)*l,a.push(r,0,s),o.push(e.r,e.g,e.b)}}const l=new Wi;l.setAttribute("position",new Ni(a,3)),l.setAttribute("color",new Ni(o,3));super(l,new al({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}},PolyhedronBufferGeometry:class extends Ql{constructor(t,e,n,i){super(t,e,n,i)}},PolyhedronGeometry:Ql,PositionalAudio:class extends xu{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(Mu,Su,bu),wu.set(0,0,1).applyQuaternion(Su);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Mu.x,t),e.positionY.linearRampToValueAtTime(Mu.y,t),e.positionZ.linearRampToValueAtTime(Mu.z,t),e.orientationX.linearRampToValueAtTime(wu.x,t),e.orientationY.linearRampToValueAtTime(wu.y,t),e.orientationZ.linearRampToValueAtTime(wu.z,t)}else e.setPosition(Mu.x,Mu.y,Mu.z),e.setOrientation(wu.x,wu.y,wu.z)}},PropertyBinding:Lu,PropertyMixer:Tu,QuadraticBezierCurve:Vl,QuadraticBezierCurve3:Hl,Quaternion:en,QuaternionKeyframeTrack:Mh,QuaternionLinearInterpolant:xh,RED_GREEN_RGTC2_Format:Ht,RED_RGTC1_Format:36283,REVISION:w,RGBADepthPacking:ee,RGBAFormat:ht,RGBAIntegerFormat:gt,RGBA_ASTC_10x10_Format:Bt,RGBA_ASTC_10x5_Format:Ot,RGBA_ASTC_10x6_Format:Nt,RGBA_ASTC_10x8_Format:Ft,RGBA_ASTC_12x10_Format:zt,RGBA_ASTC_12x12_Format:kt,RGBA_ASTC_4x4_Format:At,RGBA_ASTC_5x4_Format:Ct,RGBA_ASTC_5x5_Format:Rt,RGBA_ASTC_6x5_Format:Pt,RGBA_ASTC_6x6_Format:Ut,RGBA_ASTC_8x5_Format:Lt,RGBA_ASTC_8x6_Format:It,RGBA_ASTC_8x8_Format:Dt,RGBA_BPTC_Format:Gt,RGBA_ETC2_EAC_Format:Et,RGBA_PVRTC_2BPPV1_Format:wt,RGBA_PVRTC_4BPPV1_Format:bt,RGBA_S3TC_DXT1_Format:_t,RGBA_S3TC_DXT3_Format:yt,RGBA_S3TC_DXT5_Format:xt,RGB_ETC1_Format:36196,RGB_ETC2_Format:Tt,RGB_PVRTC_2BPPV1_Format:St,RGB_PVRTC_4BPPV1_Format:Mt,RGB_S3TC_DXT1_Format:vt,RGFormat:1030,RGIntegerFormat:mt,RawShaderMaterial:Jc,Ray:Ln,Raycaster:Fu,RectAreaLight:Qh,RedFormat:pt,RedIntegerFormat:ft,ReinhardToneMapping:N,RepeatWrapping:X,ReplaceStencilOp:oe,ReverseSubtractEquation:102,RingBufferGeometry:class extends zc{constructor(t,e,n,i,r,s){super(t,e,n,i,r,s)}},RingGeometry:zc,SIGNED_RED_GREEN_RGTC2_Format:Wt,SIGNED_RED_RGTC1_Format:Vt,SRGBColorSpace:ie,Scene:po,ShaderChunk:Lr,ShaderLib:Dr,ShaderMaterial:mr,ShadowMaterial:Zc,Shape:ac,ShapeBufferGeometry:class extends kc{constructor(t,e){super(t,e)}},ShapeGeometry:kc,ShapePath:gd,ShapeUtils:Lc,ShortType:1011,Skeleton:Jo,SkeletonHelper:class extends ml{constructor(t){const e=Ku(t),n=new Wi,i=[],r=[],s=new bi(0,0,1),a=new bi(0,1,0);for(let o=0;o<e.length;o++){const t=e[o];t.parent&&t.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(s.r,s.g,s.b),r.push(a.r,a.g,a.b))}n.setAttribute("position",new Ni(i,3)),n.setAttribute("color",new Ni(r,3));super(n,new al({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Ju.copy(this.root.matrixWorld).invert();for(let r=0,s=0;r<e.length;r++){const t=e[r];t.parent&&t.parent.isBone&&(Zu.multiplyMatrices(Ju,t.matrixWorld),Yu.setFromMatrixPosition(Zu),i.setXYZ(s,Yu.x,Yu.y,Yu.z),Zu.multiplyMatrices(Ju,t.parent.matrixWorld),Yu.setFromMatrixPosition(Zu),i.setXYZ(s+1,Yu.x,Yu.y,Yu.z),s+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose()}},SkinnedMesh:jo,Source:qe,Sphere:wn,SphereBufferGeometry:class extends Gc{constructor(t,e,n,i,r,s,a){super(t,e,n,i,r,s,a)}},SphereGeometry:Gc,Spherical:ku,SphericalHarmonics3:tu,SplineCurve:Wl,SpotLight:Wh,SpotLightHelper:qu,Sprite:Uo,SpriteMaterial:vo,SrcAlphaFactor:204,SrcAlphaSaturateFactor:210,SrcColorFactor:202,StaticCopyUsage:35046,StaticDrawUsage:le,StaticReadUsage:35045,StereoCamera:class{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new vr,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new vr,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,pu.copy(t.projectionMatrix);const n=e.eyeSep/2,i=n*e.near/e.focus,r=e.near*Math.tan(ge*e.fov*.5)/e.zoom;let s,a;du.elements[12]=-n,uu.elements[12]=n,s=-r*e.aspect+i,a=r*e.aspect+i,pu.elements[0]=2*e.near/(a-s),pu.elements[8]=(a+s)/(a-s),this.cameraL.projectionMatrix.copy(pu),s=-r*e.aspect-i,a=r*e.aspect-i,pu.elements[0]=2*e.near/(a-s),pu.elements[8]=(a+s)/(a-s),this.cameraR.projectionMatrix.copy(pu)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(du),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(uu)}},StreamCopyUsage:35042,StreamDrawUsage:35040,StreamReadUsage:35041,StringKeyframeTrack:Sh,SubtractEquation:101,SubtractiveBlending:3,TOUCH:{ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},TangentSpaceNormalMap:0,TetrahedronBufferGeometry:class extends Vc{constructor(t,e){super(t,e)}},TetrahedronGeometry:Vc,Texture:Je,TextureLoader:Nh,TorusBufferGeometry:class extends Hc{constructor(t,e,n,i,r){super(t,e,n,i,r)}},TorusGeometry:Hc,TorusKnotBufferGeometry:class extends Wc{constructor(t,e,n,i,r,s){super(t,e,n,i,r,s)}},TorusKnotGeometry:Wc,Triangle:gi,TriangleFanDrawMode:2,TriangleStripDrawMode:1,TrianglesDrawMode:0,TubeBufferGeometry:class extends jc{constructor(t,e,n,i,r){super(t,e,n,i,r)}},TubeGeometry:jc,TwoPassDoubleSide:2,UVMapping:k,Uint16BufferAttribute:Di,Uint32BufferAttribute:Oi,Uint8BufferAttribute:class extends Ii{constructor(t,e,n){super(new Uint8Array(t),e,n)}},Uint8ClampedBufferAttribute:class extends Ii{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}},Uniform:Ou,UniformsGroup:class extends pe{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:Nu++}),this.name="",this.usage=le,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return-1!==e&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let n=0,i=e.length;n<i;n++)this.uniforms.push(e[n].clone());return this}clone(){return(new this.constructor).copy(this)}},UniformsLib:Ir,UniformsUtils:fr,UnsignedByteType:et,UnsignedInt248Type:ct,UnsignedIntType:rt,UnsignedShort4444Type:ot,UnsignedShort5551Type:lt,UnsignedShortType:nt,VSMShadowMap:A,Vector2:Ce,Vector3:nn,Vector4:Ke,VectorKeyframeTrack:bh,VideoTexture:wl,WebGL1Renderer:co,WebGL3DRenderTarget:class extends $e{constructor(t=1,e=1,n=1){super(t,e),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new tn(null,t,e,n),this.texture.isRenderTargetTexture=!0}},WebGLArrayRenderTarget:class extends $e{constructor(t=1,e=1,n=1){super(t,e),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Qe(null,t,e,n),this.texture.isRenderTargetTexture=!0}},WebGLCoordinateSystem:ue,WebGLCubeRenderTarget:Mr,WebGLMultipleRenderTargets:class extends $e{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLMultipleRenderTargets=!0;const r=this.texture;this.texture=[];for(let s=0;s<n;s++)this.texture[s]=r.clone(),this.texture[s].isRenderTargetTexture=!0}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=t,this.texture[i].image.height=e,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e),this}copy(t){this.dispose(),this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.texture.length=0;for(let e=0,n=t.texture.length;e<n;e++)this.texture[e]=t.texture[e].clone(),this.texture[e].isRenderTargetTexture=!0;return this}},WebGLRenderTarget:$e,WebGLRenderer:lo,WebGLUtils:$a,WebGPUCoordinateSystem:de,WireframeGeometry:Xc,WrapAroundEnding:Jt,ZeroCurvatureEnding:Yt,ZeroFactor:200,ZeroSlopeEnding:Zt,ZeroStencilOp:0,_SRGBAFormat:he,sRGBEncoding:te},Symbol.toStringTag,{value:"Module"})),_d={},yd=t=>{Object.assign(_d,t)};var xd,Md;const Sd=t=>"colorSpace"in t||"outputColorSpace"in t,bd=()=>{var t;return null!=(t=_d.ColorManagement)?t:null},wd=t=>t&&t.isOrthographicCamera,Td="undefined"!=typeof window&&(null!=(xd=window.document)&&xd.createElement||"ReactNative"===(null==(Md=window.navigator)?void 0:Md.product))?t.useLayoutEffect:t.useEffect;function Ed(e){const n=t.useRef(e);return Td((()=>{n.current=e}),[e]),n}function Ad({set:t}){return Td((()=>(t(new Promise((()=>null))),()=>t(!1))),[t]),null}class Cd extends t.Component{constructor(...t){super(...t),this.state={error:!1}}componentDidCatch(t){this.props.set(t)}render(){return this.state.error?null:this.props.children}}Cd.getDerivedStateFromError=()=>({error:!0});const Rd="__default",Pd=new Map,Ud=t=>t&&!!t.memoized&&!!t.changes;function Ld(t){var e;const n="undefined"!=typeof window?null!=(e=window.devicePixelRatio)?e:2:1;return Array.isArray(t)?Math.min(Math.max(t[0],n),t[1]):t}const Id=t=>{var e;return null==(e=t.__r3f)?void 0:e.root.getState()},Dd={obj:t=>t===Object(t)&&!Dd.arr(t)&&"function"!=typeof t,fun:t=>"function"==typeof t,str:t=>"string"==typeof t,num:t=>"number"==typeof t,boo:t=>"boolean"==typeof t,und:t=>void 0===t,arr:t=>Array.isArray(t),equ(t,e,{arrays:n="shallow",objects:i="reference",strict:r=!0}={}){if(typeof t!=typeof e||!!t!=!!e)return!1;if(Dd.str(t)||Dd.num(t))return t===e;const s=Dd.obj(t);if(s&&"reference"===i)return t===e;const a=Dd.arr(t);if(a&&"reference"===n)return t===e;if((a||s)&&t===e)return!0;let o;for(o in t)if(!(o in e))return!1;if(s&&"shallow"===n&&"shallow"===i){for(o in r?e:t)if(!Dd.equ(t[o],e[o],{strict:r,objects:"reference"}))return!1}else for(o in r?e:t)if(t[o]!==e[o])return!1;if(Dd.und(o)){if(a&&0===t.length&&0===e.length)return!0;if(s&&0===Object.keys(t).length&&0===Object.keys(e).length)return!0;if(t!==e)return!1}return!0}};function Od(t){const e={nodes:{},materials:{}};return t&&t.traverse((t=>{t.name&&(e.nodes[t.name]=t),t.material&&!e.materials[t.material.name]&&(e.materials[t.material.name]=t.material)})),e}function Nd(t,e){const n=t;return(null!=e&&e.primitive||!n.__r3f)&&(n.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e}),t}function Fd(t,e){let n=t;if(e.includes("-")){const i=e.split("-"),r=i.pop();return n=i.reduce(((t,e)=>t[e]),t),{target:n,key:r}}return{target:n,key:e}}const Bd=/-\d+$/;function zd(t,e,n){if(Dd.str(n)){if(Bd.test(n)){const e=n.replace(Bd,""),{target:i,key:r}=Fd(t,e);Array.isArray(i[r])||(i[r]=[])}const{target:i,key:r}=Fd(t,n);e.__r3f.previousAttach=i[r],i[r]=e}else e.__r3f.previousAttach=n(t,e)}function kd(t,e,n){var i,r;if(Dd.str(n)){const{target:i,key:r}=Fd(t,n),s=e.__r3f.previousAttach;void 0===s?delete i[r]:i[r]=s}else null==(i=e.__r3f)||null==i.previousAttach||i.previousAttach(t,e);null==(r=e.__r3f)||delete r.previousAttach}function Gd(t,{children:e,key:n,ref:i,...r},{children:s,key:a,ref:o,...l}={},c=!1){var h;const u=null!=(h=null==t?void 0:t.__r3f)?h:{},d=Object.entries(r),p=[];if(c){const t=Object.keys(l);for(let e=0;e<t.length;e++)r.hasOwnProperty(t[e])||d.unshift([t[e],Rd+"remove"])}d.forEach((([e,n])=>{var i;if(null!=(i=t.__r3f)&&i.primitive&&"object"===e)return;if(Dd.equ(n,l[e]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(e))return p.push([e,n,!0,[]]);let s=[];e.includes("-")&&(s=e.split("-")),p.push([e,n,!1,s]);for(const t in r){const n=r[t];t.startsWith(`${e}-`)&&p.push([t,n,!1,t.split("-")])}}));const f={...r};return u.memoizedProps&&u.memoizedProps.args&&(f.args=u.memoizedProps.args),u.memoizedProps&&u.memoizedProps.attach&&(f.attach=u.memoizedProps.attach),{memoized:f,changes:p}}function Vd(t,e){var n,i,r;const s=null!=(n=t.__r3f)?n:{},a=s.root,o=null!=(i=null==a||null==a.getState?void 0:a.getState())?i:{},{memoized:l,changes:c}=Ud(e)?e:Gd(t,e),h=s.eventCount;t.__r3f&&(t.__r3f.memoizedProps=l);for(let u=0;u<c.length;u++){let[e,n,i,r]=c[u];if(Sd(t)){const t=3001,i="srgb",r="srgb-linear";"encoding"===e?(e="colorSpace",n=n===t?i:r):"outputEncoding"===e&&(e="outputColorSpace",n=n===t?i:r)}let a=t,l=a[e];if(r.length&&(l=r.reduce(((t,e)=>t[e]),t),!l||!l.set)){const[n,...i]=r.reverse();a=i.reverse().reduce(((t,e)=>t[e]),t),e=n}if(n===Rd+"remove")if(a.constructor){let t=Pd.get(a.constructor);t||(t=new a.constructor,Pd.set(a.constructor,t)),n=t[e]}else n=0;if(i)n?s.handlers[e]=n:delete s.handlers[e],s.eventCount=Object.keys(s.handlers).length;else if(l&&l.set&&(l.copy||l instanceof Wn)){if(Array.isArray(n))l.fromArray?l.fromArray(n):l.set(...n);else if(l.copy&&n&&n.constructor&&l.constructor===n.constructor)l.copy(n);else if(void 0!==n){const t=l instanceof bi;!t&&l.setScalar?l.setScalar(n):l instanceof Wn&&n instanceof Wn?l.mask=n.mask:l.set(n),bd()||o.linear||!t||l.convertSRGBToLinear()}}else if(a[e]=n,a[e]instanceof Je&&a[e].format===ht&&a[e].type===et){const t=a[e];Sd(t)&&Sd(o.gl)?t.colorSpace=o.gl.outputColorSpace:t.encoding=o.gl.outputEncoding}Hd(t)}if(s.parent&&o.internal&&t.raycast&&h!==s.eventCount){const e=o.internal.interaction.indexOf(t);e>-1&&o.internal.interaction.splice(e,1),s.eventCount&&o.internal.interaction.push(t)}return!(1===c.length&&"onUpdate"===c[0][0])&&c.length&&null!=(r=t.__r3f)&&r.parent&&Wd(t),t}function Hd(t){var e,n;const i=null==(e=t.__r3f)||null==(n=e.root)||null==n.getState?void 0:n.getState();i&&0===i.internal.frames&&i.invalidate()}function Wd(t){null==t.onUpdate||t.onUpdate(t)}function jd(t,e){t.manual||(wd(t)?(t.left=e.width/-2,t.right=e.width/2,t.top=e.height/2,t.bottom=e.height/-2):t.aspect=e.width/e.height,t.updateProjectionMatrix(),t.updateMatrixWorld())}function Xd(t){return(t.eventObject||t.object).uuid+"/"+t.index+t.instanceId}function qd(t,e,n,i){const r=n.get(e);r&&(n.delete(e),0===n.size&&(t.delete(i),r.target.releasePointerCapture(i)))}function Yd(t){function e(t){return t.filter((t=>["Move","Over","Enter","Out","Leave"].some((e=>{var n;return null==(n=t.__r3f)?void 0:n.handlers["onPointer"+e]}))))}function n(e){const{internal:n}=t.getState();for(const t of n.hovered.values())if(!e.length||!e.find((e=>e.object===t.object&&e.index===t.index&&e.instanceId===t.instanceId))){const i=t.eventObject.__r3f,r=null==i?void 0:i.handlers;if(n.hovered.delete(Xd(t)),null!=i&&i.eventCount){const n={...t,intersections:e};null==r.onPointerOut||r.onPointerOut(n),null==r.onPointerLeave||r.onPointerLeave(n)}}}function i(t,e){for(let n=0;n<e.length;n++){const i=e[n].__r3f;null==i||null==i.handlers.onPointerMissed||i.handlers.onPointerMissed(t)}}return{handlePointer:function(r){switch(r){case"onPointerLeave":case"onPointerCancel":return()=>n([]);case"onLostPointerCapture":return e=>{const{internal:i}=t.getState();"pointerId"in e&&i.capturedMap.has(e.pointerId)&&requestAnimationFrame((()=>{i.capturedMap.has(e.pointerId)&&(i.capturedMap.delete(e.pointerId),n([]))}))}}return function(s){const{onPointerMissed:a,internal:o}=t.getState();o.lastEvent.current=s;const l="onPointerMove"===r,c="onClick"===r||"onContextMenu"===r||"onDoubleClick"===r,h=function(e,n){const i=t.getState(),r=new Set,s=[],a=n?n(i.internal.interaction):i.internal.interaction;for(let t=0;t<a.length;t++){const e=Id(a[t]);e&&(e.raycaster.camera=void 0)}i.previousRoot||null==i.events.compute||i.events.compute(e,i);let o=a.flatMap((function(t){const n=Id(t);return n&&n.events.enabled&&null!==n.raycaster.camera?(void 0===n.raycaster.camera&&(null==n.events.compute||n.events.compute(e,n,null==(i=n.previousRoot)?void 0:i.getState()),void 0===n.raycaster.camera&&(n.raycaster.camera=null)),n.raycaster.camera?n.raycaster.intersectObject(t,!0):[]):[];var i})).sort(((t,e)=>{const n=Id(t.object),i=Id(e.object);return n&&i&&i.events.priority-n.events.priority||t.distance-e.distance})).filter((t=>{const e=Xd(t);return!r.has(e)&&(r.add(e),!0)}));i.events.filter&&(o=i.events.filter(o,i));for(const t of o){let e=t.object;for(;e;){var l;null!=(l=e.__r3f)&&l.eventCount&&s.push({...t,eventObject:e}),e=e.parent}}if("pointerId"in e&&i.internal.capturedMap.has(e.pointerId))for(let t of i.internal.capturedMap.get(e.pointerId).values())r.has(Xd(t.intersection))||s.push(t.intersection);return s}(s,l?e:void 0),u=c?function(e){const{internal:n}=t.getState(),i=e.offsetX-n.initialClick[0],r=e.offsetY-n.initialClick[1];return Math.round(Math.sqrt(i*i+r*r))}(s):0;"onPointerDown"===r&&(o.initialClick=[s.offsetX,s.offsetY],o.initialHits=h.map((t=>t.eventObject))),c&&!h.length&&u<=2&&(i(s,o.interaction),a&&a(s)),l&&n(h),function(e,i,r,s){const a=t.getState();if(e.length){const t={stopped:!1};for(const o of e){const l=Id(o.object)||a,{raycaster:c,pointer:h,camera:u,internal:d}=l,p=new nn(h.x,h.y,0).unproject(u),f=t=>{var e,n;return null!=(e=null==(n=d.capturedMap.get(t))?void 0:n.has(o.eventObject))&&e},m=t=>{const e={intersection:o,target:i.target};d.capturedMap.has(t)?d.capturedMap.get(t).set(o.eventObject,e):d.capturedMap.set(t,new Map([[o.eventObject,e]])),i.target.setPointerCapture(t)},g=t=>{const e=d.capturedMap.get(t);e&&qd(d.capturedMap,o.eventObject,e,t)};let v={};for(let t in i){let e=i[t];"function"!=typeof e&&(v[t]=e)}let _={...o,...v,pointer:h,intersections:e,stopped:t.stopped,delta:r,unprojectedPoint:p,ray:c.ray,camera:u,stopPropagation(){const r="pointerId"in i&&d.capturedMap.get(i.pointerId);(!r||r.has(o.eventObject))&&(_.stopped=t.stopped=!0,d.hovered.size&&Array.from(d.hovered.values()).find((t=>t.eventObject===o.eventObject)))&&n([...e.slice(0,e.indexOf(o)),o])},target:{hasPointerCapture:f,setPointerCapture:m,releasePointerCapture:g},currentTarget:{hasPointerCapture:f,setPointerCapture:m,releasePointerCapture:g},nativeEvent:i};if(s(_),!0===t.stopped)break}}}(h,s,u,(function(t){const e=t.eventObject,n=e.__r3f,a=null==n?void 0:n.handlers;if(null!=n&&n.eventCount)if(l){if(a.onPointerOver||a.onPointerEnter||a.onPointerOut||a.onPointerLeave){const e=Xd(t),n=o.hovered.get(e);n?n.stopped&&t.stopPropagation():(o.hovered.set(e,t),null==a.onPointerOver||a.onPointerOver(t),null==a.onPointerEnter||a.onPointerEnter(t))}null==a.onPointerMove||a.onPointerMove(t)}else{const n=a[r];n?c&&!o.initialHits.includes(e)||(i(s,o.interaction.filter((t=>!o.initialHits.includes(t)))),n(t)):c&&o.initialHits.includes(e)&&i(s,o.interaction.filter((t=>!o.initialHits.includes(t))))}}))}}}}const Zd=["set","get","setSize","setFrameloop","setDpr","events","invalidate","advance","size","viewport"],Jd=t=>!(null==t||!t.render),Kd=t.createContext(null);let $d,Qd=new Set,tp=new Set,ep=new Set;function np(t,e){if(t.size)for(const{callback:n}of t.values())n(e)}function ip(t,e){switch(t){case"before":return np(Qd,e);case"after":return np(tp,e);case"tail":return np(ep,e)}}let rp,sp;function ap(t,e,n){let i=e.clock.getDelta();for("never"===e.frameloop&&"number"==typeof t&&(i=t-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=t),rp=e.internal.subscribers,$d=0;$d<rp.length;$d++)sp=rp[$d],sp.ref.current(sp.store.getState(),i,n);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),"always"===e.frameloop?1:e.internal.frames}function op(){const e=t.useContext(Kd);if(!e)throw new Error("R3F: Hooks can only be used within the Canvas component!");return e}function lp(t=(t=>t),e){return op()(t,e)}function cp(t,e=0){const n=op(),i=n.getState().internal.subscribe,r=Ed(t);return Td((()=>i(r,e,n)),[e,i,n]),null}function hp(e){return t.useMemo((()=>Od(e)),[e])}function up(t,e){return function(n,...i){const r=new n;return t&&t(r),Promise.all(i.map((t=>new Promise(((n,i)=>r.load(t,(t=>{t.scene&&Object.assign(t,Od(t.scene)),n(t)}),e,(e=>i(new Error(`Could not load ${t}: ${e.message})`)))))))))}}function dp(t,e,n,r){const s=Array.isArray(e)?e:[e],a=i(up(n,r),[t,...s],{equal:Dd.equ});return Array.isArray(e)?a:a[0]}dp.preload=function(t,e,n){const i=Array.isArray(e)?e:[e];return r(up(n),[t,...i])},dp.clear=function(t,e){const n=Array.isArray(e)?e:[e];return s([t,...n])};const pp=new Map,{invalidate:fp,advance:mp}=function(t){let e,n,i,r=!1;function s(a){n=requestAnimationFrame(s),r=!0,e=0,ip("before",a);for(const n of t.values()){var o;i=n.store.getState(),!i.internal.active||!("always"===i.frameloop||i.internal.frames>0)||null!=(o=i.gl.xr)&&o.isPresenting||(e+=ap(a,i))}if(ip("after",a),0===e)return ip("tail",a),r=!1,cancelAnimationFrame(n)}return{loop:s,invalidate:function e(n,i=1){var a;if(!n)return t.forEach((t=>e(t.store.getState())),i);null!=(a=n.gl.xr)&&a.isPresenting||!n.internal.active||"never"===n.frameloop||(n.internal.frames=Math.min(60,n.internal.frames+i),r||(r=!0,requestAnimationFrame(s)))},advance:function(e,n=!0,i,r){if(n&&ip("before",e),i)ap(e,i,r);else for(const s of t.values())ap(e,s.store.getState());n&&ip("after",e)}}}(pp),{reconciler:gp,applyProps:vp}=function(t,i){function r(t,{args:e=[],attach:n,...i},r){let s,a=`${t[0].toUpperCase()}${t.slice(1)}`;if("primitive"===t){if(void 0===i.object)throw new Error("R3F: Primitives without 'object' are invalid!");s=Nd(i.object,{type:t,root:r,attach:n,primitive:!0})}else{const i=_d[a];if(!i)throw new Error(`R3F: ${a} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(e))throw new Error("R3F: The args prop must be an array!");s=Nd(new i(...e),{type:t,root:r,attach:n,memoizedProps:{args:e}})}return void 0===s.__r3f.attach&&(s instanceof Wi?s.__r3f.attach="geometry":s instanceof _i&&(s.__r3f.attach="material")),"inject"!==a&&Vd(s,i),s}function s(t,e){let n=!1;var i,r;e&&(null!=(i=e.__r3f)&&i.attach?zd(t,e,e.__r3f.attach):e.isObject3D&&t.isObject3D&&(t.add(e),n=!0),n||null==(r=t.__r3f)||r.objects.push(e),e.__r3f||Nd(e,{}),e.__r3f.parent=t,Wd(e),Hd(e))}function o(t,e,n){let i=!1;if(e){var r,s;if(null!=(r=e.__r3f)&&r.attach)zd(t,e,e.__r3f.attach);else if(e.isObject3D&&t.isObject3D){e.parent=t,e.dispatchEvent({type:"added"});const r=t.children.filter((t=>t!==e)),s=r.indexOf(n);t.children=[...r.slice(0,s),e,...r.slice(s)],i=!0}i||null==(s=t.__r3f)||s.objects.push(e),e.__r3f||Nd(e,{}),e.__r3f.parent=t,Wd(e),Hd(e)}}function l(t,e,n=!1){t&&[...t].forEach((t=>c(e,t,n)))}function c(t,e,n){if(e){var i,r,s;if(e.__r3f&&(e.__r3f.parent=null),null!=(i=t.__r3f)&&i.objects&&(t.__r3f.objects=t.__r3f.objects.filter((t=>t!==e))),null!=(r=e.__r3f)&&r.attach)kd(t,e,e.__r3f.attach);else if(e.isObject3D&&t.isObject3D){var o;t.remove(e),null!=(o=e.__r3f)&&o.root&&function(t,e){const{internal:n}=t.getState();n.interaction=n.interaction.filter((t=>t!==e)),n.initialHits=n.initialHits.filter((t=>t!==e)),n.hovered.forEach(((t,i)=>{t.eventObject!==e&&t.object!==e||n.hovered.delete(i)})),n.capturedMap.forEach(((t,i)=>{qd(n.capturedMap,e,t,i)}))}(e.__r3f.root,e)}const h=null==(s=e.__r3f)?void 0:s.primitive,u=void 0===n?null!==e.dispose&&!h:n;var c;if(!h)l(null==(c=e.__r3f)?void 0:c.objects,e,u),l(e.children,e,u);delete e.__r3f,u&&e.dispose&&"Scene"!==e.type&&a.unstable_scheduleCallback(a.unstable_IdlePriority,(()=>{try{e.dispose()}catch(t){}})),Hd(t)}}const h=()=>{};return{reconciler:e({createInstance:r,removeChild:c,appendChild:s,appendInitialChild:s,insertBefore:o,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(t,e)=>{if(!e)return;const n=t.getState().scene;n.__r3f&&(n.__r3f.root=t,s(n,e))},removeChildFromContainer:(t,e)=>{e&&c(t.getState().scene,e)},insertInContainerBefore:(t,e,n)=>{if(!e||!n)return;const i=t.getState().scene;i.__r3f&&o(i,e,n)},getRootHostContext:()=>null,getChildHostContext:t=>t,finalizeInitialChildren(t){var e;const n=null!=(e=null==t?void 0:t.__r3f)?e:{};return Boolean(n.handlers)},prepareUpdate(t,e,n,i){if(t.__r3f.primitive&&i.object&&i.object!==t)return[!0];{const{args:e=[],children:r,...s}=i,{args:a=[],children:o,...l}=n;if(!Array.isArray(e))throw new Error("R3F: the args prop must be an array!");if(e.some(((t,e)=>t!==a[e])))return[!0];const c=Gd(t,s,l,!0);return c.changes.length?[!1,c]:null}},commitUpdate(t,[e,n],i,a,o,l){e?function(t,e,n,i){var a;const o=null==(a=t.__r3f)?void 0:a.parent;if(!o)return;const l=r(e,n,t.__r3f.root);if(t.children){for(const e of t.children)e.__r3f&&s(l,e);t.children=t.children.filter((t=>!t.__r3f))}t.__r3f.objects.forEach((t=>s(l,t))),t.__r3f.objects=[],t.__r3f.autoRemovedBeforeAppend||c(o,t),l.parent&&(l.__r3f.autoRemovedBeforeAppend=!0),s(o,l),l.raycast&&l.__r3f.eventCount&&l.__r3f.root.getState().internal.interaction.push(l);[i,i.alternate].forEach((t=>{null!==t&&(t.stateNode=l,t.ref&&("function"==typeof t.ref?t.ref(l):t.ref.current=l))}))}(t,i,o,l):Vd(t,n)},commitMount(t,e,n,i){var r;const s=null!=(r=t.__r3f)?r:{};t.raycast&&s.handlers&&s.eventCount&&t.__r3f.root.getState().internal.interaction.push(t)},getPublicInstance:t=>t,prepareForCommit:()=>null,preparePortalMount:t=>Nd(t.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(t){var e;const{attach:n,parent:i}=null!=(e=t.__r3f)?e:{};n&&i&&kd(i,t,n),t.isObject3D&&(t.visible=!1),Hd(t)},unhideInstance(t,e){var n;const{attach:i,parent:r}=null!=(n=t.__r3f)?n:{};i&&r&&zd(r,t,i),(t.isObject3D&&null==e.visible||e.visible)&&(t.visible=!0),Hd(t)},createTextInstance:h,hideTextInstance:h,unhideTextInstance:h,getCurrentEventPriority:()=>i?i():n.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:"undefined"!=typeof performance&&Dd.fun(performance.now)?performance.now:Dd.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Dd.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Dd.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Vd}}(0,(function(){var t;const e="undefined"!=typeof self&&self||"undefined"!=typeof window&&window;if(!e)return n.DefaultEventPriority;switch(null==(t=e.event)?void 0:t.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return n.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return n.ContinuousEventPriority;default:return n.DefaultEventPriority}})),_p={objects:"shallow",strict:!1},yp=(t,e)=>{const n="function"==typeof t?t(e):t;return Jd(n)?n:new lo({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...t})};function xp(e){const i=pp.get(e),r=null==i?void 0:i.fiber,s=null==i?void 0:i.store,a="function"==typeof reportError?reportError:console.error,l=s||((e,n)=>{const i=o(((i,r)=>{const s=new nn,a=new nn,o=new nn;function l(t=r().camera,e=a,n=r().size){const{width:i,height:l,top:c,left:h}=n,u=i/l;e instanceof nn?o.copy(e):o.set(...e);const d=t.getWorldPosition(s).distanceTo(o);if(wd(t))return{width:i/t.zoom,height:l/t.zoom,top:c,left:h,factor:1,distance:d,aspect:u};{const e=t.fov*Math.PI/180,n=2*Math.tan(e/2)*d,r=n*(i/l);return{width:r,height:n,top:c,left:h,factor:i/r,distance:d,aspect:u}}}let c;const h=t=>i((e=>({performance:{...e.performance,current:t}}))),u=new Ce;return{set:i,get:r,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(t=1)=>e(r(),t),advance:(t,e)=>n(t,e,r()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new fu,pointer:u,mouse:u,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const t=r();c&&clearTimeout(c),t.performance.current!==t.performance.min&&h(t.performance.min),c=setTimeout((()=>h(r().performance.max)),t.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:l},setEvents:t=>i((e=>({...e,events:{...e.events,...t}}))),setSize:(t,e,n,s,o)=>{const c=r().camera,h={width:t,height:e,top:s||0,left:o||0,updateStyle:n};i((t=>({size:h,viewport:{...t.viewport,...l(c,a,h)}})))},setDpr:t=>i((e=>{const n=Ld(t);return{viewport:{...e.viewport,dpr:n,initialDpr:e.viewport.initialDpr||n}}})),setFrameloop:(t="always")=>{const e=r().clock;e.stop(),e.elapsedTime=0,"never"!==t&&(e.start(),e.elapsedTime=0),i((()=>({frameloop:t})))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:t.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(t,e,n)=>{const i=r().internal;return i.priority=i.priority+(e>0?1:0),i.subscribers.push({ref:t,priority:e,store:n}),i.subscribers=i.subscribers.sort(((t,e)=>t.priority-e.priority)),()=>{const n=r().internal;null!=n&&n.subscribers&&(n.priority=n.priority-(e>0?1:0),n.subscribers=n.subscribers.filter((e=>e.ref!==t)))}}}}})),r=i.getState();let s=r.size,a=r.viewport.dpr,l=r.camera;return i.subscribe((()=>{const{camera:t,size:e,viewport:n,gl:r,set:o}=i.getState();if(e!==s||n.dpr!==a){var c;s=e,a=n.dpr,jd(t,e),r.setPixelRatio(n.dpr);const i=null!=(c=e.updateStyle)?c:"undefined"!=typeof HTMLCanvasElement&&r.domElement instanceof HTMLCanvasElement;r.setSize(e.width,e.height,i)}t!==l&&(l=t,o((e=>({viewport:{...e.viewport,...e.viewport.getCurrentViewport(t)}}))))})),i.subscribe((t=>e(t))),i})(fp,mp),c=r||gp.createContainer(l,n.ConcurrentRoot,null,!1,null,"",a,null);let h;i||pp.set(e,{fiber:c,store:l});let u,d=!1;return{configure(t={}){let{gl:n,size:i,scene:r,events:s,onCreated:a,shadows:o=!1,linear:c=!1,flat:p=!1,legacy:f=!1,orthographic:m=!1,frameloop:g="always",dpr:v=[1,2],performance:_,raycaster:y,camera:x,onPointerMissed:M}=t,S=l.getState(),b=S.gl;S.gl||S.set({gl:b=yp(n,e)});let w=S.raycaster;w||S.set({raycaster:w=new Fu});const{params:C,...R}=y||{};if(Dd.equ(R,w,_p)||vp(w,{...R}),Dd.equ(C,w.params,_p)||vp(w,{params:{...w.params,...C}}),!S.camera||S.camera===u&&!Dd.equ(u,x,_p)){u=x;const t=x instanceof gr,e=t?x:m?new Vr(0,0,0,0,.1,1e3):new vr(75,0,.1,1e3);t||(e.position.z=5,x&&vp(e,x),S.camera||null!=x&&x.rotation||e.lookAt(0,0,0)),S.set({camera:e})}if(!S.scene){let t;r instanceof po?t=r:(t=new po,r&&vp(t,r)),S.set({scene:Nd(t)})}if(!S.xr){const t=(t,e)=>{const n=l.getState();"never"!==n.frameloop&&mp(t,!0,n,e)},e=()=>{const e=l.getState();e.gl.xr.enabled=e.gl.xr.isPresenting,e.gl.xr.setAnimationLoop(e.gl.xr.isPresenting?t:null),e.gl.xr.isPresenting||fp(e)},n={connect(){const t=l.getState().gl;t.xr.addEventListener("sessionstart",e),t.xr.addEventListener("sessionend",e)},disconnect(){const t=l.getState().gl;t.xr.removeEventListener("sessionstart",e),t.xr.removeEventListener("sessionend",e)}};b.xr&&n.connect(),S.set({xr:n})}if(b.shadowMap){const t=b.shadowMap.enabled,e=b.shadowMap.type;if(b.shadowMap.enabled=!!o,Dd.boo(o))b.shadowMap.type=E;else if(Dd.str(o)){var P;const t={basic:0,percentage:T,soft:E,variance:A};b.shadowMap.type=null!=(P=t[o])?P:E}else Dd.obj(o)&&Object.assign(b.shadowMap,o);t===b.shadowMap.enabled&&e===b.shadowMap.type||(b.shadowMap.needsUpdate=!0)}const U=bd();U&&("enabled"in U?U.enabled=!f:"legacyMode"in U&&(U.legacyMode=f));vp(b,{outputEncoding:c?3e3:3001,toneMapping:p?D:B}),S.legacy!==f&&S.set((()=>({legacy:f}))),S.linear!==c&&S.set((()=>({linear:c}))),S.flat!==p&&S.set((()=>({flat:p}))),!n||Dd.fun(n)||Jd(n)||Dd.equ(n,b,_p)||vp(b,n),s&&!S.events.handlers&&S.set({events:s(l)});const L=function(t,e){if(e)return e;if("undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement&&t.parentElement){const{width:e,height:n,top:i,left:r}=t.parentElement.getBoundingClientRect();return{width:e,height:n,top:i,left:r}}return"undefined"!=typeof OffscreenCanvas&&t instanceof OffscreenCanvas?{width:t.width,height:t.height,top:0,left:0}:{width:0,height:0,top:0,left:0}}(e,i);return Dd.equ(L,S.size,_p)||S.setSize(L.width,L.height,L.updateStyle,L.top,L.left),v&&S.viewport.dpr!==Ld(v)&&S.setDpr(v),S.frameloop!==g&&S.setFrameloop(g),S.onPointerMissed||S.set({onPointerMissed:M}),_&&!Dd.equ(_,S.performance,_p)&&S.set((t=>({performance:{...t.performance,..._}}))),h=a,d=!0,this},render(n){return d||this.configure(),gp.updateContainer(t.createElement(Mp,{store:l,children:n,onCreated:h,rootElement:e}),c,null,(()=>{})),l},unmount(){Sp(e)}}}function Mp({store:e,children:n,onCreated:i,rootElement:r}){return Td((()=>{const t=e.getState();t.set((t=>({internal:{...t.internal,active:!0}}))),i&&i(t),e.getState().events.connected||null==t.events.connect||t.events.connect(r)}),[]),t.createElement(Kd.Provider,{value:e},n)}function Sp(t,e){const n=pp.get(t),i=null==n?void 0:n.fiber;if(i){const r=null==n?void 0:n.store.getState();r&&(r.internal.active=!1),gp.updateContainer(null,i,null,(()=>{r&&setTimeout((()=>{try{var n,i,s,a;null==r.events.disconnect||r.events.disconnect(),null==(n=r.gl)||null==(i=n.renderLists)||null==i.dispose||i.dispose(),null==(s=r.gl)||null==s.forceContextLoss||s.forceContextLoss(),null!=(a=r.gl)&&a.xr&&r.xr.disconnect(),function(t){t.dispose&&"Scene"!==t.type&&t.dispose();for(const e in t)null==e.dispose||e.dispose(),delete t[e]}(r),pp.delete(t),e&&e(t)}catch(o){}}),500)}))}}function bp(e,n,i){return t.createElement(wp,{key:n.uuid,children:e,container:n,state:i})}function wp({state:e={},children:n,container:i}){const{events:r,size:s,...a}=e,l=op(),[c]=t.useState((()=>new Fu)),[h]=t.useState((()=>new Ce)),u=t.useCallback(((t,e)=>{const n={...t};let o;if(Object.keys(t).forEach((i=>{(Zd.includes(i)||t[i]!==e[i]&&e[i])&&delete n[i]})),e&&s){const n=e.camera;o=t.viewport.getCurrentViewport(n,new nn,s),n!==t.camera&&jd(n,s)}return{...n,scene:i,raycaster:c,pointer:h,mouse:h,previousRoot:l,events:{...t.events,...null==e?void 0:e.events,...r},size:{...t.size,...s},viewport:{...t.viewport,...o},...a}}),[e]),[d]=t.useState((()=>{const t=l.getState();return o(((e,n)=>({...t,scene:i,raycaster:c,pointer:h,mouse:h,previousRoot:l,events:{...t.events,...r},size:{...t.size,...s},...a,set:e,get:n,setEvents:t=>e((e=>({...e,events:{...e.events,...t}})))})))}));return t.useEffect((()=>{const t=l.subscribe((t=>d.setState((e=>u(t,e)))));return()=>{t(),d.destroy()}}),[]),t.useEffect((()=>{d.setState((t=>u(l.getState(),t)))}),[u]),t.createElement(t.Fragment,null,gp.createPortal(t.createElement(Kd.Provider,{value:d},n),d,null))}gp.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:t.version});const Tp={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function Ep(t){const{handlePointer:e}=Yd(t);return{priority:1,enabled:!0,compute(t,e,n){e.pointer.set(t.offsetX/e.size.width*2-1,-t.offsetY/e.size.height*2+1),e.raycaster.setFromCamera(e.pointer,e.camera)},connected:void 0,handlers:Object.keys(Tp).reduce(((t,n)=>({...t,[n]:e(n)})),{}),update:()=>{var e;const{events:n,internal:i}=t.getState();null!=(e=i.lastEvent)&&e.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:e=>{var n;const{set:i,events:r}=t.getState();null==r.disconnect||r.disconnect(),i((t=>({events:{...t.events,connected:e}}))),Object.entries(null!=(n=r.handlers)?n:[]).forEach((([t,n])=>{const[i,r]=Tp[t];e.addEventListener(i,n,{passive:r})}))},disconnect:()=>{const{set:e,events:n}=t.getState();var i;n.connected&&(Object.entries(null!=(i=n.handlers)?i:[]).forEach((([t,e])=>{if(n&&n.connected instanceof HTMLElement){const[i]=Tp[t];n.connected.removeEventListener(i,e)}})),e((t=>({events:{...t.events,connected:void 0}}))))}}}const Ap=t.forwardRef((function({children:e,fallback:n,resize:i,style:r,gl:s,events:a=Ep,eventSource:o,eventPrefix:l,shadows:d,linear:p,flat:f,legacy:m,orthographic:g,frameloop:v,dpr:_,performance:y,raycaster:x,camera:M,onPointerMissed:S,onCreated:b,...w},T){t.useMemo((()=>yd(vd)),[]);const E=h(),[A,C]=u({scroll:!0,debounce:{scroll:50,resize:0},...i}),R=t.useRef(null),P=t.useRef(null);t.useImperativeHandle(T,(()=>R.current));const U=Ed(S),[L,I]=t.useState(!1),[D,O]=t.useState(!1);if(L)throw L;if(D)throw D;const N=t.useRef(null);Td((()=>{const n=R.current;C.width>0&&C.height>0&&n&&(N.current||(N.current=xp(n)),N.current.configure({gl:s,events:a,shadows:d,linear:p,flat:f,legacy:m,orthographic:g,frameloop:v,dpr:_,performance:y,raycaster:x,camera:M,size:C,onPointerMissed:(...t)=>null==U.current?void 0:U.current(...t),onCreated:t=>{var e;null==t.events.connect||t.events.connect(o?(e=o)&&e.hasOwnProperty("current")?o.current:o:P.current),l&&t.setEvents({compute:(t,e)=>{const n=t[l+"X"],i=t[l+"Y"];e.pointer.set(n/e.size.width*2-1,-i/e.size.height*2+1),e.raycaster.setFromCamera(e.pointer,e.camera)}}),null==b||b(t)}}),N.current.render(t.createElement(E,null,t.createElement(Cd,{set:O},t.createElement(t.Suspense,{fallback:t.createElement(Ad,{set:I})},e)))))})),t.useEffect((()=>{const t=R.current;if(t)return()=>Sp(t)}),[]);const F=o?"none":"auto";return t.createElement("div",c({ref:P,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:F,...r}},w),t.createElement("div",{ref:A,style:{width:"100%",height:"100%"}},t.createElement("canvas",{ref:R,style:{display:"block"}},n)))})),Cp=t.forwardRef((function(e,n){return t.createElement(l,null,t.createElement(Ap,c({},e,{ref:n})))}));function Rp(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Pp(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=t[n];return i}function Up(t){return function(t){if(Array.isArray(t))return Pp(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return Pp(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Pp(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Lp(t,e){return n=t-Math.floor(t/e)*e,i=0,r=e,Math.max(i,Math.min(r,n));var n,i,r}function Ip(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}new Ce,new Ce;var Dp=function t(e,n,i){var r=this;Ip(this,t),Rp(this,"dot2",(function(t,e){return r.x*t+r.y*e})),Rp(this,"dot3",(function(t,e,n){return r.x*t+r.y*e+r.z*n})),this.x=e,this.y=n,this.z=i},Op=[new Dp(1,1,0),new Dp(-1,1,0),new Dp(1,-1,0),new Dp(-1,-1,0),new Dp(1,0,1),new Dp(-1,0,1),new Dp(1,0,-1),new Dp(-1,0,-1),new Dp(0,1,1),new Dp(0,-1,1),new Dp(0,1,-1),new Dp(0,-1,-1)],Np=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],Fp=new Array(512),Bp=new Array(512);function zp(t){var e=function(t){if("number"==typeof t)t=Math.abs(t);else if("string"==typeof t){var e=t;t=0;for(var n=0;n<e.length;n++)t=(t+(n+1)*(e.charCodeAt(n)%96))%2147483647}return 0===t&&(t=311),t}(t);return function(){var t=48271*e%2147483647;return e=t,t/2147483647}}!function(t){t>0&&t<1&&(t*=65536),(t=Math.floor(t))<256&&(t|=t<<8);for(var e=0;e<256;e++){var n;n=1&e?Np[e]^255&t:Np[e]^t>>8&255,Fp[e]=Fp[e+256]=n,Bp[e]=Bp[e+256]=Op[n%12]}}(0);new function t(e){var n=this;Ip(this,t),Rp(this,"seed",0),Rp(this,"init",(function(t){n.seed=t,n.value=zp(t)})),Rp(this,"value",zp(this.seed)),this.init(e)}(Math.random());var kp,Gp,Vp,Hp,Wp=function(t){return 1/(1+t+.48*t*t+.235*t*t*t)};function jp(t,e,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.25,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.01,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1/0,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:Wp,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:.001,l="velocity_"+e;if(void 0===t.__damp&&(t.__damp={}),void 0===t.__damp[l]&&(t.__damp[l]=0),Math.abs(t[e]-n)<=o)return t[e]=n,!1;var c=2/(i=Math.max(1e-4,i)),h=a(c*r),u=t[e]-n,d=n,p=s*i;u=Math.min(Math.max(u,-p),p),n=t[e]-u;var f=(t.__damp[l]+c*u)*r;t.__damp[l]=(t.__damp[l]-c*f)*h;var m=n+(u+f)*h;return d-t[e]>0==m>d&&(m=d,t.__damp[l]=(m-d)/r),t[e]=m,!0}function Xp(t,e,n,i,r,s,a,o){return jp(t,e,t[e]+function(t,e){var n=Lp(e-t,2*Math.PI);return n>Math.PI&&(n-=2*Math.PI),n}(t[e],n),i,r,s,a,o)}var qp=new Ce;var Yp=new nn;function Zp(t,e,n,i,r,s,a){return"number"==typeof e?Yp.setScalar(e):Array.isArray(e)?Yp.set(e[0],e[1],e[2]):Yp.copy(e),kp=jp(t,"x",Yp.x,n,i,r,s,a),Gp=jp(t,"y",Yp.y,n,i,r,s,a),Vp=jp(t,"z",Yp.z,n,i,r,s,a),kp||Gp||Vp}var Jp=new Ke;var Kp=new Hn;var $p=new bi;var Qp=new en,tf=new Ke,ef=new Ke,nf=new Ke;function rf(t,e,n,i,r,s,a){var o=t;Array.isArray(e)?Qp.set(e[0],e[1],e[2],e[3]):Qp.copy(e);var l=t.dot(Qp)>0?1:-1;return Qp.x*=l,Qp.y*=l,Qp.z*=l,Qp.w*=l,kp=jp(t,"x",Qp.x,n,i,r,s,a),Gp=jp(t,"y",Qp.y,n,i,r,s,a),Vp=jp(t,"z",Qp.z,n,i,r,s,a),Hp=jp(t,"w",Qp.w,n,i,r,s,a),tf.set(t.x,t.y,t.z,t.w).normalize(),ef.set(o.__damp.velocity_x,o.__damp.velocity_y,o.__damp.velocity_z,o.__damp.velocity_w),nf.copy(tf).multiplyScalar(ef.dot(tf)/tf.dot(tf)),o.__damp.velocity_x-=nf.x,o.__damp.velocity_y-=nf.y,o.__damp.velocity_z-=nf.z,o.__damp.velocity_w-=nf.w,t.set(tf.x,tf.y,tf.z,tf.w),kp||Gp||Vp||Hp}var sf=new ku;var af=new In,of=new nn,lf=new en,cf=new nn;var hf=Object.freeze({__proto__:null,rsqw:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.01,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/(2*Math.PI);return n/Math.atan(1/e)*Math.atan(Math.sin(2*Math.PI*t*i)/e)},exp:Wp,damp:jp,dampAngle:Xp,damp2:function(t,e,n,i,r,s,a){return"number"==typeof e?qp.setScalar(e):Array.isArray(e)?qp.set(e[0],e[1]):qp.copy(e),kp=jp(t,"x",qp.x,n,i,r,s,a),Gp=jp(t,"y",qp.y,n,i,r,s,a),kp||Gp},damp3:Zp,damp4:function(t,e,n,i,r,s,a){return"number"==typeof e?Jp.setScalar(e):Array.isArray(e)?Jp.set(e[0],e[1],e[2],e[3]):Jp.copy(e),kp=jp(t,"x",Yp.x,n,i,r,s,a),Gp=jp(t,"y",Yp.y,n,i,r,s,a),Vp=jp(t,"z",Yp.z,n,i,r,s,a),kp||Gp||Vp},dampE:function(t,e,n,i,r,s,a){return Array.isArray(e)?Kp.set(e[0],e[1],e[2],e[3]):Kp.copy(e),kp=Xp(t,"x",Kp.x,n,i,r,s,a),Gp=Xp(t,"y",Kp.y,n,i,r,s,a),Vp=Xp(t,"z",Kp.z,n,i,r,s,a),kp||Gp||Vp},dampC:function(t,e,n,i,r,s,a){return e instanceof bi?$p.copy(e):Array.isArray(e)?$p.setRGB(e[0],e[1],e[2]):$p.set(e),kp=jp(t,"r",$p.r,n,i,r,s,a),Gp=jp(t,"g",$p.g,n,i,r,s,a),Vp=jp(t,"b",$p.b,n,i,r,s,a),kp||Gp||Vp},dampQ:rf,dampS:function(t,e,n,i,r,s,a){return Array.isArray(e)?sf.set(e[0],e[1],e[2]):sf.copy(e),kp=jp(t,"radius",sf.radius,n,i,r,s,a),Gp=Xp(t,"phi",sf.phi,n,i,r,s,a),Vp=Xp(t,"theta",sf.theta,n,i,r,s,a),kp||Gp||Vp},dampM:function(t,e,n,i,r,s,a){var o=t;return void 0===o.__damp&&(o.__damp={position:new nn,rotation:new en,scale:new nn},t.decompose(o.__damp.position,o.__damp.rotation,o.__damp.scale)),Array.isArray(e)?af.set.apply(af,Up(e)):af.copy(e),af.decompose(of,lf,cf),kp=Zp(o.__damp.position,of,n,i,r,s,a),Gp=rf(o.__damp.rotation,lf,n,i,r,s,a),Vp=Zp(o.__damp.scale,cf,n,i,r,s,a),t.compose(o.__damp.position,o.__damp.rotation,o.__damp.scale),kp||Gp||Vp}});function uf(t){let e,n,i,r=-1,s=0;for(let c=0;c<t.length;++c){const a=t[c];if(a.isInterleavedBufferAttribute)return null;if(void 0===e&&(e=a.array.constructor),e!==a.array.constructor)return null;if(void 0===n&&(n=a.itemSize),n!==a.itemSize)return null;if(void 0===i&&(i=a.normalized),i!==a.normalized)return null;if(-1===r&&(r=a.gpuType),r!==a.gpuType)return null;s+=a.array.length}const a=new e(s);let o=0;for(let c=0;c<t.length;++c)a.set(t[c].array,o),o+=t[c].array.length;const l=new Ii(a,n,i);return void 0!==r&&(l.gpuType=r),l}function df(t,e=!1){return function(t,e=!1){const n=null!==t[0].index,i=new Set(Object.keys(t[0].attributes)),r=new Set(Object.keys(t[0].morphAttributes)),s={},a={},o=t[0].morphTargetsRelative,l=new Wi;let c=0;for(let h=0;h<t.length;++h){const u=t[h];let d=0;if(n!==(null!==u.index))return null;for(const t in u.attributes){if(!i.has(t))return null;void 0===s[t]&&(s[t]=[]),s[t].push(u.attributes[t]),d++}if(d!==i.size)return null;if(o!==u.morphTargetsRelative)return null;for(const t in u.morphAttributes){if(!r.has(t))return null;void 0===a[t]&&(a[t]=[]),a[t].push(u.morphAttributes[t])}if(e){let t;if(n)t=u.index.count;else{if(void 0===u.attributes.position)return null;t=u.attributes.position.count}l.addGroup(c,t,h),c+=t}}if(n){let e=0;const n=[];for(let i=0;i<t.length;++i){const r=t[i].index;for(let t=0;t<r.count;++t)n.push(r.getX(t)+e);e+=t[i].attributes.position.count}l.setIndex(n)}for(const h in s){const t=uf(s[h]);if(!t)return null;l.setAttribute(h,t)}for(const h in a){const t=a[h][0].length;if(0===t)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[h]=[];for(let e=0;e<t;++e){const t=[];for(let i=0;i<a[h].length;++i)t.push(a[h][i][e]);const n=uf(t);if(!n)return null;l.morphAttributes[h].push(n)}}return l}(t,e)}const pf=new WeakMap;class ff extends Rh{constructor(t){super(t),this.decoderPath="",this.decoderConfig={},this.decoderBinary=null,this.decoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.defaultAttributeIDs={position:"POSITION",normal:"NORMAL",color:"COLOR",uv:"TEX_COORD"},this.defaultAttributeTypes={position:"Float32Array",normal:"Float32Array",color:"Float32Array",uv:"Float32Array"}}setDecoderPath(t){return this.decoderPath=t,this}setDecoderConfig(t){return this.decoderConfig=t,this}setWorkerLimit(t){return this.workerLimit=t,this}load(t,e,n,i){const r=new Lh(this.manager);r.setPath(this.path),r.setResponseType("arraybuffer"),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,(t=>{this.parse(t,e,i)}),n,i)}parse(t,e,n){this.decodeDracoFile(t,e,null,null,ie).catch(n)}decodeDracoFile(t,e,n,i,r=re){const s={attributeIDs:n||this.defaultAttributeIDs,attributeTypes:i||this.defaultAttributeTypes,useUniqueIDs:!!n,vertexColorSpace:r};return this.decodeGeometry(t,s).then(e)}decodeGeometry(t,e){const n=JSON.stringify(e);if(pf.has(t)){const e=pf.get(t);if(e.key===n)return e.promise;if(0===t.byteLength)throw new Error("THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.")}let i;const r=this.workerNextTaskID++,s=t.byteLength,a=this._getWorker(r,s).then((n=>(i=n,new Promise(((n,s)=>{i._callbacks[r]={resolve:n,reject:s},i.postMessage({type:"decode",id:r,taskConfig:e,buffer:t},[t])}))))).then((t=>this._createGeometry(t.geometry)));return a.catch((()=>!0)).then((()=>{i&&r&&this._releaseTask(i,r)})),pf.set(t,{key:n,promise:a}),a}_createGeometry(t){const e=new Wi;t.index&&e.setIndex(new Ii(t.index.array,1));for(let n=0;n<t.attributes.length;n++){const i=t.attributes[n],r=i.name,s=i.array,a=i.itemSize,o=new Ii(s,a);"color"===r&&(this._assignVertexColorSpace(o,i.vertexColorSpace),o.normalized=s instanceof Float32Array==!1),e.setAttribute(r,o)}return e}_assignVertexColorSpace(t,e){if(e!==ie)return;const n=new bi;for(let i=0,r=t.count;i<r;i++)n.fromBufferAttribute(t,i).convertSRGBToLinear(),t.setXYZ(i,n.r,n.g,n.b)}_loadLibrary(t,e){const n=new Lh(this.manager);return n.setPath(this.decoderPath),n.setResponseType(e),n.setWithCredentials(this.withCredentials),new Promise(((e,i)=>{n.load(t,e,void 0,i)}))}preload(){return this._initDecoder(),this}_initDecoder(){if(this.decoderPending)return this.decoderPending;const t="object"!=typeof WebAssembly||"js"===this.decoderConfig.type,e=[];return t?e.push(this._loadLibrary("draco_decoder.js","text")):(e.push(this._loadLibrary("draco_wasm_wrapper.js","text")),e.push(this._loadLibrary("draco_decoder.wasm","arraybuffer"))),this.decoderPending=Promise.all(e).then((e=>{const n=e[0];t||(this.decoderConfig.wasmBinary=e[1]);const i=mf.toString(),r=["/* draco decoder */",n,"","/* worker */",i.substring(i.indexOf("{")+1,i.lastIndexOf("}"))].join("\n");this.workerSourceURL=URL.createObjectURL(new Blob([r]))})),this.decoderPending}_getWorker(t,e){return this._initDecoder().then((()=>{if(this.workerPool.length<this.workerLimit){const t=new Worker(this.workerSourceURL);t._callbacks={},t._taskCosts={},t._taskLoad=0,t.postMessage({type:"init",decoderConfig:this.decoderConfig}),t.onmessage=function(e){const n=e.data;switch(n.type){case"decode":t._callbacks[n.id].resolve(n);break;case"error":t._callbacks[n.id].reject(n)}},this.workerPool.push(t)}else this.workerPool.sort((function(t,e){return t._taskLoad>e._taskLoad?-1:1}));const n=this.workerPool[this.workerPool.length-1];return n._taskCosts[t]=e,n._taskLoad+=e,n}))}_releaseTask(t,e){t._taskLoad-=t._taskCosts[e],delete t._callbacks[e],delete t._taskCosts[e]}debug(){}dispose(){for(let t=0;t<this.workerPool.length;++t)this.workerPool[t].terminate();return this.workerPool.length=0,""!==this.workerSourceURL&&URL.revokeObjectURL(this.workerSourceURL),this}}function mf(){let t,e;function n(t,e,n,i,r,s){const a=s.num_components(),o=n.num_points()*a,l=o*r.BYTES_PER_ELEMENT,c=function(t,e){switch(e){case Float32Array:return t.DT_FLOAT32;case Int8Array:return t.DT_INT8;case Int16Array:return t.DT_INT16;case Int32Array:return t.DT_INT32;case Uint8Array:return t.DT_UINT8;case Uint16Array:return t.DT_UINT16;case Uint32Array:return t.DT_UINT32}}(t,r),h=t._malloc(l);e.GetAttributeDataArrayForAllPoints(n,s,c,l,h);const u=new r(t.HEAPF32.buffer,h,o).slice();return t._free(h),{name:i,array:u,itemSize:a}}onmessage=function(i){const r=i.data;switch(r.type){case"init":t=r.decoderConfig,e=new Promise((function(e){t.onModuleLoaded=function(t){e({draco:t})},DracoDecoderModule(t)}));break;case"decode":const i=r.buffer,s=r.taskConfig;e.then((t=>{const e=t.draco,a=new e.Decoder;try{const t=function(t,e,i,r){const s=r.attributeIDs,a=r.attributeTypes;let o,l;const c=e.GetEncodedGeometryType(i);if(c===t.TRIANGULAR_MESH)o=new t.Mesh,l=e.DecodeArrayToMesh(i,i.byteLength,o);else{if(c!==t.POINT_CLOUD)throw new Error("THREE.DRACOLoader: Unexpected geometry type.");o=new t.PointCloud,l=e.DecodeArrayToPointCloud(i,i.byteLength,o)}if(!l.ok()||0===o.ptr)throw new Error("THREE.DRACOLoader: Decoding failed: "+l.error_msg());const h={index:null,attributes:[]};for(const u in s){const i=self[a[u]];let l,c;if(r.useUniqueIDs)c=s[u],l=e.GetAttributeByUniqueId(o,c);else{if(c=e.GetAttributeId(o,t[s[u]]),-1===c)continue;l=e.GetAttribute(o,c)}const d=n(t,e,o,u,i,l);"color"===u&&(d.vertexColorSpace=r.vertexColorSpace),h.attributes.push(d)}c===t.TRIANGULAR_MESH&&(h.index=function(t,e,n){const i=n.num_faces(),r=3*i,s=4*r,a=t._malloc(s);e.GetTrianglesUInt32Array(n,s,a);const o=new Uint32Array(t.HEAPF32.buffer,a,r).slice();return t._free(a),{array:o,itemSize:1}}(t,e,o));return t.destroy(o),h}(e,a,new Int8Array(i),s),o=t.attributes.map((t=>t.array.buffer));t.index&&o.push(t.index.array.buffer),self.postMessage({type:"decode",id:r.id,geometry:t},o)}catch(o){self.postMessage({type:"error",id:r.id,error:o.message})}finally{e.destroy(a)}}))}}}var gf=["primitive"].concat(Object.keys(vd).filter((t=>/^[A-Z]/.test(t))).map((t=>t[0].toLowerCase()+t.slice(1))));d.assign({createStringInterpolator:p,colors:f,frameLoop:"demand"}),function(t,e){const n={callback:t};e.add(n)}((()=>{g.advance()}),Qd);var vf=m(gf,{applyAnimatedValues:vp}).animated;const _f=new nn,yf=new nn,xf=new nn;function Mf(t,e,n){const i=_f.setFromMatrixPosition(t.matrixWorld);i.project(e);const r=n.width/2,s=n.height/2;return[i.x*r+r,-i.y*s+s]}const Sf=t=>Math.abs(t)<1e-10?0:t;function bf(t,e,n=""){let i="matrix3d(";for(let r=0;16!==r;r++)i+=Sf(e[r]*t.elements[r])+(15!==r?",":")");return n+i}const wf=(Tf=[1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1],t=>bf(t,Tf));var Tf;const Ef=(t,e)=>{return bf(t,[1/(n=e),1/n,1/n,1,-1/n,-1/n,-1/n,-1,1/n,1/n,1/n,1,1,1,1,1],"translate(-50%,-50%)");var n};const Af=t.forwardRef((({children:e,eps:n=.001,style:i,className:r,prepend:s,center:a,fullscreen:o,portal:l,distanceFactor:h,sprite:u=!1,transform:d=!1,occlude:p,onOcclude:f,castShadow:m,receiveShadow:g,material:_,geometry:y,zIndexRange:x=[16777271,0],calculatePosition:M=Mf,as:S="div",wrapperClass:b,pointerEvents:w="auto",...T},E)=>{const{gl:A,camera:C,scene:R,size:P,raycaster:U,events:L,viewport:I}=lp(),[D]=t.useState((()=>document.createElement(S))),O=t.useRef(),N=t.useRef(null),F=t.useRef(0),B=t.useRef([0,0]),z=t.useRef(null),k=t.useRef(null),G=(null==l?void 0:l.current)||L.connected||A.domElement.parentNode,V=t.useRef(null),H=t.useRef(!1),W=t.useMemo((()=>p&&"blending"!==p||Array.isArray(p)&&p.length&&function(t){return t&&"object"==typeof t&&"current"in t}(p[0])),[p]);t.useLayoutEffect((()=>{const t=A.domElement;p&&"blending"===p?(t.style.zIndex=`${Math.floor(x[0]/2)}`,t.style.position="absolute",t.style.pointerEvents="none"):(t.style.zIndex=null,t.style.position=null,t.style.pointerEvents=null)}),[p]),t.useLayoutEffect((()=>{if(N.current){const t=O.current=v(D);if(R.updateMatrixWorld(),d)D.style.cssText="position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;";else{const t=M(N.current,C,P);D.style.cssText=`position:absolute;top:0;left:0;transform:translate3d(${t[0]}px,${t[1]}px,0);transform-origin:0 0;`}return G&&(s?G.prepend(D):G.appendChild(D)),()=>{G&&G.removeChild(D),t.unmount()}}}),[G,d]),t.useLayoutEffect((()=>{b&&(D.className=b)}),[b]);const j=t.useMemo((()=>d?{position:"absolute",top:0,left:0,width:P.width,height:P.height,transformStyle:"preserve-3d",pointerEvents:"none"}:{position:"absolute",transform:a?"translate3d(-50%,-50%,0)":"none",...o&&{top:-P.height/2,left:-P.width/2,width:P.width,height:P.height},...i}),[i,a,o,P,d]),X=t.useMemo((()=>({position:"absolute",pointerEvents:w})),[w]);t.useLayoutEffect((()=>{var n,s;(H.current=!1,d)?null==(n=O.current)||n.render(t.createElement("div",{ref:z,style:j},t.createElement("div",{ref:k,style:X},t.createElement("div",{ref:E,className:r,style:i,children:e})))):null==(s=O.current)||s.render(t.createElement("div",{ref:E,style:j,className:r,children:e}))}));const q=t.useRef(!0);cp((t=>{if(N.current){C.updateMatrixWorld(),N.current.updateWorldMatrix(!0,!1);const t=d?B.current:M(N.current,C,P);if(d||Math.abs(F.current-C.zoom)>n||Math.abs(B.current[0]-t[0])>n||Math.abs(B.current[1]-t[1])>n){const e=function(t,e){const n=_f.setFromMatrixPosition(t.matrixWorld),i=yf.setFromMatrixPosition(e.matrixWorld),r=n.sub(i),s=e.getWorldDirection(xf);return r.angleTo(s)>Math.PI/2}(N.current,C);let n=!1;W&&("blending"!==p?n=[R]:Array.isArray(p)&&(n=p.map((t=>t.current))));const i=q.current;if(n){const t=function(t,e,n,i){const r=_f.setFromMatrixPosition(t.matrixWorld),s=r.clone();s.project(e),n.setFromCamera(s,e);const a=n.intersectObjects(i,!0);if(a.length){const t=a[0].distance;return r.distanceTo(n.ray.origin)<t}return!0}(N.current,C,U,n);q.current=t&&!e}else q.current=!e;i!==q.current&&(f?f(!q.current):D.style.display=q.current?"block":"none");const r=Math.floor(x[0]/2),s=p?W?[x[0],r]:[r-1,0]:x;if(D.style.zIndex=`${function(t,e,n){if(e instanceof vr||e instanceof Vr){const i=_f.setFromMatrixPosition(t.matrixWorld),r=yf.setFromMatrixPosition(e.matrixWorld),s=i.distanceTo(r),a=(n[1]-n[0])/(e.far-e.near),o=n[1]-a*e.far;return Math.round(a*s+o)}}(N.current,C,s)}`,d){const[t,e]=[P.width/2,P.height/2],n=C.projectionMatrix.elements[5]*e,{isOrthographicCamera:i,top:r,left:s,bottom:a,right:o}=C,l=wf(C.matrixWorldInverse),c=i?`scale(${n})translate(${Sf(-(o+s)/2)}px,${Sf((r+a)/2)}px)`:`translateZ(${n}px)`;let d=N.current.matrixWorld;u&&(d=C.matrixWorldInverse.clone().transpose().copyPosition(d).scale(N.current.scale),d.elements[3]=d.elements[7]=d.elements[11]=0,d.elements[15]=1),D.style.width=P.width+"px",D.style.height=P.height+"px",D.style.perspective=i?"":`${n}px`,z.current&&k.current&&(z.current.style.transform=`${c}${l}translate(${t}px,${e}px)`,k.current.style.transform=Ef(d,1/((h||10)/400)))}else{const e=void 0===h?1:function(t,e){if(e instanceof Vr)return e.zoom;if(e instanceof vr){const n=_f.setFromMatrixPosition(t.matrixWorld),i=yf.setFromMatrixPosition(e.matrixWorld),r=e.fov*Math.PI/180,s=n.distanceTo(i);return 1/(2*Math.tan(r/2)*s)}return 1}(N.current,C)*h;D.style.transform=`translate3d(${t[0]}px,${t[1]}px,0) scale(${e})`}B.current=t,F.current=C.zoom}}if(!W&&V.current&&!H.current)if(d){if(z.current){const t=z.current.children[0];if(null!=t&&t.clientWidth&&null!=t&&t.clientHeight){const{isOrthographicCamera:e}=C;if(e||y)T.scale&&(Array.isArray(T.scale)?T.scale instanceof nn?V.current.scale.copy(T.scale.clone().divideScalar(1)):V.current.scale.set(1/T.scale[0],1/T.scale[1],1/T.scale[2]):V.current.scale.setScalar(1/T.scale));else{const e=(h||10)/400,n=t.clientWidth*e,i=t.clientHeight*e;V.current.scale.set(n,i,1)}H.current=!0}}}else{const e=D.children[0];if(null!=e&&e.clientWidth&&null!=e&&e.clientHeight){const t=1/I.factor,n=e.clientWidth*t,i=e.clientHeight*t;V.current.scale.set(n,i,1),H.current=!0}V.current.lookAt(t.camera.position)}}));const Y=t.useMemo((()=>({vertexShader:d?void 0:'\n          /*\n            This shader is from the THREE\'s SpriteMaterial.\n            We need to turn the backing plane into a Sprite\n            (make it always face the camera) if "transfrom" \n            is false. \n          */\n          #include <common>\n\n          void main() {\n            vec2 center = vec2(0., 1.);\n            float rotation = 0.0;\n            \n            // This is somewhat arbitrary, but it seems to work well\n            // Need to figure out how to derive this dynamically if it even matters\n            float size = 0.03;\n\n            vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n            vec2 scale;\n            scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n            scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n            bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n            if ( isPerspective ) scale *= - mvPosition.z;\n\n            vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;\n            vec2 rotatedPosition;\n            rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n            rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n            mvPosition.xy += rotatedPosition;\n\n            gl_Position = projectionMatrix * mvPosition;\n          }\n      ',fragmentShader:"\n        void main() {\n          gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n        }\n      "})),[d]);return t.createElement("group",c({},T,{ref:N}),p&&!W&&t.createElement("mesh",{castShadow:m,receiveShadow:g,ref:V},y||t.createElement("planeGeometry",null),_||t.createElement("shaderMaterial",{side:2,vertexShader:Y.vertexShader,fragmentShader:Y.fragmentShader})))}));function Cf(e,n="pointer",i="auto"){t.useEffect((()=>{if(e)return document.body.style.cursor=n,()=>{document.body.style.cursor=i}}),[e])}function Rf(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Pf(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=t[n];return i}function Uf(t){return function(t){if(Array.isArray(t))return Pf(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return Pf(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Pf(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Lf(t,e){return n=t-Math.floor(t/e)*e,i=0,r=e,Math.max(i,Math.min(r,n));var n,i,r}function If(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}new Ce,new Ce;var Df=function t(e,n,i){var r=this;If(this,t),Rf(this,"dot2",(function(t,e){return r.x*t+r.y*e})),Rf(this,"dot3",(function(t,e,n){return r.x*t+r.y*e+r.z*n})),this.x=e,this.y=n,this.z=i},Of=[new Df(1,1,0),new Df(-1,1,0),new Df(1,-1,0),new Df(-1,-1,0),new Df(1,0,1),new Df(-1,0,1),new Df(1,0,-1),new Df(-1,0,-1),new Df(0,1,1),new Df(0,-1,1),new Df(0,1,-1),new Df(0,-1,-1)],Nf=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],Ff=new Array(512),Bf=new Array(512);function zf(t){var e=function(t){if("number"==typeof t)t=Math.abs(t);else if("string"==typeof t){var e=t;t=0;for(var n=0;n<e.length;n++)t=(t+(n+1)*(e.charCodeAt(n)%96))%2147483647}return 0===t&&(t=311),t}(t);return function(){var t=48271*e%2147483647;return e=t,t/2147483647}}!function(t){t>0&&t<1&&(t*=65536),(t=Math.floor(t))<256&&(t|=t<<8);for(var e=0;e<256;e++){var n;n=1&e?Nf[e]^255&t:Nf[e]^t>>8&255,Ff[e]=Ff[e+256]=n,Bf[e]=Bf[e+256]=Of[n%12]}}(0);new function t(e){var n=this;If(this,t),Rf(this,"seed",0),Rf(this,"init",(function(t){n.seed=t,n.value=zf(t)})),Rf(this,"value",zf(this.seed)),this.init(e)}(Math.random());var kf=function(t){return 1/(1+t+.48*t*t+.235*t*t*t)};function Gf(t,e,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.25,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.01,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1/0,a=arguments.length>6&&void 0!==arguments[6]?arguments[6]:kf,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:.001,l="velocity_"+e;if(void 0===t.__damp&&(t.__damp={}),void 0===t.__damp[l]&&(t.__damp[l]=0),Math.abs(t[e]-n)<=o)return t[e]=n,!1;var c=2/(i=Math.max(1e-4,i)),h=a(c*r),u=t[e]-n,d=n,p=s*i;u=Math.min(Math.max(u,-p),p),n=t[e]-u;var f=(t.__damp[l]+c*u)*r;t.__damp[l]=(t.__damp[l]-c*f)*h;var m=n+(u+f)*h;return d-t[e]>0==m>d&&(m=d,t.__damp[l]=(m-d)/r),t[e]=m,!0}function Vf(t,e,n,i,r,s,a,o){return Gf(t,e,t[e]+function(t,e){var n=Lf(e-t,2*Math.PI);return n>Math.PI&&(n-=2*Math.PI),n}(t[e],n),i,r,s,a,o)}var Hf,Wf,jf=new Ce;var Xf,qf,Yf,Zf=new nn;function Jf(t,e,n,i,r,s,a){return"number"==typeof e?Zf.setScalar(e):Array.isArray(e)?Zf.set(e[0],e[1],e[2]):Zf.copy(e),Xf=Gf(t,"x",Zf.x,n,i,r,s,a),qf=Gf(t,"y",Zf.y,n,i,r,s,a),Yf=Gf(t,"z",Zf.z,n,i,r,s,a),Xf||qf||Yf}var Kf,$f,Qf,tm,em=new Ke;var nm,im,rm,sm=new Hn;var am,om,lm,cm=new bi;var hm,um,dm,pm,fm=new en,mm=new Ke,gm=new Ke,vm=new Ke;function _m(t,e,n,i,r,s,a){var o=t;Array.isArray(e)?fm.set(e[0],e[1],e[2],e[3]):fm.copy(e);var l=t.dot(fm)>0?1:-1;return fm.x*=l,fm.y*=l,fm.z*=l,fm.w*=l,hm=Gf(t,"x",fm.x,n,i,r,s,a),um=Gf(t,"y",fm.y,n,i,r,s,a),dm=Gf(t,"z",fm.z,n,i,r,s,a),pm=Gf(t,"w",fm.w,n,i,r,s,a),mm.set(t.x,t.y,t.z,t.w).normalize(),gm.set(o.__damp.velocity_x,o.__damp.velocity_y,o.__damp.velocity_z,o.__damp.velocity_w),vm.copy(mm).multiplyScalar(gm.dot(mm)/mm.dot(mm)),o.__damp.velocity_x-=vm.x,o.__damp.velocity_y-=vm.y,o.__damp.velocity_z-=vm.z,o.__damp.velocity_w-=vm.w,t.set(mm.x,mm.y,mm.z,mm.w),hm||um||dm||pm}var ym,xm,Mm,Sm=new ku;var bm,wm,Tm,Em=new In,Am=new nn,Cm=new en,Rm=new nn;var Pm=Object.freeze({__proto__:null,rsqw:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.01,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/(2*Math.PI);return n/Math.atan(1/e)*Math.atan(Math.sin(2*Math.PI*t*i)/e)},exp:kf,damp:Gf,dampAngle:Vf,damp2:function(t,e,n,i,r,s,a){return"number"==typeof e?jf.setScalar(e):Array.isArray(e)?jf.set(e[0],e[1]):jf.copy(e),Hf=Gf(t,"x",jf.x,n,i,r,s,a),Wf=Gf(t,"y",jf.y,n,i,r,s,a),Hf||Wf},damp3:Jf,damp4:function(t,e,n,i,r,s,a){return"number"==typeof e?em.setScalar(e):Array.isArray(e)?em.set(e[0],e[1],e[2],e[3]):em.copy(e),Kf=Gf(t,"x",em.x,n,i,r,s,a),$f=Gf(t,"y",em.y,n,i,r,s,a),Qf=Gf(t,"z",em.z,n,i,r,s,a),tm=Gf(t,"w",em.w,n,i,r,s,a),Kf||$f||Qf||tm},dampE:function(t,e,n,i,r,s,a){return Array.isArray(e)?sm.set(e[0],e[1],e[2],e[3]):sm.copy(e),nm=Vf(t,"x",sm.x,n,i,r,s,a),im=Vf(t,"y",sm.y,n,i,r,s,a),rm=Vf(t,"z",sm.z,n,i,r,s,a),nm||im||rm},dampC:function(t,e,n,i,r,s,a){return e instanceof bi?cm.copy(e):Array.isArray(e)?cm.setRGB(e[0],e[1],e[2]):cm.set(e),am=Gf(t,"r",cm.r,n,i,r,s,a),om=Gf(t,"g",cm.g,n,i,r,s,a),lm=Gf(t,"b",cm.b,n,i,r,s,a),am||om||lm},dampQ:_m,dampS:function(t,e,n,i,r,s,a){return Array.isArray(e)?Sm.set(e[0],e[1],e[2]):Sm.copy(e),ym=Gf(t,"radius",Sm.radius,n,i,r,s,a),xm=Vf(t,"phi",Sm.phi,n,i,r,s,a),Mm=Vf(t,"theta",Sm.theta,n,i,r,s,a),ym||xm||Mm},dampM:function(t,e,n,i,r,s,a){var o=t;return void 0===o.__damp&&(o.__damp={position:new nn,rotation:new en,scale:new nn},t.decompose(o.__damp.position,o.__damp.rotation,o.__damp.scale)),Array.isArray(e)?Em.set.apply(Em,Uf(e)):Em.copy(e),Em.decompose(Am,Cm,Rm),bm=Jf(o.__damp.position,Am,n,i,r,s,a),wm=_m(o.__damp.rotation,Cm,n,i,r,s,a),Tm=Jf(o.__damp.scale,Rm,n,i,r,s,a),t.compose(o.__damp.position,o.__damp.rotation,o.__damp.scale),bm||wm||Tm}});const Um=t.createContext(null);function Lm(){return t.useContext(Um)}function Im({eps:e=1e-5,enabled:n=!0,infinite:i,horizontal:r,pages:s=1,distance:a=1,damping:o=.25,maxSpeed:l=1/0,style:c={},children:h}){const{get:u,setEvents:d,gl:p,size:f,invalidate:m,events:g}=lp(),[v]=t.useState((()=>document.createElement("div"))),[_]=t.useState((()=>document.createElement("div"))),[y]=t.useState((()=>document.createElement("div"))),x=p.domElement.parentNode,M=t.useRef(0),S=t.useMemo((()=>({el:v,eps:e,fill:_,fixed:y,horizontal:r,damping:o,offset:0,delta:0,scroll:M,pages:s,range(t,e,n=0){const i=t-n,r=i+e+2*n;return this.offset<i?0:this.offset>r?1:(this.offset-i)/(r-i)},curve(t,e,n=0){return Math.sin(this.range(t,e,n)*Math.PI)},visible(t,e,n=0){const i=t-n,r=i+e+2*n;return this.offset>=i&&this.offset<=r}})),[e,o,r,s]);t.useEffect((()=>{v.style.position="absolute",v.style.width="100%",v.style.height="100%",v.style[r?"overflowX":"overflowY"]="auto",v.style[r?"overflowY":"overflowX"]="hidden",v.style.top="0px",v.style.left="0px";for(const n in c)v.style[n]=c[n];y.style.position="sticky",y.style.top="0px",y.style.left="0px",y.style.width="100%",y.style.height="100%",y.style.overflow="hidden",v.appendChild(y),_.style.height=r?"100%":s*a*100+"%",_.style.width=r?s*a*100+"%":"100%",_.style.pointerEvents="none",v.appendChild(_),x.appendChild(v),v[r?"scrollLeft":"scrollTop"]=1;const t=g.connected||p.domElement;requestAnimationFrame((()=>null==g.connect?void 0:g.connect(v)));const e=u().events.compute;return d({compute(t,e){const{left:n,top:i}=x.getBoundingClientRect(),r=t.clientX-n,s=t.clientY-i;e.pointer.set(r/e.size.width*2-1,-s/e.size.height*2+1),e.raycaster.setFromCamera(e.pointer,e.camera)}}),()=>{x.removeChild(v),d({compute:e}),null==g.connect||g.connect(t)}}),[s,a,r,v,_,y,x]),t.useEffect((()=>{if(g.connected===v){const t=f[r?"width":"height"],e=v[r?"scrollWidth":"scrollHeight"],s=e-t;let a=0,o=!0,l=!0;const c=()=>{if(n&&!l&&(m(),a=v[r?"scrollLeft":"scrollTop"],M.current=a/s,i)){if(!o)if(a>=s){const t=1-S.offset;v[r?"scrollLeft":"scrollTop"]=1,M.current=S.offset=-t,o=!0}else if(a<=0){const t=1+S.offset;v[r?"scrollLeft":"scrollTop"]=e,M.current=S.offset=t,o=!0}o&&setTimeout((()=>o=!1),40)}};v.addEventListener("scroll",c,{passive:!0}),requestAnimationFrame((()=>l=!1));const h=t=>v.scrollLeft+=t.deltaY/2;return r&&v.addEventListener("wheel",h,{passive:!0}),()=>{v.removeEventListener("scroll",c),r&&v.removeEventListener("wheel",h)}}}),[v,g,f,i,S,m,r,n]);let b=0;return cp(((t,n)=>{b=S.offset,Pm.damp(S,"offset",M.current,o,n,l,void 0,e),Pm.damp(S,"delta",Math.abs(b-S.offset),o,n,l,void 0,e),S.delta>e&&m()})),t.createElement(Um.Provider,{value:S},h)}const Dm=t.forwardRef((({children:e},n)=>{const i=t.useRef(null),r=Lm(),{width:s,height:a}=lp((t=>t.viewport));return cp((()=>{i.current.position.x=r.horizontal?-s*(r.pages-1)*r.offset:0,i.current.position.y=r.horizontal?0:a*(r.pages-1)*r.offset})),t.createElement("group",{ref:_([n,i])},e)})),Om=t.forwardRef((({children:e,style:n,...i},r)=>{const s=Lm(),a=t.useRef(null),{width:o,height:l}=lp((t=>t.size)),h=t.useContext(Kd),u=t.useMemo((()=>v(s.fixed)),[s.fixed]);return cp((()=>{s.delta>s.eps&&(a.current.style.transform=`translate3d(${s.horizontal?-o*(s.pages-1)*s.offset:0}px,${s.horizontal?0:l*(s.pages-1)*-s.offset}px,0)`)})),u.render(t.createElement("div",c({ref:_([r,a]),style:{...n,position:"absolute",top:0,left:0,willChange:"transform"}},i),t.createElement(Um.Provider,{value:s},t.createElement(Kd.Provider,{value:h},e)))),null})),Nm=t.forwardRef((({html:e,...n},i)=>{const r=e?Om:Dm;return t.createElement(r,c({ref:i},n))}));class Fm extends lr{constructor(t,e){var n,i;const r=(s=t)&&s.isCubeTexture;var s;const a=(null!=(i=r?null==(n=t.image[0])?void 0:n.width:t.image.width)?i:1024)/4,o=Math.floor(Math.log2(a)),l=Math.pow(2,o),c=[r?"#define ENVMAP_TYPE_CUBE":"","#define CUBEUV_TEXEL_WIDTH "+1/(3*Math.max(l,112)),"#define CUBEUV_TEXEL_HEIGHT "+1/(4*l),`#define CUBEUV_MAX_MIP ${o}.0`].join("\n")+"\n        #define ENVMAP_TYPE_CUBE_UV\n        varying vec3 vWorldPosition;\n        uniform float radius;\n        uniform float height;\n        uniform float angle;\n        #ifdef ENVMAP_TYPE_CUBE\n            uniform samplerCube map;\n        #else\n            uniform sampler2D map;\n        #endif\n        // From: https://www.shadertoy.com/view/4tsBD7\n        float diskIntersectWithBackFaceCulling( vec3 ro, vec3 rd, vec3 c, vec3 n, float r ) \n        {\n            float d = dot ( rd, n );\n            \n            if( d > 0.0 ) { return 1e6; }\n            \n            vec3  o = ro - c;\n            float t = - dot( n, o ) / d;\n            vec3  q = o + rd * t;\n            \n            return ( dot( q, q ) < r * r ) ? t : 1e6;\n        }\n        // From: https://www.iquilezles.org/www/articles/intersectors/intersectors.htm\n        float sphereIntersect( vec3 ro, vec3 rd, vec3 ce, float ra ) \n        {\n            vec3 oc = ro - ce;\n            float b = dot( oc, rd );\n            float c = dot( oc, oc ) - ra * ra;\n            float h = b * b - c;\n            \n            if( h < 0.0 ) { return -1.0; }\n            \n            h = sqrt( h );\n            \n            return - b + h;\n        }\n        vec3 project() \n        {\n            vec3 p = normalize( vWorldPosition );\n            vec3 camPos = cameraPosition;\n            camPos.y -= height;\n            float intersection = sphereIntersect( camPos, p, vec3( 0.0 ), radius );\n            if( intersection > 0.0 ) {\n                \n                vec3 h = vec3( 0.0, - height, 0.0 );\n                float intersection2 = diskIntersectWithBackFaceCulling( camPos, p, h, vec3( 0.0, 1.0, 0.0 ), radius );\n                p = ( camPos + min( intersection, intersection2 ) * p ) / radius;\n            } else {\n                p = vec3( 0.0, 1.0, 0.0 );\n            }\n            return p;\n        }\n        #include <common>\n        #include <cube_uv_reflection_fragment>\n        void main() \n        {\n            vec3 projectedWorldPosition = project();\n            \n            #ifdef ENVMAP_TYPE_CUBE\n                vec3 outcolor = textureCube( map, projectedWorldPosition ).rgb;\n            #else\n                vec3 direction = normalize( projectedWorldPosition );\n                vec2 uv = equirectUv( direction );\n                vec3 outcolor = texture2D( map, uv ).rgb;\n            #endif\n            gl_FragColor = vec4( outcolor, 1.0 );\n            #include <tonemapping_fragment>\n            #include <encodings_fragment>\n        }\n        ",h={map:{value:t},height:{value:(null==e?void 0:e.height)||15},radius:{value:(null==e?void 0:e.radius)||100}};super(new Fc(1,16),new mr({uniforms:h,fragmentShader:c,vertexShader:"\n        varying vec3 vWorldPosition;\n        void main() \n        {\n            vec4 worldPosition = ( modelMatrix * vec4( position, 1.0 ) );\n            vWorldPosition = worldPosition.xyz;\n            \n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }\n        ",side:2}))}set radius(t){this.material.uniforms.radius.value=t}get radius(){return this.material.uniforms.radius.value}set height(t){this.material.uniforms.height.value=t}get height(){return this.material.uniforms.height.value}}class Bm extends Oc{constructor(t,e={}){const{bevelEnabled:n=!1,bevelSize:i=8,bevelThickness:r=10,font:s,height:a=50,size:o=100,lineHeight:l=1,letterSpacing:c=0,...h}=e;if(void 0===s)super();else{super(s.generateShapes(t,o,{lineHeight:l,letterSpacing:c}),{...h,bevelEnabled:n,bevelSize:i,bevelThickness:r,depth:a})}this.type="TextGeometry"}}var zm=Object.defineProperty,km=(t,e,n)=>(((t,e,n)=>{e in t?zm(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n})(t,"symbol"!=typeof e?e+"":e,n),n);class Gm extends Rh{constructor(t){super(t)}load(t,e,n,i){const r=new Lh(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,(t=>{if("string"!=typeof t)throw new Error("unsupported data type");const n=JSON.parse(t),i=this.parse(n);e&&e(i)}),n,i)}loadAsync(t,e){return super.loadAsync(t,e)}parse(t){return new Vm(t)}}class Vm{constructor(t){km(this,"data"),this.data=t}generateShapes(t,e=100,n){const i=[],r={letterSpacing:0,lineHeight:1,...n},s=function(t,e,n,i){const r=Array.from(t),s=e/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*s,o=[];let l=0,c=0;for(let h=0;h<r.length;h++){const t=r[h];if("\n"===t)l=0,c-=a*i.lineHeight;else{const e=Hm(t,s,l,c,n);e&&(l+=e.offsetX+i.letterSpacing,o.push(e.path))}}return o}(t,e,this.data,r);for(let a=0,o=s.length;a<o;a++)Array.prototype.push.apply(i,s[a].toShapes(!1));return i}}function Hm(t,e,n,i,r){const s=r.glyphs[t]||r.glyphs["?"];if(!s)return;const a=new gd;let o,l,c,h,u,d,p,f;if(s.o){const t=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let r=0,s=t.length;r<s;){switch(t[r++]){case"m":o=parseInt(t[r++])*e+n,l=parseInt(t[r++])*e+i,a.moveTo(o,l);break;case"l":o=parseInt(t[r++])*e+n,l=parseInt(t[r++])*e+i,a.lineTo(o,l);break;case"q":c=parseInt(t[r++])*e+n,h=parseInt(t[r++])*e+i,u=parseInt(t[r++])*e+n,d=parseInt(t[r++])*e+i,a.quadraticCurveTo(u,d,c,h);break;case"b":c=parseInt(t[r++])*e+n,h=parseInt(t[r++])*e+i,u=parseInt(t[r++])*e+n,d=parseInt(t[r++])*e+i,p=parseInt(t[r++])*e+n,f=parseInt(t[r++])*e+i,a.bezierCurveTo(u,d,p,f,c,h)}}}return{offsetX:s.ha*e,path:a}}km(Vm,"isFont"),km(Vm,"type");class Wm extends Oh{constructor(t){super(t),this.type=at}parse(t){const e=function(t,e,n){e=e||1024;let i=t.pos,r=-1,s=0,a="",o=String.fromCharCode.apply(null,new Uint16Array(t.subarray(i,i+128)));for(;0>(r=o.indexOf("\n"))&&s<e&&i<t.byteLength;)a+=o,s+=o.length,i+=128,o+=String.fromCharCode.apply(null,new Uint16Array(t.subarray(i,i+128)));return-1<r&&(!1!==n&&(t.pos+=s+r+1),a+o.slice(0,r))},n=function(t,e,n,i){const r=t[e+3],s=Math.pow(2,r-128)/255;n[i+0]=t[e+0]*s,n[i+1]=t[e+1]*s,n[i+2]=t[e+2]*s,n[i+3]=1},i=function(t,e,n,i){const r=t[e+3],s=Math.pow(2,r-128)/255;n[i+0]=Pi.toHalfFloat(Math.min(t[e+0]*s,65504)),n[i+1]=Pi.toHalfFloat(Math.min(t[e+1]*s,65504)),n[i+2]=Pi.toHalfFloat(Math.min(t[e+2]*s,65504)),n[i+3]=Pi.toHalfFloat(1)},r=new Uint8Array(t);r.pos=0;const s=function(t){const n=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,i=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,r=/^\s*FORMAT=(\S+)\s*$/,s=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,a={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let o,l;if(t.pos>=t.byteLength||!(o=e(t)))return-1;if(!(l=o.match(/^#\?(\S+)/)))return-1;for(a.valid|=1,a.programtype=l[1],a.string+=o+"\n";o=e(t),!1!==o;)if(a.string+=o+"\n","#"!==o.charAt(0)){if((l=o.match(n))&&(a.gamma=parseFloat(l[1])),(l=o.match(i))&&(a.exposure=parseFloat(l[1])),(l=o.match(r))&&(a.valid|=2,a.format=l[1]),(l=o.match(s))&&(a.valid|=4,a.height=parseInt(l[1],10),a.width=parseInt(l[2],10)),2&a.valid&&4&a.valid)break}else a.comments+=o+"\n";return 2&a.valid&&4&a.valid?a:-1}(r);if(-1!==s){const t=s.width,e=s.height,a=function(t,e,n){const i=e;if(i<8||i>32767||2!==t[0]||2!==t[1]||128&t[2])return new Uint8Array(t);if(i!==(t[2]<<8|t[3]))return-1;const r=new Uint8Array(4*e*n);if(!r.length)return-1;let s=0,a=0;const o=4*i,l=new Uint8Array(4),c=new Uint8Array(o);let h=n;for(;h>0&&a<t.byteLength;){if(a+4>t.byteLength)return-1;if(l[0]=t[a++],l[1]=t[a++],l[2]=t[a++],l[3]=t[a++],2!=l[0]||2!=l[1]||(l[2]<<8|l[3])!=i)return-1;let e,n=0;for(;n<o&&a<t.byteLength;){e=t[a++];const i=e>128;if(i&&(e-=128),0===e||n+e>o)return-1;if(i){const i=t[a++];for(let t=0;t<e;t++)c[n++]=i}else c.set(t.subarray(a,a+e),n),n+=e,a+=e}const u=i;for(let t=0;t<u;t++){let e=0;r[s]=c[t+e],e+=i,r[s+1]=c[t+e],e+=i,r[s+2]=c[t+e],e+=i,r[s+3]=c[t+e],s+=4}h--}return r}(r.subarray(r.pos),t,e);if(-1!==a){let r,o,l;switch(this.type){case st:l=a.length/4;const t=new Float32Array(4*l);for(let i=0;i<l;i++)n(a,4*i,t,4*i);r=t,o=st;break;case at:l=a.length/4;const e=new Uint16Array(4*l);for(let n=0;n<l;n++)i(a,4*n,e,4*n);r=e,o=at}return{width:t,height:e,data:r,header:s.string,gamma:s.gamma,exposure:s.exposure,type:o}}}return null}setDataType(t){return this.type=t,this}load(t,e,n,i){return super.load(t,(function(t,n){switch(t.type){case st:case at:"colorSpace"in t?t.colorSpace="srgb-linear":t.encoding=3e3,t.minFilter=$,t.magFilter=$,t.generateMipmaps=!1,t.flipY=!0}e&&e(t,n)}),n,i)}}const jm="colorSpace"in new Je;class Xm extends Oh{constructor(t){super(t),this.type=at}parse(t){const e=65536,n=14,i=65537,r=16384,s=Math.pow(2.7182818,2.2);const a={l:0,c:0,lc:0};function o(t,e,n,i,r){for(;n<t;)e=e<<8|V(i,r),n+=8;n-=t,a.l=e>>n&(1<<t)-1,a.c=e,a.lc=n}const l=new Array(59);function c(t,e,n,r,s,c,h){for(var u=n,d=0,p=0;s<=c;s++){if(u.value-n.value>r)return!1;o(6,d,p,t,u);var f=a.l;if(d=a.c,p=a.lc,h[s]=f,63==f){if(u.value-n.value>r)throw"Something wrong with hufUnpackEncTable";o(8,d,p,t,u);var m=a.l+6;if(d=a.c,p=a.lc,s+m>c+1)throw"Something wrong with hufUnpackEncTable";for(;m--;)h[s++]=0;s--}else if(f>=59){if(s+(m=f-59+2)>c+1)throw"Something wrong with hufUnpackEncTable";for(;m--;)h[s++]=0;s--}}!function(t){for(var e=0;e<=58;++e)l[e]=0;for(e=0;e<i;++e)l[t[e]]+=1;var n=0;for(e=58;e>0;--e){var r=n+l[e]>>1;l[e]=n,n=r}for(e=0;e<i;++e){var s=t[e];s>0&&(t[e]=s|l[s]++<<6)}}(h)}function h(t){return 63&t}function u(t){return t>>6}const d={c:0,lc:0};function p(t,e,n,i){t=t<<8|V(n,i),e+=8,d.c=t,d.lc=e}const f={c:0,lc:0};function m(t,e,n,i,r,s,a,o,l,c){if(t==e){i<8&&(p(n,i,r,a),n=d.c,i=d.lc);var h=n>>(i-=8);h=new Uint8Array([h])[0];if(l.value+h>c)return!1;for(var u=o[l.value-1];h-- >0;)o[l.value++]=u}else{if(!(l.value<c))return!1;o[l.value++]=t}f.c=n,f.lc=i}function g(t){return 65535&t}function v(t){var e=g(t);return e>32767?e-65536:e}const _={a:0,b:0};function x(t,e){var n=v(t),i=v(e),r=n+(1&i)+(i>>1),s=r,a=r-i;_.a=s,_.b=a}function M(t,e){var n=g(t),i=g(e),r=n-(i>>1)&65535,s=i+r-32768&65535;_.a=s,_.b=r}function S(t,e,n,i,r,s,a){for(var o,l=a<16384,c=n>r?r:n,h=1;h<=c;)h<<=1;for(o=h>>=1,h>>=1;h>=1;){for(var u,d,p,f,m=0,g=m+s*(r-o),v=s*h,y=s*o,S=i*h,b=i*o;m<=g;m+=y){for(var w=m,T=m+i*(n-o);w<=T;w+=b){var E=w+S,A=(C=w+v)+S;l?(x(t[w+e],t[C+e]),u=_.a,p=_.b,x(t[E+e],t[A+e]),d=_.a,f=_.b,x(u,d),t[w+e]=_.a,t[E+e]=_.b,x(p,f),t[C+e]=_.a,t[A+e]=_.b):(M(t[w+e],t[C+e]),u=_.a,p=_.b,M(t[E+e],t[A+e]),d=_.a,f=_.b,M(u,d),t[w+e]=_.a,t[E+e]=_.b,M(p,f),t[C+e]=_.a,t[A+e]=_.b)}if(n&h){var C=w+v;l?x(t[w+e],t[C+e]):M(t[w+e],t[C+e]),u=_.a,t[C+e]=_.b,t[w+e]=u}}if(r&h)for(w=m,T=m+i*(n-o);w<=T;w+=b){E=w+S;l?x(t[w+e],t[E+e]):M(t[w+e],t[E+e]),u=_.a,t[E+e]=_.b,t[w+e]=u}o=h,h>>=1}return m}function b(t,e,s,a,o,l){var g=s.value,v=G(e,s),_=G(e,s);s.value+=4;var y=G(e,s);if(s.value+=4,v<0||v>=i||_<0||_>=i)throw"Something wrong with HUF_ENCSIZE";var x=new Array(i),M=new Array(r);if(function(t){for(var e=0;e<r;e++)t[e]={},t[e].len=0,t[e].lit=0,t[e].p=null}(M),c(t,0,s,a-(s.value-g),v,_,x),y>8*(a-(s.value-g)))throw"Something wrong with hufUncompress";!function(t,e,i,r){for(;e<=i;e++){var s=u(t[e]),a=h(t[e]);if(s>>a)throw"Invalid table entry";if(a>n){if((d=r[s>>a-n]).len)throw"Invalid table entry";if(d.lit++,d.p){var o=d.p;d.p=new Array(d.lit);for(var l=0;l<d.lit-1;++l)d.p[l]=o[l]}else d.p=new Array(1);d.p[d.lit-1]=e}else if(a){var c=0;for(l=1<<n-a;l>0;l--){var d;if((d=r[(s<<n-a)+c]).len||d.p)throw"Invalid table entry";d.len=a,d.lit=e,c++}}}}(x,v,_,M),function(t,e,i,r,s,a,o,l,c,g){for(var v=0,_=0,y=l,x=Math.trunc(s.value+(a+7)/8);s.value<x;)for(p(v,_,i,s),v=d.c,_=d.lc;_>=n;)if((w=e[v>>_-n&16383]).len)_-=w.len,m(w.lit,o,v,_,i,0,s,c,g,y),v=f.c,_=f.lc;else{if(!w.p)throw"hufDecode issues";var M;for(M=0;M<w.lit;M++){for(var S=h(t[w.p[M]]);_<S&&s.value<x;)p(v,_,i,s),v=d.c,_=d.lc;if(_>=S&&u(t[w.p[M]])==(v>>_-S&(1<<S)-1)){_-=S,m(w.p[M],o,v,_,i,0,s,c,g,y),v=f.c,_=f.lc;break}}if(M==w.lit)throw"hufDecode issues"}var b=8-a&7;for(v>>=b,_-=b;_>0;){var w;if(!(w=e[v<<n-_&16383]).len)throw"hufDecode issues";_-=w.len,m(w.lit,o,v,_,i,0,s,c,g,y),v=f.c,_=f.lc}}(x,M,t,0,s,y,_,l,o,{value:0})}function w(t){for(var e=1;e<t.length;e++){var n=t[e-1]+t[e]-128;t[e]=n}}function T(t,e){for(var n=0,i=Math.floor((t.length+1)/2),r=0,s=t.length-1;!(r>s||(e[r++]=t[n++],r>s));)e[r++]=t[i++]}function E(t){for(var e=t.byteLength,n=new Array,i=0,r=new DataView(t);e>0;){var s=r.getInt8(i++);if(s<0){e-=(o=-s)+1;for(var a=0;a<o;a++)n.push(r.getUint8(i++))}else{var o=s;e-=2;var l=r.getUint8(i++);for(a=0;a<o+1;a++)n.push(l)}}return n}function A(t,e,n){for(var i,r=1;r<64;)65280==(i=e[t.value])?r=64:i>>8==255?r+=255&i:(n[r]=i,r++),t.value++}function C(t,e){e[0]=q(t[0]),e[1]=q(t[1]),e[2]=q(t[5]),e[3]=q(t[6]),e[4]=q(t[14]),e[5]=q(t[15]),e[6]=q(t[27]),e[7]=q(t[28]),e[8]=q(t[2]),e[9]=q(t[4]),e[10]=q(t[7]),e[11]=q(t[13]),e[12]=q(t[16]),e[13]=q(t[26]),e[14]=q(t[29]),e[15]=q(t[42]),e[16]=q(t[3]),e[17]=q(t[8]),e[18]=q(t[12]),e[19]=q(t[17]),e[20]=q(t[25]),e[21]=q(t[30]),e[22]=q(t[41]),e[23]=q(t[43]),e[24]=q(t[9]),e[25]=q(t[11]),e[26]=q(t[18]),e[27]=q(t[24]),e[28]=q(t[31]),e[29]=q(t[40]),e[30]=q(t[44]),e[31]=q(t[53]),e[32]=q(t[10]),e[33]=q(t[19]),e[34]=q(t[23]),e[35]=q(t[32]),e[36]=q(t[39]),e[37]=q(t[45]),e[38]=q(t[52]),e[39]=q(t[54]),e[40]=q(t[20]),e[41]=q(t[22]),e[42]=q(t[33]),e[43]=q(t[38]),e[44]=q(t[46]),e[45]=q(t[51]),e[46]=q(t[55]),e[47]=q(t[60]),e[48]=q(t[21]),e[49]=q(t[34]),e[50]=q(t[37]),e[51]=q(t[47]),e[52]=q(t[50]),e[53]=q(t[56]),e[54]=q(t[59]),e[55]=q(t[61]),e[56]=q(t[35]),e[57]=q(t[36]),e[58]=q(t[48]),e[59]=q(t[49]),e[60]=q(t[57]),e[61]=q(t[58]),e[62]=q(t[62]),e[63]=q(t[63])}function R(t){const e=.5*Math.cos(.7853975),n=.5*Math.cos(3.14159/16),i=.5*Math.cos(3.14159/8),r=.5*Math.cos(3*3.14159/16),s=.5*Math.cos(.981746875),a=.5*Math.cos(3*3.14159/8),o=.5*Math.cos(1.374445625);for(var l=new Array(4),c=new Array(4),h=new Array(4),u=new Array(4),d=0;d<8;++d){var p=8*d;l[0]=i*t[p+2],l[1]=a*t[p+2],l[2]=i*t[p+6],l[3]=a*t[p+6],c[0]=n*t[p+1]+r*t[p+3]+s*t[p+5]+o*t[p+7],c[1]=r*t[p+1]-o*t[p+3]-n*t[p+5]-s*t[p+7],c[2]=s*t[p+1]-n*t[p+3]+o*t[p+5]+r*t[p+7],c[3]=o*t[p+1]-s*t[p+3]+r*t[p+5]-n*t[p+7],h[0]=e*(t[p+0]+t[p+4]),h[3]=e*(t[p+0]-t[p+4]),h[1]=l[0]+l[3],h[2]=l[1]-l[2],u[0]=h[0]+h[1],u[1]=h[3]+h[2],u[2]=h[3]-h[2],u[3]=h[0]-h[1],t[p+0]=u[0]+c[0],t[p+1]=u[1]+c[1],t[p+2]=u[2]+c[2],t[p+3]=u[3]+c[3],t[p+4]=u[3]-c[3],t[p+5]=u[2]-c[2],t[p+6]=u[1]-c[1],t[p+7]=u[0]-c[0]}for(var f=0;f<8;++f)l[0]=i*t[16+f],l[1]=a*t[16+f],l[2]=i*t[48+f],l[3]=a*t[48+f],c[0]=n*t[8+f]+r*t[24+f]+s*t[40+f]+o*t[56+f],c[1]=r*t[8+f]-o*t[24+f]-n*t[40+f]-s*t[56+f],c[2]=s*t[8+f]-n*t[24+f]+o*t[40+f]+r*t[56+f],c[3]=o*t[8+f]-s*t[24+f]+r*t[40+f]-n*t[56+f],h[0]=e*(t[f]+t[32+f]),h[3]=e*(t[f]-t[32+f]),h[1]=l[0]+l[3],h[2]=l[1]-l[2],u[0]=h[0]+h[1],u[1]=h[3]+h[2],u[2]=h[3]-h[2],u[3]=h[0]-h[1],t[0+f]=u[0]+c[0],t[8+f]=u[1]+c[1],t[16+f]=u[2]+c[2],t[24+f]=u[3]+c[3],t[32+f]=u[3]-c[3],t[40+f]=u[2]-c[2],t[48+f]=u[1]-c[1],t[56+f]=u[0]-c[0]}function P(t){for(var e=0;e<64;++e){var n=t[0][e],i=t[1][e],r=t[2][e];t[0][e]=n+1.5747*r,t[1][e]=n-.1873*i-.4682*r,t[2][e]=n+1.8556*i}}function U(t,e,n){for(var i=0;i<64;++i)e[n+i]=Pi.toHalfFloat(L(t[i]))}function L(t){return t<=1?Math.sign(t)*Math.pow(Math.abs(t),2.2):Math.sign(t)*Math.pow(s,Math.abs(t)-1)}function I(t){return new DataView(t.array.buffer,t.offset.value,t.size)}function D(t){var e=t.viewer.buffer.slice(t.offset.value,t.offset.value+t.size),n=new Uint8Array(E(e)),i=new Uint8Array(n.length);return w(n),T(n,i),new DataView(i.buffer)}function O(t){var e=t.array.slice(t.offset.value,t.offset.value+t.size),n=y(e),i=new Uint8Array(n.length);return w(n),T(n,i),new DataView(i.buffer)}function N(t){for(var n=t.viewer,i={value:t.offset.value},r=new Uint16Array(t.width*t.scanlineBlockSize*(t.channels*t.type)),s=new Uint8Array(8192),a=0,o=new Array(t.channels),l=0;l<t.channels;l++)o[l]={},o[l].start=a,o[l].end=o[l].start,o[l].nx=t.width,o[l].ny=t.lines,o[l].size=t.type,a+=o[l].nx*o[l].ny*o[l].size;var c=Y(n,i),h=Y(n,i);if(h>=8192)throw"Something is wrong with PIZ_COMPRESSION BITMAP_SIZE";if(c<=h)for(l=0;l<h-c+1;l++)s[l+c]=H(n,i);var u=new Uint16Array(e),d=function(t,n){for(var i=0,r=0;r<e;++r)(0==r||t[r>>3]&1<<(7&r))&&(n[i++]=r);for(var s=i-1;i<e;)n[i++]=0;return s}(s,u),p=G(n,i);b(t.array,n,i,p,r,a);for(l=0;l<t.channels;++l)for(var f=o[l],m=0;m<o[l].size;++m)S(r,f.start+m,f.nx,f.size,f.ny,f.nx*f.size,d);!function(t,e,n){for(var i=0;i<n;++i)e[i]=t[e[i]]}(u,r,a);for(var g=0,v=new Uint8Array(r.buffer.byteLength),_=0;_<t.lines;_++)for(var y=0;y<t.channels;y++){var x=(f=o[y]).nx*f.size,M=new Uint8Array(r.buffer,2*f.end,2*x);v.set(M,g),g+=2*x,f.end+=x}return new DataView(v.buffer)}function F(t){var e=t.array.slice(t.offset.value,t.offset.value+t.size),n=y(e);const i=t.lines*t.channels*t.width,r=1==t.type?new Uint16Array(i):new Uint32Array(i);let s=0,a=0;const o=new Array(4);for(let l=0;l<t.lines;l++)for(let e=0;e<t.channels;e++){let e=0;switch(t.type){case 1:o[0]=s,o[1]=o[0]+t.width,s=o[1]+t.width;for(let i=0;i<t.width;++i){e+=n[o[0]++]<<8|n[o[1]++],r[a]=e,a++}break;case 2:o[0]=s,o[1]=o[0]+t.width,o[2]=o[1]+t.width,s=o[2]+t.width;for(let i=0;i<t.width;++i){e+=n[o[0]++]<<24|n[o[1]++]<<16|n[o[2]++]<<8,r[a]=e,a++}}}return new DataView(r.buffer)}function B(t){var e=t.viewer,n={value:t.offset.value},i=new Uint8Array(t.width*t.lines*(t.channels*t.type*2)),r={version:W(e,n),unknownUncompressedSize:W(e,n),unknownCompressedSize:W(e,n),acCompressedSize:W(e,n),dcCompressedSize:W(e,n),rleCompressedSize:W(e,n),rleUncompressedSize:W(e,n),rleRawSize:W(e,n),totalAcUncompressedCount:W(e,n),totalDcUncompressedCount:W(e,n),acCompression:W(e,n)};if(r.version<2)throw"EXRLoader.parse: "+tt.compression+" version "+r.version+" is unsupported";for(var s=new Array,a=Y(e,n)-2;a>0;){var o=z(e.buffer,n),l=H(e,n),c=l>>2&3,h=new Int8Array([(l>>4)-1])[0],u=H(e,n);s.push({name:o,index:h,type:u,compression:c}),a-=o.length+3}for(var d=tt.channels,p=new Array(t.channels),f=0;f<t.channels;++f){var m=p[f]={},g=d[f];m.name=g.name,m.compression=0,m.decoded=!1,m.type=g.pixelType,m.pLinear=g.pLinear,m.width=t.width,m.height=t.lines}for(var v={idx:new Array(3)},_=0;_<t.channels;++_)for(m=p[_],f=0;f<s.length;++f){var x=s[f];m.name==x.name&&(m.compression=x.compression,x.index>=0&&(v.idx[x.index]=_),m.offset=_)}if(r.acCompressedSize>0)switch(r.acCompression){case 0:var M=new Uint16Array(r.totalAcUncompressedCount);b(t.array,e,n,r.acCompressedSize,M,r.totalAcUncompressedCount);break;case 1:var S=t.array.slice(n.value,n.value+r.totalAcUncompressedCount),w=y(S);M=new Uint16Array(w.buffer);n.value+=r.totalAcUncompressedCount}if(r.dcCompressedSize>0){var T={array:t.array,offset:n,size:r.dcCompressedSize},L=new Uint16Array(O(T).buffer);n.value+=r.dcCompressedSize}if(r.rleRawSize>0){S=t.array.slice(n.value,n.value+r.rleCompressedSize);var I=E((w=y(S)).buffer);n.value+=r.rleCompressedSize}var D=0,N=new Array(p.length);for(f=0;f<N.length;++f)N[f]=new Array;for(var F=0;F<t.lines;++F)for(var B=0;B<p.length;++B)N[B].push(D),D+=p[B].width*t.type*2;!function(t,e,n,i,r,s){var a=new DataView(s.buffer),o=n[t.idx[0]].width,l=n[t.idx[0]].height,c=Math.floor(o/8),h=Math.ceil(o/8),u=Math.ceil(l/8),d=o-8*(h-1),p=l-8*(u-1),f={value:0},m=new Array(3),g=new Array(3),v=new Array(3),_=new Array(3),y=new Array(3);for(let A=0;A<3;++A)y[A]=e[t.idx[A]],m[A]=A<1?0:m[A-1]+h*u,g[A]=new Float32Array(64),v[A]=new Uint16Array(64),_[A]=new Uint16Array(64*h);for(let L=0;L<u;++L){var x=8;L==u-1&&(x=p);var M=8;for(let t=0;t<h;++t){t==h-1&&(M=d);for(let t=0;t<3;++t)v[t].fill(0),v[t][0]=r[m[t]++],A(f,i,v[t]),C(v[t],g[t]),R(g[t]);P(g);for(let e=0;e<3;++e)U(g[e],_[e],64*t)}let e=0;for(let i=0;i<3;++i){const r=n[t.idx[i]].type;for(let t=8*L;t<8*L+x;++t){e=y[i][t];for(let n=0;n<c;++n){const s=64*n+8*(7&t);a.setUint16(e+0*r,_[i][s+0],!0),a.setUint16(e+2*r,_[i][s+1],!0),a.setUint16(e+4*r,_[i][s+2],!0),a.setUint16(e+6*r,_[i][s+3],!0),a.setUint16(e+8*r,_[i][s+4],!0),a.setUint16(e+10*r,_[i][s+5],!0),a.setUint16(e+12*r,_[i][s+6],!0),a.setUint16(e+14*r,_[i][s+7],!0),e+=16*r}}if(c!=h)for(let t=8*L;t<8*L+x;++t){const e=y[i][t]+8*c*2*r,n=64*c+8*(7&t);for(let t=0;t<M;++t)a.setUint16(e+2*t*r,_[i][n+t],!0)}}}for(var S=new Uint16Array(o),b=(a=new DataView(s.buffer),0);b<3;++b){n[t.idx[b]].decoded=!0;var w=n[t.idx[b]].type;if(2==n[b].type)for(var T=0;T<l;++T){const t=y[b][T];for(var E=0;E<o;++E)S[E]=a.getUint16(t+2*E*w,!0);for(E=0;E<o;++E)a.setFloat32(t+2*E*w,q(S[E]),!0)}}}(v,N,p,M,L,i);for(f=0;f<p.length;++f){if(!(m=p[f]).decoded){if(2!==m.compression)throw"EXRLoader.parse: unsupported channel compression";var k=0,G=0;for(F=0;F<t.lines;++F){for(var V=N[f][k],j=0;j<m.width;++j){for(var X=0;X<2*m.type;++X)i[V++]=I[G+X*m.width*m.height];G++}k++}}}return new DataView(i.buffer)}function z(t,e){for(var n=new Uint8Array(t),i=0;0!=n[e.value+i];)i+=1;var r=(new TextDecoder).decode(n.slice(e.value,e.value+i));return e.value=e.value+i+1,r}function k(t,e){var n=t.getInt32(e.value,!0);return e.value=e.value+4,n}function G(t,e){var n=t.getUint32(e.value,!0);return e.value=e.value+4,n}function V(t,e){var n=t[e.value];return e.value=e.value+1,n}function H(t,e){var n=t.getUint8(e.value);return e.value=e.value+1,n}const W=function(t,e){let n;return n="getBigInt64"in DataView.prototype?Number(t.getBigInt64(e.value,!0)):t.getUint32(e.value+4,!0)+Number(t.getUint32(e.value,!0)<<32),e.value+=8,n};function j(t,e){var n=t.getFloat32(e.value,!0);return e.value+=4,n}function X(t,e){return Pi.toHalfFloat(j(t,e))}function q(t){var e=(31744&t)>>10,n=1023&t;return(t>>15?-1:1)*(e?31===e?n?NaN:1/0:Math.pow(2,e-15)*(1+n/1024):n/1024*6103515625e-14)}function Y(t,e){var n=t.getUint16(e.value,!0);return e.value+=2,n}function Z(t,e){return q(Y(t,e))}function J(t,e,n,i,r){return"string"===i||"stringvector"===i||"iccProfile"===i?function(t,e,n){var i=(new TextDecoder).decode(new Uint8Array(t).slice(e.value,e.value+n));return e.value=e.value+n,i}(e,n,r):"chlist"===i?function(t,e,n,i){for(var r=n.value,s=[];n.value<r+i-1;){var a=z(e,n),o=k(t,n),l=H(t,n);n.value+=3;var c=k(t,n),h=k(t,n);s.push({name:a,pixelType:o,pLinear:l,xSampling:c,ySampling:h})}return n.value+=1,s}(t,e,n,r):"chromaticities"===i?function(t,e){return{redX:j(t,e),redY:j(t,e),greenX:j(t,e),greenY:j(t,e),blueX:j(t,e),blueY:j(t,e),whiteX:j(t,e),whiteY:j(t,e)}}(t,n):"compression"===i?function(t,e){return["NO_COMPRESSION","RLE_COMPRESSION","ZIPS_COMPRESSION","ZIP_COMPRESSION","PIZ_COMPRESSION","PXR24_COMPRESSION","B44_COMPRESSION","B44A_COMPRESSION","DWAA_COMPRESSION","DWAB_COMPRESSION"][H(t,e)]}(t,n):"box2i"===i?function(t,e){return{xMin:G(t,e),yMin:G(t,e),xMax:G(t,e),yMax:G(t,e)}}(t,n):"lineOrder"===i?function(t,e){return["INCREASING_Y"][H(t,e)]}(t,n):"float"===i?j(t,n):"v2f"===i?function(t,e){return[j(t,e),j(t,e)]}(t,n):"v3f"===i?function(t,e){return[j(t,e),j(t,e),j(t,e)]}(t,n):"int"===i?k(t,n):"rational"===i?function(t,e){return[k(t,e),G(t,e)]}(t,n):"timecode"===i?function(t,e){return[G(t,e),G(t,e)]}(t,n):"preview"===i?(n.value+=r,"skipped"):void(n.value+=r)}const K=new DataView(t),$=new Uint8Array(t),Q={value:0},tt=function(t,e,n){const i={};if(20000630!=t.getUint32(0,!0))throw"THREE.EXRLoader: provided file doesn't appear to be in OpenEXR format.";i.version=t.getUint8(4);const r=t.getUint8(5);i.spec={singleTile:!!(2&r),longName:!!(4&r),deepFormat:!!(8&r),multiPart:!!(16&r)},n.value=8;for(var s=!0;s;){var a=z(e,n);if(0==a)s=!1;else{var o=J(t,e,n,z(e,n),G(t,n));void 0===o||(i[a]=o)}}if(0!=r)throw"THREE.EXRLoader: provided file is currently unsupported.";return i}(K,t,Q),et=function(t,e,n,i,r){const s={size:0,viewer:e,array:n,offset:i,width:t.dataWindow.xMax-t.dataWindow.xMin+1,height:t.dataWindow.yMax-t.dataWindow.yMin+1,channels:t.channels.length,bytesPerLine:null,lines:null,inputSize:null,type:t.channels[0].pixelType,uncompress:null,getter:null,format:null,[jm?"colorSpace":"encoding"]:null};switch(t.compression){case"NO_COMPRESSION":s.lines=1,s.uncompress=I;break;case"RLE_COMPRESSION":s.lines=1,s.uncompress=D;break;case"ZIPS_COMPRESSION":s.lines=1,s.uncompress=O;break;case"ZIP_COMPRESSION":s.lines=16,s.uncompress=O;break;case"PIZ_COMPRESSION":s.lines=32,s.uncompress=N;break;case"PXR24_COMPRESSION":s.lines=16,s.uncompress=F;break;case"DWAA_COMPRESSION":s.lines=32,s.uncompress=B;break;case"DWAB_COMPRESSION":s.lines=256,s.uncompress=B;break;default:throw"EXRLoader.parse: "+t.compression+" is unsupported"}if(s.scanlineBlockSize=s.lines,1==s.type)switch(r){case st:s.getter=Z,s.inputSize=2;break;case at:s.getter=Y,s.inputSize=2}else{if(2!=s.type)throw"EXRLoader.parse: unsupported pixelType "+s.type+" for "+t.compression+".";switch(r){case st:s.getter=j,s.inputSize=4;break;case at:s.getter=X,s.inputSize=4}}s.blockCount=(t.dataWindow.yMax+1)/s.scanlineBlockSize;for(var a=0;a<s.blockCount;a++)W(e,i);s.outputChannels=3==s.channels?4:s.channels;const o=s.width*s.height*s.outputChannels;switch(r){case st:s.byteArray=new Float32Array(o),s.channels<s.outputChannels&&s.byteArray.fill(1,0,o);break;case at:s.byteArray=new Uint16Array(o),s.channels<s.outputChannels&&s.byteArray.fill(15360,0,o)}return s.bytesPerLine=s.width*s.inputSize*s.channels,4==s.outputChannels?s.format=ht:s.format=pt,jm?s.colorSpace="srgb-linear":s.encoding=3e3,s}(tt,K,$,Q,this.type),nt={value:0},it={R:0,G:1,B:2,A:3,Y:0};for(let y=0;y<et.height/et.scanlineBlockSize;y++){const t=G(K,Q);et.size=G(K,Q),et.lines=t+et.scanlineBlockSize>et.height?et.height-t:et.scanlineBlockSize;const e=et.size<et.lines*et.bytesPerLine?et.uncompress(et):I(et);Q.value+=et.size;for(let n=0;n<et.scanlineBlockSize;n++){const t=n+y*et.scanlineBlockSize;if(t>=et.height)break;for(let i=0;i<et.channels;i++){const r=it[tt.channels[i].name];for(let s=0;s<et.width;s++){nt.value=(n*(et.channels*et.width)+i*et.width+s)*et.inputSize;const a=(et.height-1-t)*(et.width*et.outputChannels)+s*et.outputChannels+r;et.byteArray[a]=et.getter(e,nt)}}}}return{header:tt,width:et.width,height:et.height,data:et.byteArray,format:et.format,[jm?"colorSpace":"encoding"]:et[jm?"colorSpace":"encoding"],type:this.type}}setDataType(t){return this.type=t,this}load(t,e,n,i){return super.load(t,(function(t,n){jm?t.colorSpace=n.colorSpace:t.encoding=n.encoding,t.minFilter=$,t.magFilter=$,t.generateMipmaps=!1,t.flipY=!1,e&&e(t,n)}),n,i)}}const qm=/\bvoid\s+main\s*\(\s*\)\s*{/g;function Ym(t){return t.replace(/^[ \t]*#include +<([\w\d./]+)>/gm,(function(t,e){let n=Lr[e];return n?Ym(n):t}))}const Zm=[];for(let kv=0;kv<256;kv++)Zm[kv]=(kv<16?"0":"")+kv.toString(16);const Jm=Object.assign||function(){let t=arguments[0];for(let e=1,n=arguments.length;e<n;e++){let n=arguments[e];if(n)for(let e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])}return t},Km=Date.now(),$m=new WeakMap,Qm=new Map;let tg=1e10;function eg(t,e){const n=function(t){const e=JSON.stringify(t,ig);let n=sg.get(e);null==n&&sg.set(e,n=++rg);return n}(e);let i=$m.get(t);if(i||$m.set(t,i=Object.create(null)),i[n])return new i[n];const r=`_onBeforeCompile${n}`,s=function(i,s){t.onBeforeCompile.call(this,i,s);const a=this.customProgramCacheKey()+"|"+i.vertexShader+"|"+i.fragmentShader;let o=Qm[a];if(!o){const t=function(t,{vertexShader:e,fragmentShader:n},i,r){let{vertexDefs:s,vertexMainIntro:a,vertexMainOutro:o,vertexTransform:l,fragmentDefs:c,fragmentMainIntro:h,fragmentMainOutro:u,fragmentColorTransform:d,customRewriter:p,timeUniform:f}=i;s=s||"",a=a||"",o=o||"",c=c||"",h=h||"",u=u||"",(l||p)&&(e=Ym(e));(d||p)&&(n=Ym(n=n.replace(/^[ \t]*#include <((?:tonemapping|encodings|fog|premultiplied_alpha|dithering)_fragment)>/gm,"\n//!BEGIN_POST_CHUNK $1\n$&\n//!END_POST_CHUNK\n")));if(p){let t=p({vertexShader:e,fragmentShader:n});e=t.vertexShader,n=t.fragmentShader}if(d){let t=[];n=n.replace(/^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,(e=>(t.push(e),""))),u=`${d}\n${t.join("\n")}\n${u}`}if(f){const t=`\nuniform float ${f};\n`;s=t+s,c=t+c}l&&(s=`${s}\nvoid troikaVertexTransform${r}(inout vec3 position, inout vec3 normal, inout vec2 uv) {\n  ${l}\n}\n`,a=`\ntroika_position_${r} = vec3(position);\ntroika_normal_${r} = vec3(normal);\ntroika_uv_${r} = vec2(uv);\ntroikaVertexTransform${r}(troika_position_${r}, troika_normal_${r}, troika_uv_${r});\n${a}\n`,e=(e=`vec3 troika_position_${r};\nvec3 troika_normal_${r};\nvec2 troika_uv_${r};\n${e}\n`).replace(/\b(position|normal|uv)\b/g,((t,e,n,i)=>/\battribute\s+vec[23]\s+$/.test(i.substr(0,n))?e:`troika_${e}_${r}`)),t.map&&t.map.channel>0||(e=e.replace(/\bMAP_UV\b/g,`troika_uv_${r}`)));return e=ng(e,r,s,a,o),n=ng(n,r,c,h,u),{vertexShader:e,fragmentShader:n}}(this,i,e,n);o=Qm[a]=t}i.vertexShader=o.vertexShader,i.fragmentShader=o.fragmentShader,Jm(i.uniforms,this.uniforms),e.timeUniform&&(i.uniforms[e.timeUniform]={get value(){return Date.now()-Km}}),this[r]&&this[r](i)},a=function(){return o(e.chained?t:t.clone())},o=function(i){const r=Object.create(i,l);return Object.defineProperty(r,"baseMaterial",{value:t}),Object.defineProperty(r,"id",{value:tg++}),r.uuid=function(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(Zm[255&t]+Zm[t>>8&255]+Zm[t>>16&255]+Zm[t>>24&255]+"-"+Zm[255&e]+Zm[e>>8&255]+"-"+Zm[e>>16&15|64]+Zm[e>>24&255]+"-"+Zm[63&n|128]+Zm[n>>8&255]+"-"+Zm[n>>16&255]+Zm[n>>24&255]+Zm[255&i]+Zm[i>>8&255]+Zm[i>>16&255]+Zm[i>>24&255]).toUpperCase()}(),r.uniforms=Jm({},i.uniforms,e.uniforms),r.defines=Jm({},i.defines,e.defines),r.defines[`TROIKA_DERIVED_MATERIAL_${n}`]="",r.extensions=Jm({},i.extensions,e.extensions),r._listeners=void 0,r},l={constructor:{value:a},isDerivedMaterial:{value:!0},customProgramCacheKey:{writable:!0,configurable:!0,value:function(){return t.customProgramCacheKey()+"|"+n}},onBeforeCompile:{get:()=>s,set(t){this[r]=t}},copy:{writable:!0,configurable:!0,value:function(e){return t.copy.call(this,e),t.isShaderMaterial||t.isDerivedMaterial||(Jm(this.extensions,e.extensions),Jm(this.defines,e.defines),Jm(this.uniforms,fr.clone(e.uniforms))),this}},clone:{writable:!0,configurable:!0,value:function(){const e=new t.constructor;return o(e).copy(this)}},getDepthMaterial:{writable:!0,configurable:!0,value:function(){let n=this._depthMaterial;return n||(n=this._depthMaterial=eg(t.isDerivedMaterial?t.getDepthMaterial():new qa({depthPacking:ee}),e),n.defines.IS_DEPTH_MATERIAL="",n.uniforms=this.uniforms),n}},getDistanceMaterial:{writable:!0,configurable:!0,value:function(){let n=this._distanceMaterial;return n||(n=this._distanceMaterial=eg(t.isDerivedMaterial?t.getDistanceMaterial():new Ya,e),n.defines.IS_DISTANCE_MATERIAL="",n.uniforms=this.uniforms),n}},dispose:{writable:!0,configurable:!0,value(){const{_depthMaterial:e,_distanceMaterial:n}=this;e&&e.dispose(),n&&n.dispose(),t.dispose.call(this)}}};return i[n]=a,new a}function ng(t,e,n,i,r){return(i||r||n)&&(t=t.replace(qm,`\n${n}\nvoid troikaOrigMain${e}() {`),t+=`\nvoid main() {\n  ${i}\n  troikaOrigMain${e}();\n  ${r}\n}`),t}function ig(t,e){return"uniforms"===t?void 0:"function"==typeof e?e.toString():e}let rg=0;const sg=new Map;const ag=()=>(self.performance||Date).now(),og=x();let lg;const cg=[];let hg=0;function ug(){const t=ag();for(;cg.length&&ag()-t<5;)cg.shift()();hg=cg.length?setTimeout(ug,0):0}const dg=(...t)=>new Promise(((e,n)=>{cg.push((()=>{const i=ag();try{og.webgl.generateIntoCanvas(...t),e({timing:ag()-i})}catch(r){n(r)}})),hg||(hg=setTimeout(ug,0))})),pg=4,fg=2e3,mg={};let gg=0;function vg(t,e,n,i,r,s,a,o,l,c){const h="TroikaTextSDFGenerator_JS_"+gg++%pg;let u=mg[h];return u||(u=mg[h]={workerModule:M({name:h,workerId:h,dependencies:[x,ag],init(t,e){const n=t().javascript.generate;return function(...t){const i=e();return{textureData:n(...t),timing:e()-i}}},getTransferables:t=>[t.textureData.buffer]}),requests:0,idleTimer:null}),u.requests++,clearTimeout(u.idleTimer),u.workerModule(t,e,n,i,r,s).then((({textureData:n,timing:i})=>{const r=ag(),s=new Uint8Array(4*n.length);for(let t=0;t<n.length;t++)s[4*t+c]=n[t];return og.webglUtils.renderImageData(a,s,o,l,t,e,1<<3-c),i+=ag()-r,0==--u.requests&&(u.idleTimer=setTimeout((()=>{S(h)}),fg)),{timing:i}}))}const _g=og.webglUtils.resizeWebGLCanvasWithoutClearing;
/*!
Custom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.
Original MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE
*/const yg=M({name:"Typr Font Parser",dependencies:[function(){return"undefined"==typeof window&&(self.window=self),function(t){var e={parse:function(t){var n=e._bin,i=new Uint8Array(t);if("ttcf"==n.readASCII(i,0,4)){var r=4;n.readUshort(i,r),r+=2,n.readUshort(i,r),r+=2;var s=n.readUint(i,r);r+=4;for(var a=[],o=0;o<s;o++){var l=n.readUint(i,r);r+=4,a.push(e._readFont(i,l))}return a}return[e._readFont(i,0)]},_readFont:function(t,n){var i=e._bin,r=n;i.readFixed(t,n),n+=4;var s=i.readUshort(t,n);n+=2,i.readUshort(t,n),n+=2,i.readUshort(t,n),n+=2,i.readUshort(t,n),n+=2;for(var a=["cmap","head","hhea","maxp","hmtx","name","OS/2","post","loca","glyf","kern","CFF ","GPOS","GSUB","SVG "],o={_data:t,_offset:r},l={},c=0;c<s;c++){var h=i.readASCII(t,n,4);n+=4,i.readUint(t,n),n+=4;var u=i.readUint(t,n);n+=4;var d=i.readUint(t,n);n+=4,l[h]={offset:u,length:d}}for(c=0;c<a.length;c++){var p=a[c];l[p]&&(o[p.trim()]=e[p.trim()].parse(t,l[p].offset,l[p].length,o))}return o},_tabOffset:function(t,n,i){for(var r=e._bin,s=r.readUshort(t,i+4),a=i+12,o=0;o<s;o++){var l=r.readASCII(t,a,4);a+=4,r.readUint(t,a),a+=4;var c=r.readUint(t,a);if(a+=4,r.readUint(t,a),a+=4,l==n)return c}return 0}};e._bin={readFixed:function(t,e){return(t[e]<<8|t[e+1])+(t[e+2]<<8|t[e+3])/65540},readF2dot14:function(t,n){return e._bin.readShort(t,n)/16384},readInt:function(t,n){return e._bin._view(t).getInt32(n)},readInt8:function(t,n){return e._bin._view(t).getInt8(n)},readShort:function(t,n){return e._bin._view(t).getInt16(n)},readUshort:function(t,n){return e._bin._view(t).getUint16(n)},readUshorts:function(t,n,i){for(var r=[],s=0;s<i;s++)r.push(e._bin.readUshort(t,n+2*s));return r},readUint:function(t,n){return e._bin._view(t).getUint32(n)},readUint64:function(t,n){return 4294967296*e._bin.readUint(t,n)+e._bin.readUint(t,n+4)},readASCII:function(t,e,n){for(var i="",r=0;r<n;r++)i+=String.fromCharCode(t[e+r]);return i},readUnicode:function(t,e,n){for(var i="",r=0;r<n;r++){var s=t[e++]<<8|t[e++];i+=String.fromCharCode(s)}return i},_tdec:"undefined"!=typeof window&&window.TextDecoder?new window.TextDecoder:null,readUTF8:function(t,n,i){var r=e._bin._tdec;return r&&0==n&&i==t.length?r.decode(t):e._bin.readASCII(t,n,i)},readBytes:function(t,e,n){for(var i=[],r=0;r<n;r++)i.push(t[e+r]);return i},readASCIIArray:function(t,e,n){for(var i=[],r=0;r<n;r++)i.push(String.fromCharCode(t[e+r]));return i},_view:function(t){return t._dataView||(t._dataView=t.buffer?new DataView(t.buffer,t.byteOffset,t.byteLength):new DataView(new Uint8Array(t).buffer))}},e._lctf={},e._lctf.parse=function(t,n,i,r,s){var a=e._bin,o={},l=n;a.readFixed(t,n),n+=4;var c=a.readUshort(t,n);n+=2;var h=a.readUshort(t,n);n+=2;var u=a.readUshort(t,n);return n+=2,o.scriptList=e._lctf.readScriptList(t,l+c),o.featureList=e._lctf.readFeatureList(t,l+h),o.lookupList=e._lctf.readLookupList(t,l+u,s),o},e._lctf.readLookupList=function(t,n,i){var r=e._bin,s=n,a=[],o=r.readUshort(t,n);n+=2;for(var l=0;l<o;l++){var c=r.readUshort(t,n);n+=2;var h=e._lctf.readLookupTable(t,s+c,i);a.push(h)}return a},e._lctf.readLookupTable=function(t,n,i){var r=e._bin,s=n,a={tabs:[]};a.ltype=r.readUshort(t,n),n+=2,a.flag=r.readUshort(t,n),n+=2;var o=r.readUshort(t,n);n+=2;for(var l=a.ltype,c=0;c<o;c++){var h=r.readUshort(t,n);n+=2;var u=i(t,l,s+h,a);a.tabs.push(u)}return a},e._lctf.numOfOnes=function(t){for(var e=0,n=0;n<32;n++)0!=(t>>>n&1)&&e++;return e},e._lctf.readClassDef=function(t,n){var i=e._bin,r=[],s=i.readUshort(t,n);if(n+=2,1==s){var a=i.readUshort(t,n);n+=2;var o=i.readUshort(t,n);n+=2;for(var l=0;l<o;l++)r.push(a+l),r.push(a+l),r.push(i.readUshort(t,n)),n+=2}if(2==s){var c=i.readUshort(t,n);for(n+=2,l=0;l<c;l++)r.push(i.readUshort(t,n)),n+=2,r.push(i.readUshort(t,n)),n+=2,r.push(i.readUshort(t,n)),n+=2}return r},e._lctf.getInterval=function(t,e){for(var n=0;n<t.length;n+=3){var i=t[n],r=t[n+1];if(t[n+2],i<=e&&e<=r)return n}return-1},e._lctf.readCoverage=function(t,n){var i=e._bin,r={};r.fmt=i.readUshort(t,n),n+=2;var s=i.readUshort(t,n);return n+=2,1==r.fmt&&(r.tab=i.readUshorts(t,n,s)),2==r.fmt&&(r.tab=i.readUshorts(t,n,3*s)),r},e._lctf.coverageIndex=function(t,n){var i=t.tab;if(1==t.fmt)return i.indexOf(n);if(2==t.fmt){var r=e._lctf.getInterval(i,n);if(-1!=r)return i[r+2]+(n-i[r])}return-1},e._lctf.readFeatureList=function(t,n){var i=e._bin,r=n,s=[],a=i.readUshort(t,n);n+=2;for(var o=0;o<a;o++){var l=i.readASCII(t,n,4);n+=4;var c=i.readUshort(t,n);n+=2;var h=e._lctf.readFeatureTable(t,r+c);h.tag=l.trim(),s.push(h)}return s},e._lctf.readFeatureTable=function(t,n){var i=e._bin,r=n,s={},a=i.readUshort(t,n);n+=2,a>0&&(s.featureParams=r+a);var o=i.readUshort(t,n);n+=2,s.tab=[];for(var l=0;l<o;l++)s.tab.push(i.readUshort(t,n+2*l));return s},e._lctf.readScriptList=function(t,n){var i=e._bin,r=n,s={},a=i.readUshort(t,n);n+=2;for(var o=0;o<a;o++){var l=i.readASCII(t,n,4);n+=4;var c=i.readUshort(t,n);n+=2,s[l.trim()]=e._lctf.readScriptTable(t,r+c)}return s},e._lctf.readScriptTable=function(t,n){var i=e._bin,r=n,s={},a=i.readUshort(t,n);n+=2,s.default=e._lctf.readLangSysTable(t,r+a);var o=i.readUshort(t,n);n+=2;for(var l=0;l<o;l++){var c=i.readASCII(t,n,4);n+=4;var h=i.readUshort(t,n);n+=2,s[c.trim()]=e._lctf.readLangSysTable(t,r+h)}return s},e._lctf.readLangSysTable=function(t,n){var i=e._bin,r={};i.readUshort(t,n),n+=2,r.reqFeature=i.readUshort(t,n),n+=2;var s=i.readUshort(t,n);return n+=2,r.features=i.readUshorts(t,n,s),r},e.CFF={},e.CFF.parse=function(t,n,i){var r=e._bin;(t=new Uint8Array(t.buffer,n,i))[n=0],t[++n],t[++n],t[++n],n++;var s=[];n=e.CFF.readIndex(t,n,s);for(var a=[],o=0;o<s.length-1;o++)a.push(r.readASCII(t,n+s[o],s[o+1]-s[o]));n+=s[s.length-1];var l=[];n=e.CFF.readIndex(t,n,l);var c=[];for(o=0;o<l.length-1;o++)c.push(e.CFF.readDict(t,n+l[o],n+l[o+1]));n+=l[l.length-1];var h=c[0],u=[];n=e.CFF.readIndex(t,n,u);var d=[];for(o=0;o<u.length-1;o++)d.push(r.readASCII(t,n+u[o],u[o+1]-u[o]));if(n+=u[u.length-1],e.CFF.readSubrs(t,n,h),h.CharStrings){n=h.CharStrings,u=[],n=e.CFF.readIndex(t,n,u);var p=[];for(o=0;o<u.length-1;o++)p.push(r.readBytes(t,n+u[o],u[o+1]-u[o]));h.CharStrings=p}if(h.ROS){n=h.FDArray;var f=[];for(n=e.CFF.readIndex(t,n,f),h.FDArray=[],o=0;o<f.length-1;o++){var m=e.CFF.readDict(t,n+f[o],n+f[o+1]);e.CFF._readFDict(t,m,d),h.FDArray.push(m)}n+=f[f.length-1],n=h.FDSelect,h.FDSelect=[];var g=t[n];if(n++,3!=g)throw g;var v=r.readUshort(t,n);for(n+=2,o=0;o<v+1;o++)h.FDSelect.push(r.readUshort(t,n),t[n+2]),n+=3}return h.Encoding&&(h.Encoding=e.CFF.readEncoding(t,h.Encoding,h.CharStrings.length)),h.charset&&(h.charset=e.CFF.readCharset(t,h.charset,h.CharStrings.length)),e.CFF._readFDict(t,h,d),h},e.CFF._readFDict=function(t,n,i){var r;for(var s in n.Private&&(r=n.Private[1],n.Private=e.CFF.readDict(t,r,r+n.Private[0]),n.Private.Subrs&&e.CFF.readSubrs(t,r+n.Private.Subrs,n.Private)),n)-1!=["FamilyName","FontName","FullName","Notice","version","Copyright"].indexOf(s)&&(n[s]=i[n[s]-426+35])},e.CFF.readSubrs=function(t,n,i){var r=e._bin,s=[];n=e.CFF.readIndex(t,n,s);var a,o=s.length;a=o<1240?107:o<33900?1131:32768,i.Bias=a,i.Subrs=[];for(var l=0;l<s.length-1;l++)i.Subrs.push(r.readBytes(t,n+s[l],s[l+1]-s[l]))},e.CFF.tableSE=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,114,0,115,116,117,118,119,120,121,122,0,123,0,124,125,126,127,128,129,130,131,0,132,133,0,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,139,0,0,0,0,140,141,142,143,0,0,0,0,0,144,0,0,0,145,0,0,146,147,148,149,0,0,0,0],e.CFF.glyphByUnicode=function(t,e){for(var n=0;n<t.charset.length;n++)if(t.charset[n]==e)return n;return-1},e.CFF.glyphBySE=function(t,n){return n<0||n>255?-1:e.CFF.glyphByUnicode(t,e.CFF.tableSE[n])},e.CFF.readEncoding=function(t,n,i){e._bin;var r=[".notdef"],s=t[n];if(n++,0!=s)throw"error: unknown encoding format: "+s;var a=t[n];n++;for(var o=0;o<a;o++)r.push(t[n+o]);return r},e.CFF.readCharset=function(t,n,i){var r=e._bin,s=[".notdef"],a=t[n];if(n++,0==a)for(var o=0;o<i;o++){var l=r.readUshort(t,n);n+=2,s.push(l)}else{if(1!=a&&2!=a)throw"error: format: "+a;for(;s.length<i;){l=r.readUshort(t,n),n+=2;var c=0;for(1==a?(c=t[n],n++):(c=r.readUshort(t,n),n+=2),o=0;o<=c;o++)s.push(l),l++}}return s},e.CFF.readIndex=function(t,n,i){var r=e._bin,s=r.readUshort(t,n)+1,a=t[n+=2];if(n++,1==a)for(var o=0;o<s;o++)i.push(t[n+o]);else if(2==a)for(o=0;o<s;o++)i.push(r.readUshort(t,n+2*o));else if(3==a)for(o=0;o<s;o++)i.push(16777215&r.readUint(t,n+3*o-1));else if(1!=s)throw"unsupported offset size: "+a+", count: "+s;return(n+=s*a)-1},e.CFF.getCharString=function(t,n,i){var r=e._bin,s=t[n],a=t[n+1];t[n+2],t[n+3],t[n+4];var o=1,l=null,c=null;s<=20&&(l=s,o=1),12==s&&(l=100*s+a,o=2),21<=s&&s<=27&&(l=s,o=1),28==s&&(c=r.readShort(t,n+1),o=3),29<=s&&s<=31&&(l=s,o=1),32<=s&&s<=246&&(c=s-139,o=1),247<=s&&s<=250&&(c=256*(s-247)+a+108,o=2),251<=s&&s<=254&&(c=256*-(s-251)-a-108,o=2),255==s&&(c=r.readInt(t,n+1)/65535,o=5),i.val=null!=c?c:"o"+l,i.size=o},e.CFF.readCharString=function(t,n,i){for(var r=n+i,s=e._bin,a=[];n<r;){var o=t[n],l=t[n+1];t[n+2],t[n+3],t[n+4];var c=1,h=null,u=null;o<=20&&(h=o,c=1),12==o&&(h=100*o+l,c=2),19!=o&&20!=o||(h=o,c=2),21<=o&&o<=27&&(h=o,c=1),28==o&&(u=s.readShort(t,n+1),c=3),29<=o&&o<=31&&(h=o,c=1),32<=o&&o<=246&&(u=o-139,c=1),247<=o&&o<=250&&(u=256*(o-247)+l+108,c=2),251<=o&&o<=254&&(u=256*-(o-251)-l-108,c=2),255==o&&(u=s.readInt(t,n+1)/65535,c=5),a.push(null!=u?u:"o"+h),n+=c}return a},e.CFF.readDict=function(t,n,i){for(var r=e._bin,s={},a=[];n<i;){var o=t[n],l=t[n+1];t[n+2],t[n+3],t[n+4];var c=1,h=null,u=null;if(28==o&&(u=r.readShort(t,n+1),c=3),29==o&&(u=r.readInt(t,n+1),c=5),32<=o&&o<=246&&(u=o-139,c=1),247<=o&&o<=250&&(u=256*(o-247)+l+108,c=2),251<=o&&o<=254&&(u=256*-(o-251)-l-108,c=2),255==o)throw u=r.readInt(t,n+1)/65535,c=5,"unknown number";if(30==o){var d=[];for(c=1;;){var p=t[n+c];c++;var f=p>>4,m=15&p;if(15!=f&&d.push(f),15!=m&&d.push(m),15==m)break}for(var g="",v=[0,1,2,3,4,5,6,7,8,9,".","e","e-","reserved","-","endOfNumber"],_=0;_<d.length;_++)g+=v[d[_]];u=parseFloat(g)}o<=21&&(h=["version","Notice","FullName","FamilyName","Weight","FontBBox","BlueValues","OtherBlues","FamilyBlues","FamilyOtherBlues","StdHW","StdVW","escape","UniqueID","XUID","charset","Encoding","CharStrings","Private","Subrs","defaultWidthX","nominalWidthX"][o],c=1,12==o&&(h=["Copyright","isFixedPitch","ItalicAngle","UnderlinePosition","UnderlineThickness","PaintType","CharstringType","FontMatrix","StrokeWidth","BlueScale","BlueShift","BlueFuzz","StemSnapH","StemSnapV","ForceBold",0,0,"LanguageGroup","ExpansionFactor","initialRandomSeed","SyntheticBase","PostScript","BaseFontName","BaseFontBlend",0,0,0,0,0,0,"ROS","CIDFontVersion","CIDFontRevision","CIDFontType","CIDCount","UIDBase","FDArray","FDSelect","FontName"][l],c=2)),null!=h?(s[h]=1==a.length?a[0]:a,a=[]):a.push(u),n+=c}return s},e.cmap={},e.cmap.parse=function(t,n,i){t=new Uint8Array(t.buffer,n,i),n=0;var r=e._bin,s={};r.readUshort(t,n),n+=2;var a=r.readUshort(t,n);n+=2;var o=[];s.tables=[];for(var l=0;l<a;l++){var c=r.readUshort(t,n);n+=2;var h=r.readUshort(t,n);n+=2;var u=r.readUint(t,n);n+=4;var d="p"+c+"e"+h,p=o.indexOf(u);if(-1==p){var f;p=s.tables.length,o.push(u);var m=r.readUshort(t,u);0==m?f=e.cmap.parse0(t,u):4==m?f=e.cmap.parse4(t,u):6==m?f=e.cmap.parse6(t,u):12==m&&(f=e.cmap.parse12(t,u)),s.tables.push(f)}if(null!=s[d])throw"multiple tables for one platform+encoding";s[d]=p}return s},e.cmap.parse0=function(t,n){var i=e._bin,r={};r.format=i.readUshort(t,n),n+=2;var s=i.readUshort(t,n);n+=2,i.readUshort(t,n),n+=2,r.map=[];for(var a=0;a<s-6;a++)r.map.push(t[n+a]);return r},e.cmap.parse4=function(t,n){var i=e._bin,r=n,s={};s.format=i.readUshort(t,n),n+=2;var a=i.readUshort(t,n);n+=2,i.readUshort(t,n),n+=2;var o=i.readUshort(t,n);n+=2;var l=o/2;s.searchRange=i.readUshort(t,n),n+=2,s.entrySelector=i.readUshort(t,n),n+=2,s.rangeShift=i.readUshort(t,n),n+=2,s.endCount=i.readUshorts(t,n,l),n+=2*l,n+=2,s.startCount=i.readUshorts(t,n,l),n+=2*l,s.idDelta=[];for(var c=0;c<l;c++)s.idDelta.push(i.readShort(t,n)),n+=2;for(s.idRangeOffset=i.readUshorts(t,n,l),n+=2*l,s.glyphIdArray=[];n<r+a;)s.glyphIdArray.push(i.readUshort(t,n)),n+=2;return s},e.cmap.parse6=function(t,n){var i=e._bin,r={};r.format=i.readUshort(t,n),n+=2,i.readUshort(t,n),n+=2,i.readUshort(t,n),n+=2,r.firstCode=i.readUshort(t,n),n+=2;var s=i.readUshort(t,n);n+=2,r.glyphIdArray=[];for(var a=0;a<s;a++)r.glyphIdArray.push(i.readUshort(t,n)),n+=2;return r},e.cmap.parse12=function(t,n){var i=e._bin,r={};r.format=i.readUshort(t,n),n+=2,n+=2,i.readUint(t,n),n+=4,i.readUint(t,n),n+=4;var s=i.readUint(t,n);n+=4,r.groups=[];for(var a=0;a<s;a++){var o=n+12*a,l=i.readUint(t,o+0),c=i.readUint(t,o+4),h=i.readUint(t,o+8);r.groups.push([l,c,h])}return r},e.glyf={},e.glyf.parse=function(t,e,n,i){for(var r=[],s=0;s<i.maxp.numGlyphs;s++)r.push(null);return r},e.glyf._parseGlyf=function(t,n){var i=e._bin,r=t._data,s=e._tabOffset(r,"glyf",t._offset)+t.loca[n];if(t.loca[n]==t.loca[n+1])return null;var a={};if(a.noc=i.readShort(r,s),s+=2,a.xMin=i.readShort(r,s),s+=2,a.yMin=i.readShort(r,s),s+=2,a.xMax=i.readShort(r,s),s+=2,a.yMax=i.readShort(r,s),s+=2,a.xMin>=a.xMax||a.yMin>=a.yMax)return null;if(a.noc>0){a.endPts=[];for(var o=0;o<a.noc;o++)a.endPts.push(i.readUshort(r,s)),s+=2;var l=i.readUshort(r,s);if(s+=2,r.length-s<l)return null;a.instructions=i.readBytes(r,s,l),s+=l;var c=a.endPts[a.noc-1]+1;for(a.flags=[],o=0;o<c;o++){var h=r[s];if(s++,a.flags.push(h),0!=(8&h)){var u=r[s];s++;for(var d=0;d<u;d++)a.flags.push(h),o++}}for(a.xs=[],o=0;o<c;o++){var p=0!=(2&a.flags[o]),f=0!=(16&a.flags[o]);p?(a.xs.push(f?r[s]:-r[s]),s++):f?a.xs.push(0):(a.xs.push(i.readShort(r,s)),s+=2)}for(a.ys=[],o=0;o<c;o++)p=0!=(4&a.flags[o]),f=0!=(32&a.flags[o]),p?(a.ys.push(f?r[s]:-r[s]),s++):f?a.ys.push(0):(a.ys.push(i.readShort(r,s)),s+=2);var m=0,g=0;for(o=0;o<c;o++)m+=a.xs[o],g+=a.ys[o],a.xs[o]=m,a.ys[o]=g}else{var v;a.parts=[];do{v=i.readUshort(r,s),s+=2;var _={m:{a:1,b:0,c:0,d:1,tx:0,ty:0},p1:-1,p2:-1};if(a.parts.push(_),_.glyphIndex=i.readUshort(r,s),s+=2,1&v){var y=i.readShort(r,s);s+=2;var x=i.readShort(r,s);s+=2}else y=i.readInt8(r,s),s++,x=i.readInt8(r,s),s++;2&v?(_.m.tx=y,_.m.ty=x):(_.p1=y,_.p2=x),8&v?(_.m.a=_.m.d=i.readF2dot14(r,s),s+=2):64&v?(_.m.a=i.readF2dot14(r,s),s+=2,_.m.d=i.readF2dot14(r,s),s+=2):128&v&&(_.m.a=i.readF2dot14(r,s),s+=2,_.m.b=i.readF2dot14(r,s),s+=2,_.m.c=i.readF2dot14(r,s),s+=2,_.m.d=i.readF2dot14(r,s),s+=2)}while(32&v);if(256&v){var M=i.readUshort(r,s);for(s+=2,a.instr=[],o=0;o<M;o++)a.instr.push(r[s]),s++}}return a},e.GPOS={},e.GPOS.parse=function(t,n,i,r){return e._lctf.parse(t,n,i,r,e.GPOS.subt)},e.GPOS.subt=function(t,n,i,r){var s=e._bin,a=i,o={};if(o.fmt=s.readUshort(t,i),i+=2,1==n||2==n||3==n||7==n||8==n&&o.fmt<=2){var l=s.readUshort(t,i);i+=2,o.coverage=e._lctf.readCoverage(t,l+a)}if(1==n&&1==o.fmt){var c=s.readUshort(t,i);i+=2;var h=e._lctf.numOfOnes(c);0!=c&&(o.pos=e.GPOS.readValueRecord(t,i,c))}else if(2==n&&o.fmt>=1&&o.fmt<=2){c=s.readUshort(t,i),i+=2;var u=s.readUshort(t,i);i+=2,h=e._lctf.numOfOnes(c);var d=e._lctf.numOfOnes(u);if(1==o.fmt){o.pairsets=[];var p=s.readUshort(t,i);i+=2;for(var f=0;f<p;f++){var m=a+s.readUshort(t,i);i+=2;var g=s.readUshort(t,m);m+=2;for(var v=[],_=0;_<g;_++){var y=s.readUshort(t,m);m+=2,0!=c&&(T=e.GPOS.readValueRecord(t,m,c),m+=2*h),0!=u&&(E=e.GPOS.readValueRecord(t,m,u),m+=2*d),v.push({gid2:y,val1:T,val2:E})}o.pairsets.push(v)}}if(2==o.fmt){var x=s.readUshort(t,i);i+=2;var M=s.readUshort(t,i);i+=2;var S=s.readUshort(t,i);i+=2;var b=s.readUshort(t,i);for(i+=2,o.classDef1=e._lctf.readClassDef(t,a+x),o.classDef2=e._lctf.readClassDef(t,a+M),o.matrix=[],f=0;f<S;f++){var w=[];for(_=0;_<b;_++){var T=null,E=null;0!=c&&(T=e.GPOS.readValueRecord(t,i,c),i+=2*h),0!=u&&(E=e.GPOS.readValueRecord(t,i,u),i+=2*d),w.push({val1:T,val2:E})}o.matrix.push(w)}}}else if(9==n&&1==o.fmt){var A=s.readUshort(t,i);i+=2;var C=s.readUint(t,i);if(i+=4,9==r.ltype)r.ltype=A;else if(r.ltype!=A)throw"invalid extension substitution";return e.GPOS.subt(t,r.ltype,a+C)}return o},e.GPOS.readValueRecord=function(t,n,i){var r=e._bin,s=[];return s.push(1&i?r.readShort(t,n):0),n+=1&i?2:0,s.push(2&i?r.readShort(t,n):0),n+=2&i?2:0,s.push(4&i?r.readShort(t,n):0),n+=4&i?2:0,s.push(8&i?r.readShort(t,n):0),n+=8&i?2:0,s},e.GSUB={},e.GSUB.parse=function(t,n,i,r){return e._lctf.parse(t,n,i,r,e.GSUB.subt)},e.GSUB.subt=function(t,n,i,r){var s=e._bin,a=i,o={};if(o.fmt=s.readUshort(t,i),i+=2,1!=n&&4!=n&&5!=n&&6!=n)return null;if(1==n||4==n||5==n&&o.fmt<=2||6==n&&o.fmt<=2){var l=s.readUshort(t,i);i+=2,o.coverage=e._lctf.readCoverage(t,a+l)}if(1==n&&o.fmt>=1&&o.fmt<=2){if(1==o.fmt)o.delta=s.readShort(t,i),i+=2;else if(2==o.fmt){var c=s.readUshort(t,i);i+=2,o.newg=s.readUshorts(t,i,c),i+=2*o.newg.length}}else if(4==n){o.vals=[],c=s.readUshort(t,i),i+=2;for(var h=0;h<c;h++){var u=s.readUshort(t,i);i+=2,o.vals.push(e.GSUB.readLigatureSet(t,a+u))}}else if(5==n&&2==o.fmt){if(2==o.fmt){var d=s.readUshort(t,i);i+=2,o.cDef=e._lctf.readClassDef(t,a+d),o.scset=[];var p=s.readUshort(t,i);for(i+=2,h=0;h<p;h++){var f=s.readUshort(t,i);i+=2,o.scset.push(0==f?null:e.GSUB.readSubClassSet(t,a+f))}}}else if(6==n&&3==o.fmt){if(3==o.fmt){for(h=0;h<3;h++){c=s.readUshort(t,i),i+=2;for(var m=[],g=0;g<c;g++)m.push(e._lctf.readCoverage(t,a+s.readUshort(t,i+2*g)));i+=2*c,0==h&&(o.backCvg=m),1==h&&(o.inptCvg=m),2==h&&(o.ahedCvg=m)}c=s.readUshort(t,i),i+=2,o.lookupRec=e.GSUB.readSubstLookupRecords(t,i,c)}}else if(7==n&&1==o.fmt){var v=s.readUshort(t,i);i+=2;var _=s.readUint(t,i);if(i+=4,9==r.ltype)r.ltype=v;else if(r.ltype!=v)throw"invalid extension substitution";return e.GSUB.subt(t,r.ltype,a+_)}return o},e.GSUB.readSubClassSet=function(t,n){var i=e._bin.readUshort,r=n,s=[],a=i(t,n);n+=2;for(var o=0;o<a;o++){var l=i(t,n);n+=2,s.push(e.GSUB.readSubClassRule(t,r+l))}return s},e.GSUB.readSubClassRule=function(t,n){var i=e._bin.readUshort,r={},s=i(t,n),a=i(t,n+=2);n+=2,r.input=[];for(var o=0;o<s-1;o++)r.input.push(i(t,n)),n+=2;return r.substLookupRecords=e.GSUB.readSubstLookupRecords(t,n,a),r},e.GSUB.readSubstLookupRecords=function(t,n,i){for(var r=e._bin.readUshort,s=[],a=0;a<i;a++)s.push(r(t,n),r(t,n+2)),n+=4;return s},e.GSUB.readChainSubClassSet=function(t,n){var i=e._bin,r=n,s=[],a=i.readUshort(t,n);n+=2;for(var o=0;o<a;o++){var l=i.readUshort(t,n);n+=2,s.push(e.GSUB.readChainSubClassRule(t,r+l))}return s},e.GSUB.readChainSubClassRule=function(t,n){for(var i=e._bin,r={},s=["backtrack","input","lookahead"],a=0;a<s.length;a++){var o=i.readUshort(t,n);n+=2,1==a&&o--,r[s[a]]=i.readUshorts(t,n,o),n+=2*r[s[a]].length}return o=i.readUshort(t,n),n+=2,r.subst=i.readUshorts(t,n,2*o),n+=2*r.subst.length,r},e.GSUB.readLigatureSet=function(t,n){var i=e._bin,r=n,s=[],a=i.readUshort(t,n);n+=2;for(var o=0;o<a;o++){var l=i.readUshort(t,n);n+=2,s.push(e.GSUB.readLigature(t,r+l))}return s},e.GSUB.readLigature=function(t,n){var i=e._bin,r={chain:[]};r.nglyph=i.readUshort(t,n),n+=2;var s=i.readUshort(t,n);n+=2;for(var a=0;a<s-1;a++)r.chain.push(i.readUshort(t,n)),n+=2;return r},e.head={},e.head.parse=function(t,n,i){var r=e._bin,s={};return r.readFixed(t,n),n+=4,s.fontRevision=r.readFixed(t,n),n+=4,r.readUint(t,n),n+=4,r.readUint(t,n),n+=4,s.flags=r.readUshort(t,n),n+=2,s.unitsPerEm=r.readUshort(t,n),n+=2,s.created=r.readUint64(t,n),n+=8,s.modified=r.readUint64(t,n),n+=8,s.xMin=r.readShort(t,n),n+=2,s.yMin=r.readShort(t,n),n+=2,s.xMax=r.readShort(t,n),n+=2,s.yMax=r.readShort(t,n),n+=2,s.macStyle=r.readUshort(t,n),n+=2,s.lowestRecPPEM=r.readUshort(t,n),n+=2,s.fontDirectionHint=r.readShort(t,n),n+=2,s.indexToLocFormat=r.readShort(t,n),n+=2,s.glyphDataFormat=r.readShort(t,n),n+=2,s},e.hhea={},e.hhea.parse=function(t,n,i){var r=e._bin,s={};return r.readFixed(t,n),n+=4,s.ascender=r.readShort(t,n),n+=2,s.descender=r.readShort(t,n),n+=2,s.lineGap=r.readShort(t,n),n+=2,s.advanceWidthMax=r.readUshort(t,n),n+=2,s.minLeftSideBearing=r.readShort(t,n),n+=2,s.minRightSideBearing=r.readShort(t,n),n+=2,s.xMaxExtent=r.readShort(t,n),n+=2,s.caretSlopeRise=r.readShort(t,n),n+=2,s.caretSlopeRun=r.readShort(t,n),n+=2,s.caretOffset=r.readShort(t,n),n+=2,n+=8,s.metricDataFormat=r.readShort(t,n),n+=2,s.numberOfHMetrics=r.readUshort(t,n),n+=2,s},e.hmtx={},e.hmtx.parse=function(t,n,i,r){for(var s=e._bin,a={aWidth:[],lsBearing:[]},o=0,l=0,c=0;c<r.maxp.numGlyphs;c++)c<r.hhea.numberOfHMetrics&&(o=s.readUshort(t,n),n+=2,l=s.readShort(t,n),n+=2),a.aWidth.push(o),a.lsBearing.push(l);return a},e.kern={},e.kern.parse=function(t,n,i,r){var s=e._bin,a=s.readUshort(t,n);if(n+=2,1==a)return e.kern.parseV1(t,n-2,i,r);var o=s.readUshort(t,n);n+=2;for(var l={glyph1:[],rval:[]},c=0;c<o;c++){n+=2,i=s.readUshort(t,n),n+=2;var h=s.readUshort(t,n);n+=2;var u=h>>>8;if(0!=(u&=15))throw"unknown kern table format: "+u;n=e.kern.readFormat0(t,n,l)}return l},e.kern.parseV1=function(t,n,i,r){var s=e._bin;s.readFixed(t,n),n+=4;var a=s.readUint(t,n);n+=4;for(var o={glyph1:[],rval:[]},l=0;l<a;l++){s.readUint(t,n),n+=4;var c=s.readUshort(t,n);n+=2,s.readUshort(t,n),n+=2;var h=c>>>8;if(0!=(h&=15))throw"unknown kern table format: "+h;n=e.kern.readFormat0(t,n,o)}return o},e.kern.readFormat0=function(t,n,i){var r=e._bin,s=-1,a=r.readUshort(t,n);n+=2,r.readUshort(t,n),n+=2,r.readUshort(t,n),n+=2,r.readUshort(t,n),n+=2;for(var o=0;o<a;o++){var l=r.readUshort(t,n);n+=2;var c=r.readUshort(t,n);n+=2;var h=r.readShort(t,n);n+=2,l!=s&&(i.glyph1.push(l),i.rval.push({glyph2:[],vals:[]}));var u=i.rval[i.rval.length-1];u.glyph2.push(c),u.vals.push(h),s=l}return n},e.loca={},e.loca.parse=function(t,n,i,r){var s=e._bin,a=[],o=r.head.indexToLocFormat,l=r.maxp.numGlyphs+1;if(0==o)for(var c=0;c<l;c++)a.push(s.readUshort(t,n+(c<<1))<<1);if(1==o)for(c=0;c<l;c++)a.push(s.readUint(t,n+(c<<2)));return a},e.maxp={},e.maxp.parse=function(t,n,i){var r=e._bin,s={},a=r.readUint(t,n);return n+=4,s.numGlyphs=r.readUshort(t,n),n+=2,65536==a&&(s.maxPoints=r.readUshort(t,n),n+=2,s.maxContours=r.readUshort(t,n),n+=2,s.maxCompositePoints=r.readUshort(t,n),n+=2,s.maxCompositeContours=r.readUshort(t,n),n+=2,s.maxZones=r.readUshort(t,n),n+=2,s.maxTwilightPoints=r.readUshort(t,n),n+=2,s.maxStorage=r.readUshort(t,n),n+=2,s.maxFunctionDefs=r.readUshort(t,n),n+=2,s.maxInstructionDefs=r.readUshort(t,n),n+=2,s.maxStackElements=r.readUshort(t,n),n+=2,s.maxSizeOfInstructions=r.readUshort(t,n),n+=2,s.maxComponentElements=r.readUshort(t,n),n+=2,s.maxComponentDepth=r.readUshort(t,n),n+=2),s},e.name={},e.name.parse=function(t,n,i){var r=e._bin,s={};r.readUshort(t,n),n+=2;var a=r.readUshort(t,n);n+=2,r.readUshort(t,n);for(var o,l=["copyright","fontFamily","fontSubfamily","ID","fullName","version","postScriptName","trademark","manufacturer","designer","description","urlVendor","urlDesigner","licence","licenceURL","---","typoFamilyName","typoSubfamilyName","compatibleFull","sampleText","postScriptCID","wwsFamilyName","wwsSubfamilyName","lightPalette","darkPalette"],c=n+=2,h=0;h<a;h++){var u=r.readUshort(t,n);n+=2;var d=r.readUshort(t,n);n+=2;var p=r.readUshort(t,n);n+=2;var f=r.readUshort(t,n);n+=2;var m=r.readUshort(t,n);n+=2;var g=r.readUshort(t,n);n+=2;var v,_=l[f],y=c+12*a+g;if(0==u)v=r.readUnicode(t,y,m/2);else if(3==u&&0==d)v=r.readUnicode(t,y,m/2);else if(0==d)v=r.readASCII(t,y,m);else if(1==d)v=r.readUnicode(t,y,m/2);else if(3==d)v=r.readUnicode(t,y,m/2);else{if(1!=u)throw"unknown encoding "+d+", platformID: "+u;v=r.readASCII(t,y,m)}var x="p"+u+","+p.toString(16);null==s[x]&&(s[x]={}),s[x][void 0!==_?_:f]=v,s[x]._lang=p}for(var M in s)if(null!=s[M].postScriptName&&1033==s[M]._lang)return s[M];for(var M in s)if(null!=s[M].postScriptName&&0==s[M]._lang)return s[M];for(var M in s)if(null!=s[M].postScriptName&&3084==s[M]._lang)return s[M];for(var M in s)if(null!=s[M].postScriptName)return s[M];for(var M in s){o=M;break}return s[o]},e["OS/2"]={},e["OS/2"].parse=function(t,n,i){var r=e._bin.readUshort(t,n);n+=2;var s={};if(0==r)e["OS/2"].version0(t,n,s);else if(1==r)e["OS/2"].version1(t,n,s);else if(2==r||3==r||4==r)e["OS/2"].version2(t,n,s);else{if(5!=r)throw"unknown OS/2 table version: "+r;e["OS/2"].version5(t,n,s)}return s},e["OS/2"].version0=function(t,n,i){var r=e._bin;return i.xAvgCharWidth=r.readShort(t,n),n+=2,i.usWeightClass=r.readUshort(t,n),n+=2,i.usWidthClass=r.readUshort(t,n),n+=2,i.fsType=r.readUshort(t,n),n+=2,i.ySubscriptXSize=r.readShort(t,n),n+=2,i.ySubscriptYSize=r.readShort(t,n),n+=2,i.ySubscriptXOffset=r.readShort(t,n),n+=2,i.ySubscriptYOffset=r.readShort(t,n),n+=2,i.ySuperscriptXSize=r.readShort(t,n),n+=2,i.ySuperscriptYSize=r.readShort(t,n),n+=2,i.ySuperscriptXOffset=r.readShort(t,n),n+=2,i.ySuperscriptYOffset=r.readShort(t,n),n+=2,i.yStrikeoutSize=r.readShort(t,n),n+=2,i.yStrikeoutPosition=r.readShort(t,n),n+=2,i.sFamilyClass=r.readShort(t,n),n+=2,i.panose=r.readBytes(t,n,10),n+=10,i.ulUnicodeRange1=r.readUint(t,n),n+=4,i.ulUnicodeRange2=r.readUint(t,n),n+=4,i.ulUnicodeRange3=r.readUint(t,n),n+=4,i.ulUnicodeRange4=r.readUint(t,n),n+=4,i.achVendID=[r.readInt8(t,n),r.readInt8(t,n+1),r.readInt8(t,n+2),r.readInt8(t,n+3)],n+=4,i.fsSelection=r.readUshort(t,n),n+=2,i.usFirstCharIndex=r.readUshort(t,n),n+=2,i.usLastCharIndex=r.readUshort(t,n),n+=2,i.sTypoAscender=r.readShort(t,n),n+=2,i.sTypoDescender=r.readShort(t,n),n+=2,i.sTypoLineGap=r.readShort(t,n),n+=2,i.usWinAscent=r.readUshort(t,n),n+=2,i.usWinDescent=r.readUshort(t,n),n+2},e["OS/2"].version1=function(t,n,i){var r=e._bin;return n=e["OS/2"].version0(t,n,i),i.ulCodePageRange1=r.readUint(t,n),n+=4,i.ulCodePageRange2=r.readUint(t,n),n+4},e["OS/2"].version2=function(t,n,i){var r=e._bin;return n=e["OS/2"].version1(t,n,i),i.sxHeight=r.readShort(t,n),n+=2,i.sCapHeight=r.readShort(t,n),n+=2,i.usDefault=r.readUshort(t,n),n+=2,i.usBreak=r.readUshort(t,n),n+=2,i.usMaxContext=r.readUshort(t,n),n+2},e["OS/2"].version5=function(t,n,i){var r=e._bin;return n=e["OS/2"].version2(t,n,i),i.usLowerOpticalPointSize=r.readUshort(t,n),n+=2,i.usUpperOpticalPointSize=r.readUshort(t,n),n+2},e.post={},e.post.parse=function(t,n,i){var r=e._bin,s={};return s.version=r.readFixed(t,n),n+=4,s.italicAngle=r.readFixed(t,n),n+=4,s.underlinePosition=r.readShort(t,n),n+=2,s.underlineThickness=r.readShort(t,n),n+=2,s},null==e&&(e={}),null==e.U&&(e.U={}),e.U.codeToGlyph=function(t,e){var n=t.cmap,i=-1;if(null!=n.p0e4?i=n.p0e4:null!=n.p3e1?i=n.p3e1:null!=n.p1e0?i=n.p1e0:null!=n.p0e3&&(i=n.p0e3),-1==i)throw"no familiar platform and encoding!";var r=n.tables[i];if(0==r.format)return e>=r.map.length?0:r.map[e];if(4==r.format){for(var s=-1,a=0;a<r.endCount.length;a++)if(e<=r.endCount[a]){s=a;break}return-1==s||r.startCount[s]>e?0:65535&(0!=r.idRangeOffset[s]?r.glyphIdArray[e-r.startCount[s]+(r.idRangeOffset[s]>>1)-(r.idRangeOffset.length-s)]:e+r.idDelta[s])}if(12==r.format){if(e>r.groups[r.groups.length-1][1])return 0;for(a=0;a<r.groups.length;a++){var o=r.groups[a];if(o[0]<=e&&e<=o[1])return o[2]+(e-o[0])}return 0}throw"unknown cmap table format "+r.format},e.U.glyphToPath=function(t,n){var i={cmds:[],crds:[]};if(t.SVG&&t.SVG.entries[n]){var r=t.SVG.entries[n];return null==r?i:("string"==typeof r&&(r=e.SVG.toPath(r),t.SVG.entries[n]=r),r)}if(t.CFF){var s={x:0,y:0,stack:[],nStems:0,haveWidth:!1,width:t.CFF.Private?t.CFF.Private.defaultWidthX:0,open:!1},a=t.CFF,o=t.CFF.Private;if(a.ROS){for(var l=0;a.FDSelect[l+2]<=n;)l+=2;o=a.FDArray[a.FDSelect[l+1]].Private}e.U._drawCFF(t.CFF.CharStrings[n],s,a,o,i)}else t.glyf&&e.U._drawGlyf(n,t,i);return i},e.U._drawGlyf=function(t,n,i){var r=n.glyf[t];null==r&&(r=n.glyf[t]=e.glyf._parseGlyf(n,t)),null!=r&&(r.noc>-1?e.U._simpleGlyph(r,i):e.U._compoGlyph(r,n,i))},e.U._simpleGlyph=function(t,n){for(var i=0;i<t.noc;i++){for(var r=0==i?0:t.endPts[i-1]+1,s=t.endPts[i],a=r;a<=s;a++){var o=a==r?s:a-1,l=a==s?r:a+1,c=1&t.flags[a],h=1&t.flags[o],u=1&t.flags[l],d=t.xs[a],p=t.ys[a];if(a==r)if(c){if(!h){e.U.P.moveTo(n,d,p);continue}e.U.P.moveTo(n,t.xs[o],t.ys[o])}else h?e.U.P.moveTo(n,t.xs[o],t.ys[o]):e.U.P.moveTo(n,(t.xs[o]+d)/2,(t.ys[o]+p)/2);c?h&&e.U.P.lineTo(n,d,p):u?e.U.P.qcurveTo(n,d,p,t.xs[l],t.ys[l]):e.U.P.qcurveTo(n,d,p,(d+t.xs[l])/2,(p+t.ys[l])/2)}e.U.P.closePath(n)}},e.U._compoGlyph=function(t,n,i){for(var r=0;r<t.parts.length;r++){var s={cmds:[],crds:[]},a=t.parts[r];e.U._drawGlyf(a.glyphIndex,n,s);for(var o=a.m,l=0;l<s.crds.length;l+=2){var c=s.crds[l],h=s.crds[l+1];i.crds.push(c*o.a+h*o.b+o.tx),i.crds.push(c*o.c+h*o.d+o.ty)}for(l=0;l<s.cmds.length;l++)i.cmds.push(s.cmds[l])}},e.U._getGlyphClass=function(t,n){var i=e._lctf.getInterval(n,t);return-1==i?0:n[i+2]},e.U.getPairAdjustment=function(t,n,i){var r=!1;if(t.GPOS)for(var s=t.GPOS,a=s.lookupList,o=s.featureList,l=[],c=0;c<o.length;c++){var h=o[c];if("kern"==h.tag){r=!0;for(var u=0;u<h.tab.length;u++)if(!l[h.tab[u]]){l[h.tab[u]]=!0;for(var d=a[h.tab[u]],p=0;p<d.tabs.length;p++)if(null!=d.tabs[p]){var f,m=d.tabs[p];if(!m.coverage||-1!=(f=e._lctf.coverageIndex(m.coverage,n)))if(1==d.ltype);else if(2==d.ltype){var g=null;if(1==m.fmt){var v=m.pairsets[f];for(c=0;c<v.length;c++)v[c].gid2==i&&(g=v[c])}else if(2==m.fmt){var _=e.U._getGlyphClass(n,m.classDef1),y=e.U._getGlyphClass(i,m.classDef2);g=m.matrix[_][y]}if(g){var x=0;return g.val1&&g.val1[2]&&(x+=g.val1[2]),g.val2&&g.val2[0]&&(x+=g.val2[0]),x}}}}}}if(t.kern&&!r){var M=t.kern.glyph1.indexOf(n);if(-1!=M){var S=t.kern.rval[M].glyph2.indexOf(i);if(-1!=S)return t.kern.rval[M].vals[S]}}return 0},e.U._applySubs=function(t,n,i,r){for(var s=t.length-n-1,a=0;a<i.tabs.length;a++)if(null!=i.tabs[a]){var o,l=i.tabs[a];if(!l.coverage||-1!=(o=e._lctf.coverageIndex(l.coverage,t[n])))if(1==i.ltype)t[n],1==l.fmt?t[n]=t[n]+l.delta:t[n]=l.newg[o];else if(4==i.ltype)for(var c=l.vals[o],h=0;h<c.length;h++){var u=c[h],d=u.chain.length;if(!(d>s)){for(var p=!0,f=0,m=0;m<d;m++){for(;-1==t[n+f+(1+m)];)f++;u.chain[m]!=t[n+f+(1+m)]&&(p=!1)}if(p){for(t[n]=u.nglyph,m=0;m<d+f;m++)t[n+m+1]=-1;break}}}else if(5==i.ltype&&2==l.fmt)for(var g=e._lctf.getInterval(l.cDef,t[n]),v=l.cDef[g+2],_=l.scset[v],y=0;y<_.length;y++){var x=_[y],M=x.input;if(!(M.length>s)){for(p=!0,m=0;m<M.length;m++){var S=e._lctf.getInterval(l.cDef,t[n+1+m]);if(-1==g&&l.cDef[S+2]!=M[m]){p=!1;break}}if(p){var b=x.substLookupRecords;for(h=0;h<b.length;h+=2)b[h],b[h+1]}}}else if(6==i.ltype&&3==l.fmt){if(!e.U._glsCovered(t,l.backCvg,n-l.backCvg.length))continue;if(!e.U._glsCovered(t,l.inptCvg,n))continue;if(!e.U._glsCovered(t,l.ahedCvg,n+l.inptCvg.length))continue;var w=l.lookupRec;for(y=0;y<w.length;y+=2){g=w[y];var T=r[w[y+1]];e.U._applySubs(t,n+g,T,r)}}}},e.U._glsCovered=function(t,n,i){for(var r=0;r<n.length;r++)if(-1==e._lctf.coverageIndex(n[r],t[i+r]))return!1;return!0},e.U.glyphsToPath=function(t,n,i){for(var r={cmds:[],crds:[]},s=0,a=0;a<n.length;a++){var o=n[a];if(-1!=o){for(var l=a<n.length-1&&-1!=n[a+1]?n[a+1]:0,c=e.U.glyphToPath(t,o),h=0;h<c.crds.length;h+=2)r.crds.push(c.crds[h]+s),r.crds.push(c.crds[h+1]);for(i&&r.cmds.push(i),h=0;h<c.cmds.length;h++)r.cmds.push(c.cmds[h]);i&&r.cmds.push("X"),s+=t.hmtx.aWidth[o],a<n.length-1&&(s+=e.U.getPairAdjustment(t,o,l))}}return r},e.U.P={},e.U.P.moveTo=function(t,e,n){t.cmds.push("M"),t.crds.push(e,n)},e.U.P.lineTo=function(t,e,n){t.cmds.push("L"),t.crds.push(e,n)},e.U.P.curveTo=function(t,e,n,i,r,s,a){t.cmds.push("C"),t.crds.push(e,n,i,r,s,a)},e.U.P.qcurveTo=function(t,e,n,i,r){t.cmds.push("Q"),t.crds.push(e,n,i,r)},e.U.P.closePath=function(t){t.cmds.push("Z")},e.U._drawCFF=function(t,n,i,r,s){for(var a=n.stack,o=n.nStems,l=n.haveWidth,c=n.width,h=n.open,u=0,d=n.x,p=n.y,f=0,m=0,g=0,v=0,_=0,y=0,x=0,M=0,S=0,b=0,w={val:0,size:0};u<t.length;){e.CFF.getCharString(t,u,w);var T=w.val;if(u+=w.size,"o1"==T||"o18"==T)a.length%2!=0&&!l&&(c=a.shift()+r.nominalWidthX),o+=a.length>>1,a.length=0,l=!0;else if("o3"==T||"o23"==T)a.length%2!=0&&!l&&(c=a.shift()+r.nominalWidthX),o+=a.length>>1,a.length=0,l=!0;else if("o4"==T)a.length>1&&!l&&(c=a.shift()+r.nominalWidthX,l=!0),h&&e.U.P.closePath(s),p+=a.pop(),e.U.P.moveTo(s,d,p),h=!0;else if("o5"==T)for(;a.length>0;)d+=a.shift(),p+=a.shift(),e.U.P.lineTo(s,d,p);else if("o6"==T||"o7"==T)for(var E=a.length,A="o6"==T,C=0;C<E;C++){var R=a.shift();A?d+=R:p+=R,A=!A,e.U.P.lineTo(s,d,p)}else if("o8"==T||"o24"==T){E=a.length;for(var P=0;P+6<=E;)f=d+a.shift(),m=p+a.shift(),g=f+a.shift(),v=m+a.shift(),d=g+a.shift(),p=v+a.shift(),e.U.P.curveTo(s,f,m,g,v,d,p),P+=6;"o24"==T&&(d+=a.shift(),p+=a.shift(),e.U.P.lineTo(s,d,p))}else{if("o11"==T)break;if("o1234"==T||"o1235"==T||"o1236"==T||"o1237"==T)"o1234"==T&&(m=p,g=(f=d+a.shift())+a.shift(),b=v=m+a.shift(),y=v,M=p,d=(x=(_=(S=g+a.shift())+a.shift())+a.shift())+a.shift(),e.U.P.curveTo(s,f,m,g,v,S,b),e.U.P.curveTo(s,_,y,x,M,d,p)),"o1235"==T&&(f=d+a.shift(),m=p+a.shift(),g=f+a.shift(),v=m+a.shift(),S=g+a.shift(),b=v+a.shift(),_=S+a.shift(),y=b+a.shift(),x=_+a.shift(),M=y+a.shift(),d=x+a.shift(),p=M+a.shift(),a.shift(),e.U.P.curveTo(s,f,m,g,v,S,b),e.U.P.curveTo(s,_,y,x,M,d,p)),"o1236"==T&&(f=d+a.shift(),m=p+a.shift(),g=f+a.shift(),b=v=m+a.shift(),y=v,x=(_=(S=g+a.shift())+a.shift())+a.shift(),M=y+a.shift(),d=x+a.shift(),e.U.P.curveTo(s,f,m,g,v,S,b),e.U.P.curveTo(s,_,y,x,M,d,p)),"o1237"==T&&(f=d+a.shift(),m=p+a.shift(),g=f+a.shift(),v=m+a.shift(),S=g+a.shift(),b=v+a.shift(),_=S+a.shift(),y=b+a.shift(),x=_+a.shift(),M=y+a.shift(),Math.abs(x-d)>Math.abs(M-p)?d=x+a.shift():p=M+a.shift(),e.U.P.curveTo(s,f,m,g,v,S,b),e.U.P.curveTo(s,_,y,x,M,d,p));else if("o14"==T){if(a.length>0&&!l&&(c=a.shift()+i.nominalWidthX,l=!0),4==a.length){var U=a.shift(),L=a.shift(),I=a.shift(),D=a.shift(),O=e.CFF.glyphBySE(i,I),N=e.CFF.glyphBySE(i,D);e.U._drawCFF(i.CharStrings[O],n,i,r,s),n.x=U,n.y=L,e.U._drawCFF(i.CharStrings[N],n,i,r,s)}h&&(e.U.P.closePath(s),h=!1)}else if("o19"==T||"o20"==T)a.length%2!=0&&!l&&(c=a.shift()+r.nominalWidthX),o+=a.length>>1,a.length=0,l=!0,u+=o+7>>3;else if("o21"==T)a.length>2&&!l&&(c=a.shift()+r.nominalWidthX,l=!0),p+=a.pop(),d+=a.pop(),h&&e.U.P.closePath(s),e.U.P.moveTo(s,d,p),h=!0;else if("o22"==T)a.length>1&&!l&&(c=a.shift()+r.nominalWidthX,l=!0),d+=a.pop(),h&&e.U.P.closePath(s),e.U.P.moveTo(s,d,p),h=!0;else if("o25"==T){for(;a.length>6;)d+=a.shift(),p+=a.shift(),e.U.P.lineTo(s,d,p);f=d+a.shift(),m=p+a.shift(),g=f+a.shift(),v=m+a.shift(),d=g+a.shift(),p=v+a.shift(),e.U.P.curveTo(s,f,m,g,v,d,p)}else if("o26"==T)for(a.length%2&&(d+=a.shift());a.length>0;)f=d,m=p+a.shift(),d=g=f+a.shift(),p=(v=m+a.shift())+a.shift(),e.U.P.curveTo(s,f,m,g,v,d,p);else if("o27"==T)for(a.length%2&&(p+=a.shift());a.length>0;)m=p,g=(f=d+a.shift())+a.shift(),v=m+a.shift(),d=g+a.shift(),p=v,e.U.P.curveTo(s,f,m,g,v,d,p);else if("o10"==T||"o29"==T){var F="o10"==T?r:i;if(0==a.length);else{var B=a.pop(),z=F.Subrs[B+F.Bias];n.x=d,n.y=p,n.nStems=o,n.haveWidth=l,n.width=c,n.open=h,e.U._drawCFF(z,n,i,r,s),d=n.x,p=n.y,o=n.nStems,l=n.haveWidth,c=n.width,h=n.open}}else if("o30"==T||"o31"==T){var k=a.length,G=(P=0,"o31"==T);for(P+=k-(E=-3&k);P<E;)G?(m=p,g=(f=d+a.shift())+a.shift(),p=(v=m+a.shift())+a.shift(),E-P==5?(d=g+a.shift(),P++):d=g,G=!1):(f=d,m=p+a.shift(),g=f+a.shift(),v=m+a.shift(),d=g+a.shift(),E-P==5?(p=v+a.shift(),P++):p=v,G=!0),e.U.P.curveTo(s,f,m,g,v,d,p),P+=4}else{if("o"==(T+"").charAt(0))throw T;a.push(T)}}}n.x=d,n.y=p,n.nStems=o,n.haveWidth=l,n.width=c,n.open=h};var n=e,i={Typr:n};return t.Typr=n,t.default=i,Object.defineProperty(t,"__esModule",{value:!0}),t}({}).Typr
/*!
Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate
(https://github.com/101arrowz/fflate) for use in Troika text rendering. 
Original licenses apply: 
- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)
- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)
*/},function(){return function(t){var e=Uint8Array,n=Uint16Array,i=Uint32Array,r=new e([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),s=new e([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new e([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),o=function(t,e){for(var r=new n(31),s=0;s<31;++s)r[s]=e+=1<<t[s-1];var a=new i(r[30]);for(s=1;s<30;++s)for(var o=r[s];o<r[s+1];++o)a[o]=o-r[s]<<5|s;return[r,a]},l=o(r,2),c=l[0],h=l[1];c[28]=258,h[258]=28;for(var u=o(s,0)[0],d=new n(32768),p=0;p<32768;++p){var f=(43690&p)>>>1|(21845&p)<<1;f=(61680&(f=(52428&f)>>>2|(13107&f)<<2))>>>4|(3855&f)<<4,d[p]=((65280&f)>>>8|(255&f)<<8)>>>1}var m=function(t,e,i){for(var r=t.length,s=0,a=new n(e);s<r;++s)++a[t[s]-1];var o,l=new n(e);for(s=0;s<e;++s)l[s]=l[s-1]+a[s-1]<<1;if(i){o=new n(1<<e);var c=15-e;for(s=0;s<r;++s)if(t[s])for(var h=s<<4|t[s],u=e-t[s],p=l[t[s]-1]++<<u,f=p|(1<<u)-1;p<=f;++p)o[d[p]>>>c]=h}else for(o=new n(r),s=0;s<r;++s)t[s]&&(o[s]=d[l[t[s]-1]++]>>>15-t[s]);return o},g=new e(288);for(p=0;p<144;++p)g[p]=8;for(p=144;p<256;++p)g[p]=9;for(p=256;p<280;++p)g[p]=7;for(p=280;p<288;++p)g[p]=8;var v=new e(32);for(p=0;p<32;++p)v[p]=5;var _=m(g,9,1),y=m(v,5,1),x=function(t){for(var e=t[0],n=1;n<t.length;++n)t[n]>e&&(e=t[n]);return e},M=function(t,e,n){var i=e/8|0;return(t[i]|t[i+1]<<8)>>(7&e)&n},S=function(t,e){var n=e/8|0;return(t[n]|t[n+1]<<8|t[n+2]<<16)>>(7&e)},b=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],w=function(t,e,n){var i=new Error(e||b[t]);if(i.code=t,Error.captureStackTrace&&Error.captureStackTrace(i,w),!n)throw i;return i},T=new e(0),E="undefined"!=typeof TextDecoder&&new TextDecoder;try{E.decode(T,{stream:!0})}catch(A){}return t.convert_streams=function(t){var o=new DataView(t),l=0;function h(){var t=o.getUint16(l);return l+=2,t}function d(){var t=o.getUint32(l);return l+=4,t}function p(t){L.setUint16(I,t),I+=2}function f(t){L.setUint32(I,t),I+=4}for(var g={signature:d(),flavor:d(),length:d(),numTables:h(),reserved:h(),totalSfntSize:d(),majorVersion:h(),minorVersion:h(),metaOffset:d(),metaLength:d(),metaOrigLength:d(),privOffset:d(),privLength:d()},v=0;Math.pow(2,v)<=g.numTables;)v++;v--;for(var b=16*Math.pow(2,v),T=16*g.numTables-b,E=12,A=[],C=0;C<g.numTables;C++)A.push({tag:d(),offset:d(),compLength:d(),origLength:d(),origChecksum:d()}),E+=16;var R,P=new Uint8Array(12+16*A.length+A.reduce((function(t,e){return t+e.origLength+4}),0)),U=P.buffer,L=new DataView(U),I=0;return f(g.flavor),p(g.numTables),p(b),p(v),p(T),A.forEach((function(t){f(t.tag),f(t.origChecksum),f(E),f(t.origLength),t.outOffset=E,(E+=t.origLength)%4!=0&&(E+=4-E%4)})),A.forEach((function(o){var l=t.slice(o.offset,o.offset+o.compLength);if(o.compLength!=o.origLength){var h=new Uint8Array(o.origLength);(function(t,o,l){var h=t.length;if(!h||l&&!l.l&&h<5)return o||new e(0);var d=!o||l,p=!l||l.i;l||(l={}),o||(o=new e(3*h));var f,g=function(t){var n=o.length;if(t>n){var i=new e(Math.max(2*n,t));i.set(o),o=i}},v=l.f||0,b=l.p||0,T=l.b||0,E=l.l,A=l.d,C=l.m,R=l.n,P=8*h;do{if(!E){l.f=v=M(t,b,1);var U=M(t,b+1,3);if(b+=3,!U){var L=t[(H=((f=b)/8|0)+(7&f&&1)+4)-4]|t[H-3]<<8,I=H+L;if(I>h){p&&w(0);break}d&&g(T+L),o.set(t.subarray(H,I),T),l.b=T+=L,l.p=b=8*I;continue}if(1==U)E=_,A=y,C=9,R=5;else if(2==U){var D=M(t,b,31)+257,O=M(t,b+10,15)+4,N=D+M(t,b+5,31)+1;b+=14;for(var F=new e(N),B=new e(19),z=0;z<O;++z)B[a[z]]=M(t,b+3*z,7);b+=3*O;var k=x(B),G=(1<<k)-1,V=m(B,k,1);for(z=0;z<N;){var H,W=V[M(t,b,G)];if(b+=15&W,(H=W>>>4)<16)F[z++]=H;else{var j=0,X=0;for(16==H?(X=3+M(t,b,3),b+=2,j=F[z-1]):17==H?(X=3+M(t,b,7),b+=3):18==H&&(X=11+M(t,b,127),b+=7);X--;)F[z++]=j}}var q=F.subarray(0,D),Y=F.subarray(D);C=x(q),R=x(Y),E=m(q,C,1),A=m(Y,R,1)}else w(1);if(b>P){p&&w(0);break}}d&&g(T+131072);for(var Z=(1<<C)-1,J=(1<<R)-1,K=b;;K=b){var $=(j=E[S(t,b)&Z])>>>4;if((b+=15&j)>P){p&&w(0);break}if(j||w(2),$<256)o[T++]=$;else{if(256==$){K=b,E=null;break}var Q=$-254;if($>264){var tt=r[z=$-257];Q=M(t,b,(1<<tt)-1)+c[z],b+=tt}var et=A[S(t,b)&J],nt=et>>>4;if(et||w(3),b+=15&et,Y=u[nt],nt>3&&(tt=s[nt],Y+=S(t,b)&(1<<tt)-1,b+=tt),b>P){p&&w(0);break}d&&g(T+131072);for(var it=T+Q;T<it;T+=4)o[T]=o[T-Y],o[T+1]=o[T+1-Y],o[T+2]=o[T+2-Y],o[T+3]=o[T+3-Y];T=it}}l.l=E,l.p=K,l.b=T,E&&(v=1,l.m=C,l.d=A,l.n=R)}while(!v);T==o.length||function(t,r,s){(null==r||r<0)&&(r=0),(null==s||s>t.length)&&(s=t.length);var a=new(t instanceof n?n:t instanceof i?i:e)(s-r);a.set(t.subarray(r,s))}(o,0,T)})(new Uint8Array(l,2),h)}else h=new Uint8Array(l);P.set(h,o.outOffset);var d=0;(E=o.outOffset+o.origLength)%4!=0&&(d=4-E%4),P.set(new Uint8Array(d).buffer,o.outOffset+o.origLength),R=E+d})),U.slice(0,R)},Object.defineProperty(t,"__esModule",{value:!0}),t}({}).convert_streams},function(t,e){const n={M:2,L:2,Q:4,C:6,Z:0},i={C:"18g,ca,368,1kz",D:"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v",R:"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6",L:"x9u,jff,a,fd,jv",T:"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n"},r=1,s=2,a=4,o=8,l=16,c=32;let h;function u(t){if(!h){const t={R:s,L:r,D:a,C:l,U:c,T:o};h=new Map;for(let e in i){let n=0;i[e].split(",").forEach((i=>{let[r,s]=i.split("+");r=parseInt(r,36),s=s?parseInt(s,36):0,h.set(n+=r,t[e]);for(let a=s;a--;)h.set(++n,t[e])}))}}return h.get(t)||c}const d=1,p=2,f=3,m=4,g=[null,"isol","init","fina","medi"];function v(t){const e=new Uint8Array(t.length);let n=c,i=d,h=-1;for(let g=0;g<t.length;g++){const v=t.codePointAt(g);let _=0|u(v),y=d;_&o||(n&(r|a|l)?_&(s|a|l)?(y=f,i!==d&&i!==f||e[h]++):_&(r|c)&&(i!==p&&i!==m||e[h]--):n&(s|c)&&(i!==p&&i!==m||e[h]--),i=e[g]=y,n=_,h=g,v>65535&&g++)}return e}function _(...t){for(let e=0;e<t.length;e++)if("number"==typeof t[e])return t[e]}function y(e){const i=Object.create(null),r=e["OS/2"],s=e.hhea,a=e.head.unitsPerEm,o=_(r&&r.sTypoAscender,s&&s.ascender,a),l={unitsPerEm:a,ascender:o,descender:_(r&&r.sTypoDescender,s&&s.descender,0),capHeight:_(r&&r.sCapHeight,o),xHeight:_(r&&r.sxHeight,o),lineGap:_(r&&r.sTypoLineGap,s&&s.lineGap),forEachGlyph(r,s,a,o){let c=0;const h=1/l.unitsPerEm*s,u=function(e,n){const i=[];for(let s=0;s<n.length;s++){const r=n.codePointAt(s);r>65535&&s++,i.push(t.U.codeToGlyph(e,r))}const r=e.GSUB;if(r){const{lookupList:e,featureList:s}=r;let a;const o=/^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws)$/,l=[];s.forEach((r=>{if(o.test(r.tag))for(let s=0;s<r.tab.length;s++){if(l[r.tab[s]])continue;l[r.tab[s]]=!0;const o=e[r.tab[s]],c=/^(isol|init|fina|medi)$/.test(r.tag);c&&!a&&(a=v(n));for(let n=0;n<i.length;n++)a&&c&&g[a[n]]!==r.tag||t.U._applySubs(i,n,o,e)}}))}return i}(e,r);let d=0,p=-1;return u.forEach(((l,u)=>{if(-1!==l){let r=i[l];if(!r){const{cmds:s,crds:a}=t.U.glyphToPath(e,l);let o,c,h,u,d="",p=0;for(let t=0,e=s.length;t<e;t++){const e=n[s[t]];d+=s[t];for(let t=1;t<=e;t++)d+=(t>1?",":"")+a[p++]}if(a.length){o=c=1/0,h=u=-1/0;for(let t=0,e=a.length;t<e;t+=2){let e=a[t],n=a[t+1];e<o&&(o=e),n<c&&(c=n),e>h&&(h=e),n>u&&(u=n)}}else o=h=c=u=0;r=i[l]={index:l,advanceWidth:e.hmtx.aWidth[l],xMin:o,yMin:c,xMax:h,yMax:u,path:d,pathCommandCount:s.length}}-1!==p&&(c+=t.U.getPairAdjustment(e,p,l)*h),o.call(null,r,c,d),r.advanceWidth&&(c+=r.advanceWidth*h),a&&(c+=a*s),p=l}d+=r.codePointAt(d)>65535?2:1})),c}};return l}return function(n){const i=new Uint8Array(n,0,4),r=t._bin.readASCII(i,0,4);if("wOFF"===r)n=e(n);else if("wOF2"===r)throw new Error("woff2 fonts not supported");return y(t.parse(n)[0])}}],init:(t,e,n)=>n(t(),e())}),xg={defaultFontURL:"https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxM.woff",sdfGlyphSize:64,sdfMargin:1/16,sdfExponent:9,textureWidth:2048},Mg=new bi;function Sg(){return(self.performance||Date).now()}const bg=Object.create(null);function wg(t,e){t=function(t,e){for(let n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}({},t);const n=Sg();if(t.font=function(t){Eg||(Eg="undefined"==typeof document?{}:document.createElement("a"));return Eg.href=t,Eg.href}(t.font||xg.defaultFontURL),t.text=""+t.text,t.sdfGlyphSize=t.sdfGlyphSize||xg.sdfGlyphSize,null!=t.colorRanges){let e={};for(let n in t.colorRanges)if(t.colorRanges.hasOwnProperty(n)){let i=t.colorRanges[n];"number"!=typeof i&&(i=Mg.set(i).getHex()),e[n]=i}t.colorRanges=e}Object.freeze(t);const{textureWidth:i,sdfExponent:r}=xg,{sdfGlyphSize:s}=t,a=i/s*4;let o=bg[s];if(!o){const t=document.createElement("canvas");t.width=i,t.height=256*s/a,o=bg[s]={glyphCount:0,sdfGlyphSize:s,sdfCanvas:t,sdfTexture:new Je(t,void 0,void 0,void 0,$,$),contextLost:!1,glyphsByFont:new Map},o.sdfTexture.generateMipmaps=!1,function(t){const e=t.sdfCanvas;e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),t.contextLost=!0})),e.addEventListener("webglcontextrestored",(e=>{t.contextLost=!1;const n=[];t.glyphsByFont.forEach((e=>{e.forEach((e=>{n.push(Tg(e,t,!0))}))})),Promise.all(n).then((()=>{Ag(t),t.sdfTexture.needsUpdate=!0}))}))}(o)}const{sdfTexture:l,sdfCanvas:c}=o;let h=o.glyphsByFont.get(t.font);h||o.glyphsByFont.set(t.font,h=new Map),Rg(t).then((u=>{const{glyphIds:d,glyphPositions:p,fontSize:f,unitsPerEm:m,timings:g}=u,v=[],_=new Float32Array(4*d.length),y=f/m;let x=0,M=0;const S=Sg();d.forEach(((t,e)=>{let n=h.get(t);if(!n){const{path:e,pathBounds:i}=u.glyphData[t],r=Math.max(i[2]-i[0],i[3]-i[1])/s*(xg.sdfMargin*s+.5),a=o.glyphCount++,l=[i[0]-r,i[1]-r,i[2]+r,i[3]+r];h.set(t,n={path:e,atlasIndex:a,sdfViewBox:l}),v.push(n)}const{sdfViewBox:i}=n,r=p[M++],a=p[M++];_[x++]=r+i[0]*y,_[x++]=a+i[1]*y,_[x++]=r+i[2]*y,_[x++]=a+i[3]*y,d[e]=n.atlasIndex})),g.quads=(g.quads||0)+(Sg()-S);const b=Sg();g.sdf={};const w=c.height,T=Math.ceil(o.glyphCount/a),E=Math.pow(2,Math.ceil(Math.log2(T*s)));E>w&&(_g(c,i,E),l.dispose()),Promise.all(v.map((e=>Tg(e,o,t.gpuAccelerateSDF).then((({timing:t})=>{g.sdf[e.atlasIndex]=t}))))).then((()=>{v.length&&!o.contextLost&&(Ag(o),l.needsUpdate=!0),g.sdfTotal=Sg()-b,g.total=Sg()-n,e(Object.freeze({parameters:t,sdfTexture:l,sdfGlyphSize:s,sdfExponent:r,glyphBounds:_,glyphAtlasIndices:d,glyphColors:u.glyphColors,caretPositions:u.caretPositions,caretHeight:u.caretHeight,chunkedBounds:u.chunkedBounds,ascender:u.ascender,descender:u.descender,lineHeight:u.lineHeight,capHeight:u.capHeight,xHeight:u.xHeight,topBaseline:u.topBaseline,blockBounds:u.blockBounds,visibleBounds:u.visibleBounds,timings:u.timings}))}))})),Promise.resolve().then((()=>{var t;o.contextLost||(t=c)._warm||(og.webgl.isSupported(t),t._warm=!0)}))}function Tg({path:t,atlasIndex:e,sdfViewBox:n},{sdfGlyphSize:i,sdfCanvas:r,contextLost:s},a){if(s)return Promise.resolve({timing:-1});const{textureWidth:o,sdfExponent:l}=xg,c=Math.max(n[2]-n[0],n[3]-n[1]),h=Math.floor(e/4);return function(t,e,n,i,r,s,a,o,l,c,h=!0){return h?dg(t,e,n,i,r,s,a,o,l,c).then(null,(h=>(lg||(lg=!0),vg(t,e,n,i,r,s,a,o,l,c)))):vg(t,e,n,i,r,s,a,o,l,c)}(i,i,t,n,c,l,r,h%(o/i)*i,Math.floor(h/(o/i))*i,e%4,a)}let Eg;function Ag(t){if("function"!=typeof createImageBitmap){const{sdfCanvas:e,sdfTexture:n}=t,{width:i,height:r}=e,s=t.sdfCanvas.getContext("webgl");let a=n.image.data;a&&a.length===i*r*4||(a=new Uint8Array(i*r*4),n.image={width:i,height:r,data:a},n.flipY=!1,n.isDataTexture=!0),s.readPixels(0,0,i,r,s.RGBA,s.UNSIGNED_BYTE,a)}}const Cg=M({name:"Typesetter",dependencies:[xg,yg,function(t,e,n){const{defaultFontURL:i}=n,r=Object.create(null),s=1/0,a=/[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/,o="[^\\S\\u00A0]",l=new RegExp(`${o}|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]`);function c(e,n){e||(e=i);let s=r[e];s?s.pending?s.pending.push(n):n(s):(r[e]={pending:[n]},function(e,n){!function r(){const s=t=>{e!==i&&(e=i,r())};try{const i=new XMLHttpRequest;i.open("get",e,!0),i.responseType="arraybuffer",i.onload=function(){if(i.status>=400)s(new Error(i.statusText));else if(i.status>0)try{const e=t(i.response);n(e)}catch(e){s()}},i.onerror=s,i.send()}catch(a){s()}}()}(e,(t=>{let n=r[e].pending;r[e]=t,n.forEach((e=>e(t)))})))}function h({text:t="",font:n=i,sdfGlyphSize:r=64,fontSize:h=1,letterSpacing:m=0,lineHeight:g="normal",maxWidth:v=s,direction:_,textAlign:y="left",textIndent:x=0,whiteSpace:M="normal",overflowWrap:S="normal",anchorX:b=0,anchorY:w=0,includeCaretPositions:T=!1,chunkedBoundsSize:E=8192,colorRanges:A=null},C,R=!1){const P=p(),U={fontLoad:0,typesetting:0};t.indexOf("\r")>-1&&(t=t.replace(/\r\n/g,"\n").replace(/\r/g,"\n")),h=+h,m=+m,v=+v,g=g||"normal",x=+x,c(n,(n=>{const i=isFinite(v);let r=null,c=null,L=null,I=null,D=null,O=null,N=null,F=0,B=0,z="nowrap"!==M;const{ascender:k,descender:G,unitsPerEm:V,lineGap:H,capHeight:W,xHeight:j}=n;U.fontLoad=p()-P;const X=p(),q=h/V;"normal"===g&&(g=(k-G+H)/V);const Y=((g*=h)-(k-G)*q)/2,Z=-(k*q+Y),J=Math.min(g,(k-G)*q),K=(k+G)/2*q-J/2;let $=x,Q=new f;const tt=[Q];n.forEachGlyph(t,h,m,((e,n,r)=>{const s=t.charAt(r),c=e.advanceWidth*q,u=Q.count;let d;if("isEmpty"in e||(e.isWhitespace=!!s&&new RegExp(o).test(s),e.canBreakAfter=!!s&&l.test(s),e.isEmpty=e.xMin===e.xMax||e.yMin===e.yMax||a.test(s)),e.isWhitespace||e.isEmpty||B++,z&&i&&!e.isWhitespace&&n+c+$>v&&u){if(Q.glyphAt(u-1).glyphObj.canBreakAfter)d=new f,$=-n;else for(let t=u;t--;){if(0===t&&"break-word"===S){d=new f,$=-n;break}if(Q.glyphAt(t).glyphObj.canBreakAfter){d=Q.splitAt(t+1);const e=d.glyphAt(0).x;$-=e;for(let t=d.count;t--;)d.glyphAt(t).x-=e;break}}d&&(Q.isSoftWrapped=!0,Q=d,tt.push(Q),F=v)}let p=Q.glyphAt(Q.count);p.glyphObj=e,p.x=n+$,p.width=c,p.charIndex=r,"\n"===s&&(Q=new f,tt.push(Q),$=-(n+c+m*h)+x)})),tt.forEach((t=>{for(let e=t.count;e--;){let{glyphObj:n,x:i,width:r}=t.glyphAt(e);if(!n.isWhitespace)return t.width=i+r,void(t.width>F&&(F=t.width))}}));let et=0,nt=0;if(b&&("number"==typeof b?et=-b:"string"==typeof b&&(et=-F*("left"===b?0:"center"===b?.5:"right"===b?1:u(b)))),w)if("number"==typeof w)nt=-w;else if("string"==typeof w){let t=tt.length*g;nt="top"===w?0:"top-baseline"===w?-Z:"top-cap"===w?-Z-W*q:"top-ex"===w?-Z-j*q:"middle"===w?t/2:"bottom"===w?t:"bottom-baseline"===w?t-Y+G*q:u(w)*t}if(!R){const i=e.getEmbeddingLevels(t,_);r=new Uint16Array(B),c=new Float32Array(2*B),L={},O=[s,s,-s,-s],N=[];let a=Z;T&&(D=new Float32Array(3*t.length)),A&&(I=new Uint8Array(3*B));let o,l,h=0,u=-1,p=-1;if(tt.forEach(((f,m)=>{let{count:v,width:_}=f;if(v>0){let m=0;for(let t=v;t--&&f.glyphAt(t).glyphObj.isWhitespace;)m++;let g=0,x=0;if("center"===y)g=(F-_)/2;else if("right"===y)g=F-_;else if("justify"===y&&f.isSoftWrapped){let t=0;for(let e=v-m;e--;)f.glyphAt(e).glyphObj.isWhitespace&&t++;x=(F-_)/t}if(x||g){let t=0;for(let e=0;e<v;e++){let n=f.glyphAt(e);const i=n.glyphObj;n.x+=g+t,0!==x&&i.isWhitespace&&e<v-m&&(t+=x,n.width+=x)}}const M=e.getReorderSegments(t,i,f.glyphAt(0).charIndex,f.glyphAt(f.count-1).charIndex);for(let t=0;t<M.length;t++){const[e,n]=M[t];let i=1/0,r=-1/0;for(let t=0;t<v;t++)if(f.glyphAt(t).charIndex>=e){let e=t,s=t;for(;s<v;s++){let t=f.glyphAt(s);if(t.charIndex>n)break;s<v-m&&(i=Math.min(i,t.x),r=Math.max(r,t.x+t.width))}for(let t=e;t<s;t++){const e=f.glyphAt(t);e.x=r-(e.x+e.width-i)}break}}let S;const b=t=>S=t;for(let _=0;_<v;_++){let m=f.glyphAt(_);S=m.glyphObj;const g=S.index,v=1&i.levels[m.charIndex];if(v){const i=e.getMirroredCharacter(t[m.charIndex]);i&&n.forEachGlyph(i,0,0,b)}if(T){const{charIndex:t}=m,e=m.x+et,n=m.x+m.width+et;D[3*t]=v?n:e,D[3*t+1]=v?e:n,D[3*t+2]=a+K+nt;const i=t-u;i>1&&d(D,u,i),u=t}if(A){const{charIndex:t}=m;for(;t>p;)p++,A.hasOwnProperty(p)&&(l=A[p])}if(!S.isWhitespace&&!S.isEmpty){const t=h++;L[g]||(L[g]={path:S.path,pathBounds:[S.xMin,S.yMin,S.xMax,S.yMax]});const e=m.x+et,n=a+nt;c[2*t]=e,c[2*t+1]=n;const i=e+S.xMin*q,u=n+S.yMin*q,d=e+S.xMax*q,p=n+S.yMax*q;i<O[0]&&(O[0]=i),u<O[1]&&(O[1]=u),d>O[2]&&(O[2]=d),p>O[3]&&(O[3]=p),t%E==0&&(o={start:t,end:t,rect:[s,s,-s,-s]},N.push(o)),o.end++;const f=o.rect;if(i<f[0]&&(f[0]=i),u<f[1]&&(f[1]=u),d>f[2]&&(f[2]=d),p>f[3]&&(f[3]=p),r[t]=g,A){const e=3*t;I[e]=l>>16&255,I[e+1]=l>>8&255,I[e+2]=255&l}}}}a-=g})),D){const e=t.length-u;e>1&&d(D,u,e)}}U.typesetting=p()-X,C({glyphIds:r,glyphPositions:c,glyphData:L,caretPositions:D,caretHeight:J,glyphColors:I,chunkedBounds:N,fontSize:h,unitsPerEm:V,ascender:k*q,descender:G*q,capHeight:W*q,xHeight:j*q,lineHeight:g,topBaseline:Z,blockBounds:[et,nt-tt.length*g,et+F,nt],visibleBounds:O,timings:U})}))}function u(t){let e=t.match(/^([\d.]+)%$/),n=e?parseFloat(e[1]):NaN;return isNaN(n)?0:n/100}function d(t,e,n){const i=t[3*e],r=t[3*e+1],s=t[3*e+2],a=(r-i)/n;for(let o=0;o<n;o++){const n=3*(e+o);t[n]=i+a*o,t[n+1]=i+a*(o+1),t[n+2]=s}}function p(){return(self.performance||Date).now()}function f(){this.data=[]}const m=["glyphObj","x","width","charIndex"];return f.prototype={width:0,isSoftWrapped:!1,get count(){return Math.ceil(this.data.length/m.length)},glyphAt(t){let e=f.flyweight;return e.data=this.data,e.index=t,e},splitAt(t){let e=new f;return e.data=this.data.splice(t*m.length),e}},f.flyweight=m.reduce(((t,e,n,i)=>(Object.defineProperty(t,e,{get(){return this.data[this.index*m.length+n]},set(t){this.data[this.index*m.length+n]=t}}),t)),{data:null,index:0}),{typeset:h,measure:function(t,e){h(t,(t=>{const[n,i,r,s]=t.blockBounds;e({width:r-n,height:s-i})}),{metricsOnly:!0})},loadFont:c}},b],init(t,e,n,i){const{defaultFontURL:r}=t;return n(e,i(),{defaultFontURL:r})}}),Rg=M({name:"Typesetter",dependencies:[Cg],init:t=>function(e){return new Promise((n=>{t.typeset(e,n)}))},getTransferables(t){const e=[t.glyphPositions.buffer,t.glyphIds.buffer];return t.caretPositions&&e.push(t.caretPositions.buffer),t.glyphColors&&e.push(t.glyphColors.buffer),e}}),Pg={};const Ug="aTroikaGlyphIndex";class Lg extends ru{constructor(){super(),this.detail=1,this.curveRadius=0,this.groups=[{start:0,count:1/0,materialIndex:0},{start:0,count:1/0,materialIndex:1}],this.boundingSphere=new wn,this.boundingBox=new an}computeBoundingSphere(){}computeBoundingBox(){}setSide(t){const e=this.getIndex().count;this.setDrawRange(t===R?e/2:0,2===t?e:e/2)}set detail(t){if(t!==this._detail){this._detail=t,("number"!=typeof t||t<1)&&(t=1);let e=function(t){let e=Pg[t];if(!e){const n=new Ur(1,1,t,t),i=n.clone(),r=n.attributes,s=i.attributes,a=new Wi,o=r.uv.count;for(let t=0;t<o;t++)s.position.array[3*t]*=-1,s.normal.array[3*t+2]*=-1;["position","normal","uv"].forEach((t=>{a.setAttribute(t,new Ni([...r[t].array,...s[t].array],r[t].itemSize))})),a.setIndex([...n.index.array,...i.index.array.map((t=>t+o))]),a.translate(.5,.5,0),e=Pg[t]=a}return e}(t);["position","normal","uv"].forEach((t=>{this.attributes[t]=e.attributes[t].clone()})),this.setIndex(e.getIndex().clone())}}get detail(){return this._detail}set curveRadius(t){t!==this._curveRadius&&(this._curveRadius=t,this._updateBounds())}get curveRadius(){return this._curveRadius}updateGlyphs(t,e,n,i,r){Ig(this,"aTroikaGlyphBounds",t,4),Ig(this,Ug,e,1),Ig(this,"aTroikaGlyphColor",r,3),this._blockBounds=n,this._chunkedBounds=i,this.instanceCount=e.length,this._updateBounds()}_updateBounds(){const t=this._blockBounds;if(t){const{curveRadius:e,boundingBox:n}=this;if(e){const{PI:i,floor:r,min:s,max:a,sin:o,cos:l}=Math,c=i/2,h=2*i,u=Math.abs(e),d=t[0]/u,p=t[2]/u,f=r((d+c)/h)!==r((p+c)/h)?-u:s(o(d)*u,o(p)*u),m=r((d-c)/h)!==r((p-c)/h)?u:a(o(d)*u,o(p)*u),g=r((d+i)/h)!==r((p+i)/h)?2*u:a(u-l(d)*u,u-l(p)*u);n.min.set(f,t[1],e<0?-g:0),n.max.set(m,t[3],e<0?0:g)}else n.min.set(t[0],t[1],0),n.max.set(t[2],t[3],0);n.getBoundingSphere(this.boundingSphere)}}applyClipRect(t){let e=this.getAttribute(Ug).count,n=this._chunkedBounds;if(n)for(let i=n.length;i--;){e=n[i].end;let r=n[i].rect;if(r[1]<t.w&&r[3]>t.y&&r[0]<t.z&&r[2]>t.x)break}this.instanceCount=e}}function Ig(t,e,n,i){const r=t.getAttribute(e);n?r&&r.array.length===n.length?(r.array.set(n),r.needsUpdate=!0):(t.setAttribute(e,new Ko(n,i)),delete t._maxInstanceCount,t.dispose()):r&&t.deleteAttribute(e)}const Dg=new Ti({color:16777215,side:2,transparent:!0}),Og=8421504,Ng=new In,Fg=new nn,Bg=new nn,zg=[],kg=new nn,Gg="+x+y";function Vg(t){return Array.isArray(t)?t[0]:t}let Hg=()=>{const t=new lr(new Ur(1,1),Dg);return Hg=()=>t,t},Wg=()=>{const t=new lr(new Ur(1,1,32,1),Dg);return Wg=()=>t,t};const jg={type:"syncstart"},Xg={type:"synccomplete"},qg=["font","fontSize","letterSpacing","lineHeight","maxWidth","overflowWrap","text","direction","textAlign","textIndent","whiteSpace","anchorX","anchorY","colorRanges","sdfGlyphSize"],Yg=qg.concat("material","color","depthOffset","clipRect","curveRadius","orientation","glyphGeometryDetail");let Zg=class extends lr{constructor(){super(new Lg,null),this.text="",this.anchorX=0,this.anchorY=0,this.curveRadius=0,this.direction="auto",this.font=null,this.fontSize=.1,this.letterSpacing=0,this.lineHeight="normal",this.maxWidth=1/0,this.overflowWrap="normal",this.textAlign="left",this.textIndent=0,this.whiteSpace="normal",this.material=null,this.color=null,this.colorRanges=null,this.outlineWidth=0,this.outlineColor=0,this.outlineOpacity=1,this.outlineBlur=0,this.outlineOffsetX=0,this.outlineOffsetY=0,this.strokeWidth=0,this.strokeColor=Og,this.strokeOpacity=1,this.fillOpacity=1,this.depthOffset=0,this.clipRect=null,this.orientation=Gg,this.glyphGeometryDetail=1,this.sdfGlyphSize=null,this.gpuAccelerateSDF=!0,this.debugSDF=!1}sync(t){this._needsSync&&(this._needsSync=!1,this._isSyncing?(this._queuedSyncs||(this._queuedSyncs=[])).push(t):(this._isSyncing=!0,this.dispatchEvent(jg),wg({text:this.text,font:this.font,fontSize:this.fontSize||.1,letterSpacing:this.letterSpacing||0,lineHeight:this.lineHeight||"normal",maxWidth:this.maxWidth,direction:this.direction||"auto",textAlign:this.textAlign,textIndent:this.textIndent,whiteSpace:this.whiteSpace,overflowWrap:this.overflowWrap,anchorX:this.anchorX,anchorY:this.anchorY,colorRanges:this.colorRanges,includeCaretPositions:!0,sdfGlyphSize:this.sdfGlyphSize,gpuAccelerateSDF:this.gpuAccelerateSDF},(e=>{this._isSyncing=!1,this._textRenderInfo=e,this.geometry.updateGlyphs(e.glyphBounds,e.glyphAtlasIndices,e.blockBounds,e.chunkedBounds,e.glyphColors);const n=this._queuedSyncs;n&&(this._queuedSyncs=null,this._needsSync=!0,this.sync((()=>{n.forEach((t=>t&&t()))}))),this.dispatchEvent(Xg),t&&t()}))))}onBeforeRender(t,e,n,i,r,s){this.sync(),r.isTroikaTextMaterial&&this._prepareForRender(r),r._hadOwnSide=r.hasOwnProperty("side"),this.geometry.setSide(r._actualSide=r.side),r.side=C}onAfterRender(t,e,n,i,r,s){r._hadOwnSide?r.side=r._actualSide:delete r.side}dispose(){this.geometry.dispose()}get textRenderInfo(){return this._textRenderInfo||null}get material(){let t=this._derivedMaterial;const e=this._baseMaterial||this._defaultMaterial||(this._defaultMaterial=Dg.clone());if(t&&t.baseMaterial===e||(t=this._derivedMaterial=function(t){const e=eg(t,{chained:!0,extensions:{derivatives:!0},uniforms:{uTroikaSDFTexture:{value:null},uTroikaSDFTextureSize:{value:new Ce},uTroikaSDFGlyphSize:{value:0},uTroikaSDFExponent:{value:0},uTroikaTotalBounds:{value:new Ke(0,0,0,0)},uTroikaClipRect:{value:new Ke(0,0,0,0)},uTroikaDistanceOffset:{value:0},uTroikaOutlineOpacity:{value:0},uTroikaFillOpacity:{value:1},uTroikaPositionOffset:{value:new Ce},uTroikaCurveRadius:{value:0},uTroikaBlurRadius:{value:0},uTroikaStrokeWidth:{value:0},uTroikaStrokeColor:{value:new bi},uTroikaStrokeOpacity:{value:1},uTroikaOrient:{value:new Re},uTroikaUseGlyphColors:{value:!0},uTroikaSDFDebug:{value:!1}},vertexDefs:"\nuniform vec2 uTroikaSDFTextureSize;\nuniform float uTroikaSDFGlyphSize;\nuniform vec4 uTroikaTotalBounds;\nuniform vec4 uTroikaClipRect;\nuniform mat3 uTroikaOrient;\nuniform bool uTroikaUseGlyphColors;\nuniform float uTroikaDistanceOffset;\nuniform float uTroikaBlurRadius;\nuniform vec2 uTroikaPositionOffset;\nuniform float uTroikaCurveRadius;\nattribute vec4 aTroikaGlyphBounds;\nattribute float aTroikaGlyphIndex;\nattribute vec3 aTroikaGlyphColor;\nvarying vec2 vTroikaGlyphUV;\nvarying vec4 vTroikaTextureUVBounds;\nvarying float vTroikaTextureChannel;\nvarying vec3 vTroikaGlyphColor;\nvarying vec2 vTroikaGlyphDimensions;\n",vertexTransform:"\nvec4 bounds = aTroikaGlyphBounds;\nbounds.xz += uTroikaPositionOffset.x;\nbounds.yw -= uTroikaPositionOffset.y;\n\nvec4 outlineBounds = vec4(\n  bounds.xy - uTroikaDistanceOffset - uTroikaBlurRadius,\n  bounds.zw + uTroikaDistanceOffset + uTroikaBlurRadius\n);\nvec4 clippedBounds = vec4(\n  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),\n  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)\n);\n\nvec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);\n\nposition.xy = mix(bounds.xy, bounds.zw, clippedXY);\n\nuv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);\n\nfloat rad = uTroikaCurveRadius;\nif (rad != 0.0) {\n  float angle = position.x / rad;\n  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);\n  normal.xz = vec2(sin(angle), cos(angle));\n}\n  \nposition = uTroikaOrient * position;\nnormal = uTroikaOrient * normal;\n\nvTroikaGlyphUV = clippedXY.xy;\nvTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);\n\n\nfloat txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;\nvec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;\nvec2 txStartUV = txUvPerSquare * vec2(\n  mod(floor(aTroikaGlyphIndex / 4.0), txCols),\n  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)\n);\nvTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);\nvTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);\n",fragmentDefs:"\nuniform sampler2D uTroikaSDFTexture;\nuniform vec2 uTroikaSDFTextureSize;\nuniform float uTroikaSDFGlyphSize;\nuniform float uTroikaSDFExponent;\nuniform float uTroikaDistanceOffset;\nuniform float uTroikaFillOpacity;\nuniform float uTroikaOutlineOpacity;\nuniform float uTroikaBlurRadius;\nuniform vec3 uTroikaStrokeColor;\nuniform float uTroikaStrokeWidth;\nuniform float uTroikaStrokeOpacity;\nuniform bool uTroikaSDFDebug;\nvarying vec2 vTroikaGlyphUV;\nvarying vec4 vTroikaTextureUVBounds;\nvarying float vTroikaTextureChannel;\nvarying vec2 vTroikaGlyphDimensions;\n\nfloat troikaSdfValueToSignedDistance(float alpha) {\n  // Inverse of exponential encoding in webgl-sdf-generator\n  \n  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);\n  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;\n  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);\n  return signedDist;\n}\n\nfloat troikaGlyphUvToSdfValue(vec2 glyphUV) {\n  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);\n  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);\n  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1\n  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;\n}\n\nfloat troikaGlyphUvToDistance(vec2 uv) {\n  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));\n}\n\nfloat troikaGetAADist() {\n  \n  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300\n  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;\n  #else\n  return vTroikaGlyphDimensions.x / 64.0;\n  #endif\n}\n\nfloat troikaGetFragDistValue() {\n  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);\n  float distance = troikaGlyphUvToDistance(clampedGlyphUV);\n \n  // Extrapolate distance when outside bounds:\n  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : \n    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);\n\n  \n\n  return distance;\n}\n\nfloat troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {\n  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)\n  float alpha = step(-distanceOffset, -distance);\n  #else\n\n  float alpha = smoothstep(\n    distanceOffset + aaDist,\n    distanceOffset - aaDist,\n    distance\n  );\n  #endif\n\n  return alpha;\n}\n",fragmentColorTransform:"\nfloat aaDist = troikaGetAADist();\nfloat fragDistance = troikaGetFragDistValue();\nfloat edgeAlpha = uTroikaSDFDebug ?\n  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :\n  troikaGetEdgeAlpha(fragDistance, uTroikaDistanceOffset, max(aaDist, uTroikaBlurRadius));\n\n#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)\nvec4 fillRGBA = gl_FragColor;\nfillRGBA.a *= uTroikaFillOpacity;\nvec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);\nif (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;\ngl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(\n  -uTroikaStrokeWidth - aaDist,\n  -uTroikaStrokeWidth + aaDist,\n  fragDistance\n));\ngl_FragColor.a *= edgeAlpha;\n#endif\n\nif (edgeAlpha == 0.0) {\n  discard;\n}\n",customRewriter({vertexShader:t,fragmentShader:e}){let n=/\buniform\s+vec3\s+diffuse\b/;return n.test(e)&&(e=e.replace(n,"varying vec3 vTroikaGlyphColor").replace(/\bdiffuse\b/g,"vTroikaGlyphColor"),n.test(t)||(t=t.replace(qm,"uniform vec3 diffuse;\n$&\nvTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;\n"))),{vertexShader:t,fragmentShader:e}}});return e.transparent=!0,Object.defineProperties(e,{isTroikaTextMaterial:{value:!0},shadowSide:{get(){return this.side},set(){}}}),e}(e),e.addEventListener("dispose",(function n(){e.removeEventListener("dispose",n),t.dispose()}))),this.outlineWidth||this.outlineBlur||this.outlineOffsetX||this.outlineOffsetY){let e=t._outlineMtl;return e||(e=t._outlineMtl=Object.create(t,{id:{value:t.id+.1}}),e.isTextOutlineMaterial=!0,e.depthWrite=!1,e.map=null,t.addEventListener("dispose",(function n(){t.removeEventListener("dispose",n),e.dispose()}))),[e,t]}return t}set material(t){t&&t.isTroikaTextMaterial?(this._derivedMaterial=t,this._baseMaterial=t.baseMaterial):this._baseMaterial=t}get glyphGeometryDetail(){return this.geometry.detail}set glyphGeometryDetail(t){this.geometry.detail=t}get curveRadius(){return this.geometry.curveRadius}set curveRadius(t){this.geometry.curveRadius=t}get customDepthMaterial(){return Vg(this.material).getDepthMaterial()}get customDistanceMaterial(){return Vg(this.material).getDistanceMaterial()}_prepareForRender(t){const e=t.isTextOutlineMaterial,n=t.uniforms,i=this.textRenderInfo;if(i){const{sdfTexture:t,blockBounds:r}=i;n.uTroikaSDFTexture.value=t,n.uTroikaSDFTextureSize.value.set(t.image.width,t.image.height),n.uTroikaSDFGlyphSize.value=i.sdfGlyphSize,n.uTroikaSDFExponent.value=i.sdfExponent,n.uTroikaTotalBounds.value.fromArray(r),n.uTroikaUseGlyphColors.value=!e&&!!i.glyphColors;let s,a,o,l=0,c=0,h=0,u=0,d=0;if(e){let{outlineWidth:t,outlineOffsetX:e,outlineOffsetY:n,outlineBlur:i,outlineOpacity:r}=this;l=this._parsePercent(t)||0,c=Math.max(0,this._parsePercent(i)||0),s=r,u=this._parsePercent(e)||0,d=this._parsePercent(n)||0}else h=Math.max(0,this._parsePercent(this.strokeWidth)||0),h&&(o=this.strokeColor,n.uTroikaStrokeColor.value.set(null==o?Og:o),a=this.strokeOpacity,null==a&&(a=1)),s=this.fillOpacity;n.uTroikaDistanceOffset.value=l,n.uTroikaPositionOffset.value.set(u,d),n.uTroikaBlurRadius.value=c,n.uTroikaStrokeWidth.value=h,n.uTroikaStrokeOpacity.value=a,n.uTroikaFillOpacity.value=null==s?1:s,n.uTroikaCurveRadius.value=this.curveRadius||0;let p=this.clipRect;if(p&&Array.isArray(p)&&4===p.length)n.uTroikaClipRect.value.fromArray(p);else{const t=100*(this.fontSize||.1);n.uTroikaClipRect.value.set(r[0]-t,r[1]-t,r[2]+t,r[3]+t)}this.geometry.applyClipRect(n.uTroikaClipRect.value)}n.uTroikaSDFDebug.value=!!this.debugSDF,t.polygonOffset=!!this.depthOffset,t.polygonOffsetFactor=t.polygonOffsetUnits=this.depthOffset||0;const r=e?this.outlineColor||0:this.color;if(null==r)delete t.color;else{const e=t.hasOwnProperty("color")?t.color:t.color=new bi;r===e._input&&"object"!=typeof r||e.set(e._input=r)}let s=this.orientation||Gg;if(s!==t._orientation){let e=n.uTroikaOrient.value;s=s.replace(/[^-+xyz]/g,"");let i=s!==Gg&&s.match(/^([-+])([xyz])([-+])([xyz])$/);if(i){let[,t,n,r,s]=i;Fg.set(0,0,0)[n]="-"===t?1:-1,Bg.set(0,0,0)[s]="-"===r?-1:1,Ng.lookAt(kg,Fg.cross(Bg),Bg),e.setFromMatrix4(Ng)}else e.identity();t._orientation=s}}_parsePercent(t){if("string"==typeof t){let e=t.match(/^(-?[\d.]+)%$/),n=e?parseFloat(e[1]):NaN;t=(isNaN(n)?0:n/100)*this.fontSize}return t}localPositionToTextCoords(t,e=new Ce){e.copy(t);const n=this.curveRadius;return n&&(e.x=Math.atan2(t.x,Math.abs(n)-Math.abs(t.z))*Math.abs(n)),e}worldPositionToTextCoords(t,e=new Ce){return Fg.copy(t),this.localPositionToTextCoords(this.worldToLocal(Fg),e)}raycast(t,e){const{textRenderInfo:n,curveRadius:i}=this;if(n){const r=n.blockBounds,s=i?Wg():Hg(),a=s.geometry,{position:o,uv:l}=a.attributes;for(let t=0;t<l.count;t++){let e=r[0]+l.getX(t)*(r[2]-r[0]);const n=r[1]+l.getY(t)*(r[3]-r[1]);let s=0;i&&(s=i-Math.cos(e/i)*i,e=Math.sin(e/i)*i),o.setXYZ(t,e,n,s)}a.boundingSphere=this.geometry.boundingSphere,a.boundingBox=this.geometry.boundingBox,s.matrixWorld=this.matrixWorld,s.material.side=this.material.side,zg.length=0,s.raycast(t,zg);for(let t=0;t<zg.length;t++)zg[t].object=this,e.push(zg[t])}}copy(t){const e=this.geometry;return super.copy(t),this.geometry=e,Yg.forEach((e=>{this[e]=t[e]})),this}clone(){return(new this.constructor).copy(this)}};qg.forEach((t=>{const e="_private_"+t;Object.defineProperty(Zg.prototype,t,{get(){return this[e]},set(t){t!==this[e]&&(this[e]=t,this._needsSync=!0)}})}));const Jg=t.forwardRef((({sdfGlyphSize:e=64,anchorX:n="center",anchorY:r="middle",font:s,fontSize:a=1,children:o,characters:l,onSync:h,...u},d)=>{const p=lp((({invalidate:t})=>t)),[f]=t.useState((()=>new Zg)),[m,g]=t.useMemo((()=>{const e=[];let n="";return t.Children.forEach(o,(t=>{"string"==typeof t||"number"==typeof t?n+=t:e.push(t)})),[e,n]}),[o]);return i((()=>new Promise((t=>function({font:t,characters:e,sdfGlyphSize:n},i){wg({font:t,sdfGlyphSize:n,text:Array.isArray(e)?e.join("\n"):""+e},i)}({font:s,characters:l},t)))),["troika-text",s,l]),t.useLayoutEffect((()=>{f.sync((()=>{p(),h&&h(f)}))})),t.useEffect((()=>()=>f.dispose()),[f]),t.createElement("primitive",c({object:f,ref:d,font:s,text:g,anchorX:n,anchorY:r,fontSize:a,sdfGlyphSize:e},u),m)}));let Kg=null;async function $g(t){Kg||(Kg=new Gm);let e="string"==typeof t?await(await fetch(t)).json():t;return Kg.parse(e)}function Qg(t){return i($g,[t])}Qg.preload=t=>r($g,[t]),Qg.clear=t=>s([t]);const tv=["string","number"],ev=t.forwardRef((({font:e,letterSpacing:n=0,lineHeight:i=1,size:r=1,height:s=.2,bevelThickness:a=.1,bevelSize:o=.01,bevelEnabled:l=!1,bevelOffset:h=0,bevelSegments:u=4,curveSegments:d=8,smooth:p,children:f,...m},g)=>{t.useMemo((()=>yd({RenamedTextGeometry:Bm})),[]);const v=t.useRef(null),_=Qg(e),y=t.useMemo((()=>({font:_,size:r,height:s,bevelThickness:a,bevelSize:o,bevelEnabled:l,bevelSegments:u,bevelOffset:h,curveSegments:d,letterSpacing:n,lineHeight:i})),[_,r,s,a,o,l,u,h,d,n,i]),[x,...M]=t.useMemo((()=>(e=>{let n="";const i=[];return t.Children.forEach(e,(t=>{tv.includes(typeof t)?n+=t+"":i.push(t)})),[n,...i]})(f)),[f]),S=t.useMemo((()=>[x,y]),[x,y]);return t.useLayoutEffect((()=>{p&&(v.current.geometry=function(t,e=1e-4){e=Math.max(e,Number.EPSILON);const n={},i=t.getIndex(),r=t.getAttribute("position"),s=i?i.count:r.count;let a=0;const o=Object.keys(t.attributes),l={},c={},h=[],u=["getX","getY","getZ","getW"];for(let m=0,g=o.length;m<g;m++){const e=o[m];l[e]=[];const n=t.morphAttributes[e];n&&(c[e]=new Array(n.length).fill(0).map((()=>[])))}const d=Math.log10(1/e),p=Math.pow(10,d);for(let m=0;m<s;m++){const e=i?i.getX(m):m;let r="";for(let n=0,i=o.length;n<i;n++){const i=o[n],s=t.getAttribute(i),a=s.itemSize;for(let t=0;t<a;t++)r+=~~(s[u[t]](e)*p)+","}if(r in n)h.push(n[r]);else{for(let n=0,i=o.length;n<i;n++){const i=o[n],r=t.getAttribute(i),s=t.morphAttributes[i],a=r.itemSize,h=l[i],d=c[i];for(let t=0;t<a;t++){const n=u[t];if(h.push(r[n](e)),s)for(let t=0,i=s.length;t<i;t++)d[t].push(s[t][n](e))}}n[r]=a,h.push(a),a++}}const f=t.clone();for(let m=0,g=o.length;m<g;m++){const e=o[m],n=t.getAttribute(e),i=new n.array.constructor(l[e]),r=new Ii(i,n.itemSize,n.normalized);if(f.setAttribute(e,r),e in c)for(let s=0;s<c[e].length;s++){const n=t.morphAttributes[e][s],i=new n.array.constructor(c[e][s]),r=new Ii(i,n.itemSize,n.normalized);f.morphAttributes[e][s]=r}}return f.setIndex(h),f}(v.current.geometry,p),v.current.geometry.computeVertexNormals())}),[S,p]),t.useImperativeHandle(g,(()=>v.current),[]),t.createElement("mesh",c({},m,{ref:v}),t.createElement("renamedTextGeometry",{args:S}),M)}));function nv(t,e,n,i){const r=class extends mr{constructor(r={}){const s=Object.entries(t);super({uniforms:s.reduce(((t,[e,n])=>({...t,...fr.clone({[e]:{value:n}})})),{}),vertexShader:e,fragmentShader:n}),this.key="",s.forEach((([t])=>Object.defineProperty(this,t,{get:()=>this.uniforms[t].value,set:e=>this.uniforms[t].value=e}))),Object.assign(this,r),i&&i(this)}};return r.key=Ae.generateUUID(),r}const iv=t=>t===Object(t)&&!Array.isArray(t)&&"function"!=typeof t;function rv(e,n){const i=lp((t=>t.gl)),r=dp(Nh,iv(e)?Object.values(e):e);if(t.useLayoutEffect((()=>{null==n||n(r)}),[n]),t.useEffect((()=>{(Array.isArray(r)?r:[r]).forEach(i.initTexture)}),[i,r]),iv(e)){const t=Object.keys(e),n={};return t.forEach((e=>Object.assign(n,{[e]:r[t.indexOf(e)]}))),n}return r}rv.preload=t=>dp.preload(Nh,t),rv.clear=t=>dp.clear(Nh,t);const sv=nv({color:new bi("white"),scale:[1,1],imageBounds:[1,1],map:null,zoom:1,grayscale:0,opacity:1},"\n  varying vec2 vUv;\n  void main() {\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n    vUv = uv;\n  }\n","\n  // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\n  varying vec2 vUv;\n  uniform vec2 scale;\n  uniform vec2 imageBounds;\n  uniform vec3 color;\n  uniform sampler2D map;\n  uniform float zoom;\n  uniform float grayscale;\n  uniform float opacity;\n  const vec3 luma = vec3(.299, 0.587, 0.114);\n  vec4 toGrayscale(vec4 color, float intensity) {\n    return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);\n  }\n  vec2 aspect(vec2 size) {\n    return size / min(size.x, size.y);\n  }\n  void main() {\n    vec2 s = aspect(scale);\n    vec2 i = aspect(imageBounds);\n    float rs = s.x / s.y;\n    float ri = i.x / i.y;\n    vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\n    vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\n    vec2 uv = vUv * s / new + offset;\n    vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\n    gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity), grayscale);\n    \n    #include <tonemapping_fragment>\n    #include <encodings_fragment>\n  }\n"),av=t.forwardRef((({children:e,color:n,segments:i=1,scale:r=1,zoom:s=1,grayscale:a=0,opacity:o=1,texture:l,toneMapped:h,transparent:u,...d},p)=>{yd({ImageMaterial:sv});const f=Array.isArray(r)?[r[0],r[1]]:[r,r],m=[l.image.width,l.image.height];return t.createElement("mesh",c({ref:p,scale:Array.isArray(r)?[...r,1]:r},d),t.createElement("planeGeometry",{args:[1,1,i,i]}),t.createElement("imageMaterial",{color:n,map:l,zoom:s,grayscale:a,opacity:o,scale:f,imageBounds:m,toneMapped:h,transparent:u}),e)})),ov=t.forwardRef((({url:e,...n},i)=>{const r=rv(e);return t.createElement(av,c({},n,{texture:r,ref:i}))})),lv=t.forwardRef((({url:e,...n},i)=>t.createElement(av,c({},n,{ref:i})))),cv=t.forwardRef(((e,n)=>{if(e.url)return t.createElement(ov,c({},e,{ref:n}));if(e.texture)return t.createElement(lv,c({},e,{ref:n}));throw new Error("<Image /> requires a url or texture")}));function hv(e,n,i){const r=lp((t=>t.size)),s=lp((t=>t.viewport)),a="number"==typeof e?e:r.width*s.dpr,o="number"==typeof n?n:r.height*s.dpr,l=("number"==typeof e?i:e)||{},{samples:c=0,depth:h,...u}=l,d=t.useMemo((()=>{const t=new $e(a,o,{minFilter:$,magFilter:$,type:at,...u});return h&&(t.depthTexture=new io(a,o,st)),t.samples=c,t}),[]);return t.useLayoutEffect((()=>{d.setSize(a,o),c&&(d.samples=c)}),[c,d,a,o]),t.useEffect((()=>()=>d.dispose()),[]),d}const uv=t.forwardRef((({envMap:e,resolution:n=256,frames:i=1/0,children:r,makeDefault:s,...a},o)=>{const l=lp((({set:t})=>t)),h=lp((({camera:t})=>t)),u=lp((({size:t})=>t)),d=t.useRef(null),p=t.useRef(null),f=hv(n);t.useLayoutEffect((()=>{a.manual||d.current.updateProjectionMatrix()}),[u,a]),t.useLayoutEffect((()=>{d.current.updateProjectionMatrix()})),t.useLayoutEffect((()=>{if(s){const t=h;return l((()=>({camera:d.current}))),()=>l((()=>({camera:t})))}}),[d,s,l]);let m=0,g=null;const v="function"==typeof r;return cp((t=>{v&&(i===1/0||m<i)&&(p.current.visible=!1,t.gl.setRenderTarget(f),g=t.scene.background,e&&(t.scene.background=e),t.gl.render(t.scene,d.current),t.scene.background=g,t.gl.setRenderTarget(null),p.current.visible=!0,m++)})),t.createElement(t.Fragment,null,t.createElement("orthographicCamera",c({left:u.width/-2,right:u.width/2,top:u.height/2,bottom:u.height/-2,ref:_([d,o])},a),!v&&r),t.createElement("group",{ref:p},v&&r(f.texture)))})),dv=t.forwardRef((function({children:e,disable:n,disableX:i,disableY:r,disableZ:s,left:a,right:o,top:l,bottom:h,front:u,back:d,onCentered:p,precise:f=!0,cacheKey:m=0,...g},v){const _=t.useRef(null),y=t.useRef(null),x=t.useRef(null);return t.useLayoutEffect((()=>{y.current.matrixWorld.identity();const t=(new an).setFromObject(x.current,f),e=new nn,c=new wn,m=t.max.x-t.min.x,g=t.max.y-t.min.y,v=t.max.z-t.min.z;t.getCenter(e),t.getBoundingSphere(c);const M=l?g/2:h?-g/2:0,S=a?-m/2:o?m/2:0,b=u?v/2:d?-v/2:0;y.current.position.set(n||i?0:-e.x+S,n||r?0:-e.y+M,n||s?0:-e.z+b),void 0!==p&&p({parent:_.current.parent,container:_.current,width:m,height:g,depth:v,boundingBox:t,boundingSphere:c,center:e,verticalAlignment:M,horizontalAlignment:S,depthAlignment:b})}),[m,p,l,a,u,n,i,r,s,f,o,h,d]),t.useImperativeHandle(v,(()=>_.current),[]),t.createElement("group",c({ref:_},g),t.createElement("group",{ref:y},t.createElement("group",{ref:x},e)))}));class pv extends mr{constructor(t=new Ce){super({uniforms:{inputBuffer:new Ou(null),depthBuffer:new Ou(null),resolution:new Ou(new Ce),texelSize:new Ou(new Ce),halfTexelSize:new Ou(new Ce),kernel:new Ou(0),scale:new Ou(1),cameraNear:new Ou(0),cameraFar:new Ou(1),minDepthThreshold:new Ou(0),maxDepthThreshold:new Ou(1),depthScale:new Ou(0),depthToBlurRatioBias:new Ou(.25)},fragmentShader:"#include <common>\n        #include <dithering_pars_fragment>      \n        uniform sampler2D inputBuffer;\n        uniform sampler2D depthBuffer;\n        uniform float cameraNear;\n        uniform float cameraFar;\n        uniform float minDepthThreshold;\n        uniform float maxDepthThreshold;\n        uniform float depthScale;\n        uniform float depthToBlurRatioBias;\n        varying vec2 vUv;\n        varying vec2 vUv0;\n        varying vec2 vUv1;\n        varying vec2 vUv2;\n        varying vec2 vUv3;\n\n        void main() {\n          float depthFactor = 0.0;\n          \n          #ifdef USE_DEPTH\n            vec4 depth = texture2D(depthBuffer, vUv);\n            depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));\n            depthFactor *= depthScale;\n            depthFactor = max(0.0, min(1.0, depthFactor + 0.25));\n          #endif\n          \n          vec4 sum = texture2D(inputBuffer, mix(vUv0, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv1, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv2, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv3, vUv, depthFactor));\n          gl_FragColor = sum * 0.25 ;\n\n          #include <dithering_fragment>\n          #include <tonemapping_fragment>\n          #include <encodings_fragment>\n        }",vertexShader:"uniform vec2 texelSize;\n        uniform vec2 halfTexelSize;\n        uniform float kernel;\n        uniform float scale;\n        varying vec2 vUv;\n        varying vec2 vUv0;\n        varying vec2 vUv1;\n        varying vec2 vUv2;\n        varying vec2 vUv3;\n\n        void main() {\n          vec2 uv = position.xy * 0.5 + 0.5;\n          vUv = uv;\n\n          vec2 dUv = (texelSize * vec2(kernel) + halfTexelSize) * scale;\n          vUv0 = vec2(uv.x - dUv.x, uv.y + dUv.y);\n          vUv1 = vec2(uv.x + dUv.x, uv.y + dUv.y);\n          vUv2 = vec2(uv.x + dUv.x, uv.y - dUv.y);\n          vUv3 = vec2(uv.x - dUv.x, uv.y - dUv.y);\n\n          gl_Position = vec4(position.xy, 1.0, 1.0);\n        }",blending:0,depthWrite:!1,depthTest:!1}),this.toneMapped=!1,this.setTexelSize(t.x,t.y),this.kernel=new Float32Array([0,1,2,2,3])}setTexelSize(t,e){this.uniforms.texelSize.value.set(t,e),this.uniforms.halfTexelSize.value.set(t,e).multiplyScalar(.5)}setResolution(t){this.uniforms.resolution.value.copy(t)}}class fv{constructor({gl:t,resolution:e,width:n=500,height:i=500,minDepthThreshold:r=0,maxDepthThreshold:s=1,depthScale:a=0,depthToBlurRatioBias:o=.25}){this.renderToScreen=!1,this.renderTargetA=new $e(e,e,{minFilter:$,magFilter:$,stencilBuffer:!1,depthBuffer:!1,type:at}),this.renderTargetB=this.renderTargetA.clone(),this.convolutionMaterial=new pv,this.convolutionMaterial.setTexelSize(1/n,1/i),this.convolutionMaterial.setResolution(new Ce(n,i)),this.scene=new po,this.camera=new gr,this.convolutionMaterial.uniforms.minDepthThreshold.value=r,this.convolutionMaterial.uniforms.maxDepthThreshold.value=s,this.convolutionMaterial.uniforms.depthScale.value=a,this.convolutionMaterial.uniforms.depthToBlurRatioBias.value=o,this.convolutionMaterial.defines.USE_DEPTH=a>0;const l=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),c=new Float32Array([0,0,2,0,0,2]),h=new Wi;h.setAttribute("position",new Ii(l,3)),h.setAttribute("uv",new Ii(c,2)),this.screen=new lr(h,this.convolutionMaterial),this.screen.frustumCulled=!1,this.scene.add(this.screen)}render(t,e,n){const i=this.scene,r=this.camera,s=this.renderTargetA,a=this.renderTargetB;let o=this.convolutionMaterial,l=o.uniforms;l.depthBuffer.value=e.depthTexture;const c=o.kernel;let h,u,d,p=e;for(u=0,d=c.length-1;u<d;++u)h=0==(1&u)?s:a,l.kernel.value=c[u],l.inputBuffer.value=p.texture,t.setRenderTarget(h),t.render(i,r),p=h;l.kernel.value=c[u],l.inputBuffer.value=p.texture,t.setRenderTarget(this.renderToScreen?null:n),t.render(i,r)}}yd({MeshReflectorMaterialImpl:class extends Kc{constructor(t={}){super(t),this._tDepth={value:null},this._distortionMap={value:null},this._tDiffuse={value:null},this._tDiffuseBlur={value:null},this._textureMatrix={value:null},this._hasBlur={value:!1},this._mirror={value:0},this._mixBlur={value:0},this._blurStrength={value:.5},this._minDepthThreshold={value:.9},this._maxDepthThreshold={value:1},this._depthScale={value:0},this._depthToBlurRatioBias={value:.25},this._distortion={value:1},this._mixContrast={value:1},this.setValues(t)}onBeforeCompile(t){var e;null!=(e=t.defines)&&e.USE_UV||(t.defines.USE_UV=""),t.uniforms.hasBlur=this._hasBlur,t.uniforms.tDiffuse=this._tDiffuse,t.uniforms.tDepth=this._tDepth,t.uniforms.distortionMap=this._distortionMap,t.uniforms.tDiffuseBlur=this._tDiffuseBlur,t.uniforms.textureMatrix=this._textureMatrix,t.uniforms.mirror=this._mirror,t.uniforms.mixBlur=this._mixBlur,t.uniforms.mixStrength=this._blurStrength,t.uniforms.minDepthThreshold=this._minDepthThreshold,t.uniforms.maxDepthThreshold=this._maxDepthThreshold,t.uniforms.depthScale=this._depthScale,t.uniforms.depthToBlurRatioBias=this._depthToBlurRatioBias,t.uniforms.distortion=this._distortion,t.uniforms.mixContrast=this._mixContrast,t.vertexShader=`\n        uniform mat4 textureMatrix;\n        varying vec4 my_vUv;\n      ${t.vertexShader}`,t.vertexShader=t.vertexShader.replace("#include <project_vertex>","#include <project_vertex>\n        my_vUv = textureMatrix * vec4( position, 1.0 );\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );"),t.fragmentShader=`\n        uniform sampler2D tDiffuse;\n        uniform sampler2D tDiffuseBlur;\n        uniform sampler2D tDepth;\n        uniform sampler2D distortionMap;\n        uniform float distortion;\n        uniform float cameraNear;\n\t\t\t  uniform float cameraFar;\n        uniform bool hasBlur;\n        uniform float mixBlur;\n        uniform float mirror;\n        uniform float mixStrength;\n        uniform float minDepthThreshold;\n        uniform float maxDepthThreshold;\n        uniform float mixContrast;\n        uniform float depthScale;\n        uniform float depthToBlurRatioBias;\n        varying vec4 my_vUv;\n        ${t.fragmentShader}`,t.fragmentShader=t.fragmentShader.replace("#include <emissivemap_fragment>","#include <emissivemap_fragment>\n\n      float distortionFactor = 0.0;\n      #ifdef USE_DISTORTION\n        distortionFactor = texture2D(distortionMap, vUv).r * distortion;\n      #endif\n\n      vec4 new_vUv = my_vUv;\n      new_vUv.x += distortionFactor;\n      new_vUv.y += distortionFactor;\n\n      vec4 base = texture2DProj(tDiffuse, new_vUv);\n      vec4 blur = texture2DProj(tDiffuseBlur, new_vUv);\n\n      vec4 merge = base;\n\n      #ifdef USE_NORMALMAP\n        vec2 normal_uv = vec2(0.0);\n        vec4 normalColor = texture2D(normalMap, vUv * normalScale);\n        vec3 my_normal = normalize( vec3( normalColor.r * 2.0 - 1.0, normalColor.b,  normalColor.g * 2.0 - 1.0 ) );\n        vec3 coord = new_vUv.xyz / new_vUv.w;\n        normal_uv = coord.xy + coord.z * my_normal.xz * 0.05;\n        vec4 base_normal = texture2D(tDiffuse, normal_uv);\n        vec4 blur_normal = texture2D(tDiffuseBlur, normal_uv);\n        merge = base_normal;\n        blur = blur_normal;\n      #endif\n\n      float depthFactor = 0.0001;\n      float blurFactor = 0.0;\n\n      #ifdef USE_DEPTH\n        vec4 depth = texture2DProj(tDepth, new_vUv);\n        depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));\n        depthFactor *= depthScale;\n        depthFactor = max(0.0001, min(1.0, depthFactor));\n\n        #ifdef USE_BLUR\n          blur = blur * min(1.0, depthFactor + depthToBlurRatioBias);\n          merge = merge * min(1.0, depthFactor + 0.5);\n        #else\n          merge = merge * depthFactor;\n        #endif\n\n      #endif\n\n      float reflectorRoughnessFactor = roughness;\n      #ifdef USE_ROUGHNESSMAP\n        vec4 reflectorTexelRoughness = texture2D( roughnessMap, vUv );\n        reflectorRoughnessFactor *= reflectorTexelRoughness.g;\n      #endif\n\n      #ifdef USE_BLUR\n        blurFactor = min(1.0, mixBlur * reflectorRoughnessFactor);\n        merge = mix(merge, blur, blurFactor);\n      #endif\n\n      vec4 newMerge = vec4(0.0, 0.0, 0.0, 1.0);\n      newMerge.r = (merge.r - 0.5) * mixContrast + 0.5;\n      newMerge.g = (merge.g - 0.5) * mixContrast + 0.5;\n      newMerge.b = (merge.b - 0.5) * mixContrast + 0.5;\n\n      diffuseColor.rgb = diffuseColor.rgb * ((1.0 - min(1.0, mirror)) + newMerge.rgb * mixStrength);\n      ")}get tDiffuse(){return this._tDiffuse.value}set tDiffuse(t){this._tDiffuse.value=t}get tDepth(){return this._tDepth.value}set tDepth(t){this._tDepth.value=t}get distortionMap(){return this._distortionMap.value}set distortionMap(t){this._distortionMap.value=t}get tDiffuseBlur(){return this._tDiffuseBlur.value}set tDiffuseBlur(t){this._tDiffuseBlur.value=t}get textureMatrix(){return this._textureMatrix.value}set textureMatrix(t){this._textureMatrix.value=t}get hasBlur(){return this._hasBlur.value}set hasBlur(t){this._hasBlur.value=t}get mirror(){return this._mirror.value}set mirror(t){this._mirror.value=t}get mixBlur(){return this._mixBlur.value}set mixBlur(t){this._mixBlur.value=t}get mixStrength(){return this._blurStrength.value}set mixStrength(t){this._blurStrength.value=t}get minDepthThreshold(){return this._minDepthThreshold.value}set minDepthThreshold(t){this._minDepthThreshold.value=t}get maxDepthThreshold(){return this._maxDepthThreshold.value}set maxDepthThreshold(t){this._maxDepthThreshold.value=t}get depthScale(){return this._depthScale.value}set depthScale(t){this._depthScale.value=t}get depthToBlurRatioBias(){return this._depthToBlurRatioBias.value}set depthToBlurRatioBias(t){this._depthToBlurRatioBias.value=t}get distortion(){return this._distortion.value}set distortion(t){this._distortion.value=t}get mixContrast(){return this._mixContrast.value}set mixContrast(t){this._mixContrast.value=t}}});const mv=t.forwardRef((({mixBlur:e=0,mixStrength:n=1,resolution:i=256,blur:r=[0,0],minDepthThreshold:s=.9,maxDepthThreshold:a=1,depthScale:o=0,depthToBlurRatioBias:l=.25,mirror:h=0,distortion:u=1,mixContrast:d=1,distortionMap:p,reflectorOffset:f=0,...m},g)=>{const v=lp((({gl:t})=>t)),y=lp((({camera:t})=>t)),x=lp((({scene:t})=>t)),M=(r=Array.isArray(r)?r:[r,r])[0]+r[1]>0,S=t.useRef(null),[b]=t.useState((()=>new Tr)),[w]=t.useState((()=>new nn)),[T]=t.useState((()=>new nn)),[E]=t.useState((()=>new nn)),[A]=t.useState((()=>new In)),[C]=t.useState((()=>new nn(0,0,-1))),[R]=t.useState((()=>new Ke)),[P]=t.useState((()=>new nn)),[U]=t.useState((()=>new nn)),[L]=t.useState((()=>new Ke)),[I]=t.useState((()=>new In)),[D]=t.useState((()=>new vr)),O=t.useCallback((()=>{var t;const e=S.current.parent||(null==(t=S.current)?void 0:t.__r3f.parent);if(!e)return;if(T.setFromMatrixPosition(e.matrixWorld),E.setFromMatrixPosition(y.matrixWorld),A.extractRotation(e.matrixWorld),w.set(0,0,1),w.applyMatrix4(A),T.addScaledVector(w,f),P.subVectors(T,E),P.dot(w)>0)return;P.reflect(w).negate(),P.add(T),A.extractRotation(y.matrixWorld),C.set(0,0,-1),C.applyMatrix4(A),C.add(E),U.subVectors(T,C),U.reflect(w).negate(),U.add(T),D.position.copy(P),D.up.set(0,1,0),D.up.applyMatrix4(A),D.up.reflect(w),D.lookAt(U),D.far=y.far,D.updateMatrixWorld(),D.projectionMatrix.copy(y.projectionMatrix),I.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),I.multiply(D.projectionMatrix),I.multiply(D.matrixWorldInverse),I.multiply(e.matrixWorld),b.setFromNormalAndCoplanarPoint(w,T),b.applyMatrix4(D.matrixWorldInverse),R.set(b.normal.x,b.normal.y,b.normal.z,b.constant);const n=D.projectionMatrix;L.x=(Math.sign(R.x)+n.elements[8])/n.elements[0],L.y=(Math.sign(R.y)+n.elements[9])/n.elements[5],L.z=-1,L.w=(1+n.elements[10])/n.elements[14],R.multiplyScalar(2/R.dot(L)),n.elements[2]=R.x,n.elements[6]=R.y,n.elements[10]=R.z+1,n.elements[14]=R.w}),[y,f]),[N,F,B,z]=t.useMemo((()=>{const t={minFilter:$,magFilter:$,type:at},c=new $e(i,i,t);c.depthBuffer=!0,c.depthTexture=new io(i,i),c.depthTexture.format=ut,c.depthTexture.type=nt;const f=new $e(i,i,t);return[c,f,new fv({gl:v,resolution:i,width:r[0],height:r[1],minDepthThreshold:s,maxDepthThreshold:a,depthScale:o,depthToBlurRatioBias:l}),{mirror:h,textureMatrix:I,mixBlur:e,tDiffuse:c.texture,tDepth:c.depthTexture,tDiffuseBlur:f.texture,hasBlur:M,mixStrength:n,minDepthThreshold:s,maxDepthThreshold:a,depthScale:o,depthToBlurRatioBias:l,distortion:u,distortionMap:p,mixContrast:d,"defines-USE_BLUR":M?"":void 0,"defines-USE_DEPTH":o>0?"":void 0,"defines-USE_DISTORTION":p?"":void 0}]}),[v,r,I,i,h,M,e,n,s,a,o,l,u,p,d]);return cp((()=>{var t;const e=S.current.parent||(null==(t=S.current)?void 0:t.__r3f.parent);if(!e)return;e.visible=!1;const n=v.xr.enabled,i=v.shadowMap.autoUpdate;O(),v.xr.enabled=!1,v.shadowMap.autoUpdate=!1,v.setRenderTarget(N),v.state.buffers.depth.setMask(!0),v.autoClear||v.clear(),v.render(x,D),M&&B.render(v,N,F),v.xr.enabled=n,v.shadowMap.autoUpdate=i,e.visible=!0,v.setRenderTarget(null)})),t.createElement("meshReflectorMaterialImpl",c({attach:"material",key:"key"+z["defines-USE_BLUR"]+z["defines-USE_DEPTH"]+z["defines-USE_DISTORTION"],ref:_([S,g])},z,m))})),gv=nv({},"void main() { }","void main() { gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0); discard;  }");class vv extends $c{constructor(t=6,e=!1){super(),this.uniforms={chromaticAberration:{value:.05},transmission:{value:0},_transmission:{value:1},transmissionMap:{value:null},roughness:{value:0},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:1/0},attenuationColor:{value:new bi("white")},anisotropicBlur:{value:.1},time:{value:0},distortion:{value:0},distortionScale:{value:.5},temporalDistortion:{value:0},buffer:{value:null}},this.onBeforeCompile=n=>{n.uniforms={...n.uniforms,...this.uniforms},e?n.defines.USE_SAMPLER="":n.defines.USE_TRANSMISSION="",n.fragmentShader="\n      uniform float chromaticAberration;         \n      uniform float anisotropicBlur;      \n      uniform float time;\n      uniform float distortion;\n      uniform float distortionScale;\n      uniform float temporalDistortion;\n      uniform sampler2D buffer;\n\n      vec3 random3(vec3 c) {\n        float j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));\n        vec3 r;\n        r.z = fract(512.0*j);\n        j *= .125;\n        r.x = fract(512.0*j);\n        j *= .125;\n        r.y = fract(512.0*j);\n        return r-0.5;\n      }\n\n      float seed = 0.0;\n      uint hash( uint x ) {\n        x += ( x << 10u );\n        x ^= ( x >>  6u );\n        x += ( x <<  3u );\n        x ^= ( x >> 11u );\n        x += ( x << 15u );\n        return x;\n      }\n\n      // Compound versions of the hashing algorithm I whipped together.\n      uint hash( uvec2 v ) { return hash( v.x ^ hash(v.y)                         ); }\n      uint hash( uvec3 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z)             ); }\n      uint hash( uvec4 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z) ^ hash(v.w) ); }\n\n      // Construct a float with half-open range [0:1] using low 23 bits.\n      // All zeroes yields 0.0, all ones yields the next smallest representable value below 1.0.\n      float floatConstruct( uint m ) {\n        const uint ieeeMantissa = 0x007FFFFFu; // binary32 mantissa bitmask\n        const uint ieeeOne      = 0x3F800000u; // 1.0 in IEEE binary32\n        m &= ieeeMantissa;                     // Keep only mantissa bits (fractional part)\n        m |= ieeeOne;                          // Add fractional part to 1.0\n        float  f = uintBitsToFloat( m );       // Range [1:2]\n        return f - 1.0;                        // Range [0:1]\n      }\n\n      // Pseudo-random value in half-open range [0:1].\n      float random( float x ) { return floatConstruct(hash(floatBitsToUint(x))); }\n      float random( vec2  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\n      float random( vec3  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\n      float random( vec4  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\n\n      float rand() {\n        float result = random(vec3(gl_FragCoord.xy, seed));\n        seed += 1.0;\n        return result;\n      }\n\n      const float F3 =  0.3333333;\n      const float G3 =  0.1666667;\n\n      float snoise(vec3 p) {\n        vec3 s = floor(p + dot(p, vec3(F3)));\n        vec3 x = p - s + dot(s, vec3(G3));\n        vec3 e = step(vec3(0.0), x - x.yzx);\n        vec3 i1 = e*(1.0 - e.zxy);\n        vec3 i2 = 1.0 - e.zxy*(1.0 - e);\n        vec3 x1 = x - i1 + G3;\n        vec3 x2 = x - i2 + 2.0*G3;\n        vec3 x3 = x - 1.0 + 3.0*G3;\n        vec4 w, d;\n        w.x = dot(x, x);\n        w.y = dot(x1, x1);\n        w.z = dot(x2, x2);\n        w.w = dot(x3, x3);\n        w = max(0.6 - w, 0.0);\n        d.x = dot(random3(s), x);\n        d.y = dot(random3(s + i1), x1);\n        d.z = dot(random3(s + i2), x2);\n        d.w = dot(random3(s + 1.0), x3);\n        w *= w;\n        w *= w;\n        d *= w;\n        return dot(d, vec4(52.0));\n      }\n\n      float snoiseFractal(vec3 m) {\n        return 0.5333333* snoise(m)\n              +0.2666667* snoise(2.0*m)\n              +0.1333333* snoise(4.0*m)\n              +0.0666667* snoise(8.0*m);\n      }\n"+n.fragmentShader,n.fragmentShader=n.fragmentShader.replace("#include <transmission_pars_fragment>","\n        #ifdef USE_TRANSMISSION\n          // Transmission code is based on glTF-Sampler-Viewer\n          // https://github.com/KhronosGroup/glTF-Sample-Viewer\n          uniform float _transmission;\n          uniform float thickness;\n          uniform float attenuationDistance;\n          uniform vec3 attenuationColor;\n          #ifdef USE_TRANSMISSIONMAP\n            uniform sampler2D transmissionMap;\n          #endif\n          #ifdef USE_THICKNESSMAP\n            uniform sampler2D thicknessMap;\n          #endif\n          uniform vec2 transmissionSamplerSize;\n          uniform sampler2D transmissionSamplerMap;\n          uniform mat4 modelMatrix;\n          uniform mat4 projectionMatrix;\n          varying vec3 vWorldPosition;\n          vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n            // Direction of refracted light.\n            vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n            // Compute rotation-independant scaling of the model matrix.\n            vec3 modelScale;\n            modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n            modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n            modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n            // The thickness is specified in local space.\n            return normalize( refractionVector ) * thickness * modelScale;\n          }\n          float applyIorToRoughness( const in float roughness, const in float ior ) {\n            // Scale roughness with IOR so that an IOR of 1.0 results in no microfacet refraction and\n            // an IOR of 1.5 results in the default amount of microfacet refraction.\n            return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n          }\n          vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n            float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );            \n            #ifdef USE_SAMPLER\n              #ifdef texture2DLodEXT\n                return texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod);\n              #else\n                return texture2D(transmissionSamplerMap, fragCoord.xy, framebufferLod);\n              #endif\n            #else\n              return texture2D(buffer, fragCoord.xy);\n            #endif\n          }\n          vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n            if ( isinf( attenuationDistance ) ) {\n              // Attenuation distance is +∞, i.e. the transmitted color is not attenuated at all.\n              return radiance;\n            } else {\n              // Compute light attenuation using Beer's law.\n              vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n              vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance ); // Beer's law\n              return transmittance * radiance;\n            }\n          }\n          vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n            const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n            const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n            const in vec3 attenuationColor, const in float attenuationDistance ) {\n            vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n            vec3 refractedRayExit = position + transmissionRay;\n            // Project refracted vector on the framebuffer, while mapping to normalized device coordinates.\n            vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n            vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n            refractionCoords += 1.0;\n            refractionCoords /= 2.0;\n            // Sample framebuffer to get pixel the refracted ray hits.\n            vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n            vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n            // Get the specular component.\n            vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n            return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n          }\n        #endif\n"),n.fragmentShader=n.fragmentShader.replace("#include <transmission_fragment>",`  \n        // Improve the refraction to use the world pos\n        material.transmission = _transmission;\n        material.transmissionAlpha = 1.0;\n        material.thickness = thickness;\n        material.attenuationDistance = attenuationDistance;\n        material.attenuationColor = attenuationColor;\n        #ifdef USE_TRANSMISSIONMAP\n          material.transmission *= texture2D( transmissionMap, vUv ).r;\n        #endif\n        #ifdef USE_THICKNESSMAP\n          material.thickness *= texture2D( thicknessMap, vUv ).g;\n        #endif\n        \n        vec3 pos = vWorldPosition;\n        vec3 v = normalize( cameraPosition - pos );\n        vec3 n = inverseTransformDirection( normal, viewMatrix );\n        vec3 transmission = vec3(0.0);\n        float transmissionR, transmissionB, transmissionG;\n        float randomCoords = rand();\n        float thickness_smear = thickness * max(pow(roughnessFactor, 0.33), anisotropicBlur);\n        vec3 distortionNormal = vec3(0.0);\n        vec3 temporalOffset = vec3(time, -time, -time) * temporalDistortion;\n        if (distortion > 0.0) {\n          distortionNormal = distortion * vec3(snoiseFractal(vec3((pos * distortionScale + temporalOffset))), snoiseFractal(vec3(pos.zxy * distortionScale - temporalOffset)), snoiseFractal(vec3(pos.yxz * distortionScale + temporalOffset)));\n        }\n        for (float i = 0.0; i < ${t}.0; i ++) {\n          vec3 sampleNorm = normalize(n + roughnessFactor * roughnessFactor * 2.0 * normalize(vec3(rand() - 0.5, rand() - 0.5, rand() - 0.5)) * pow(rand(), 0.33) + distortionNormal);\n          transmissionR = getIBLVolumeRefraction(\n            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness  + thickness_smear * (i + randomCoords) / float(${t}),\n            material.attenuationColor, material.attenuationDistance\n          ).r;\n          transmissionG = getIBLVolumeRefraction(\n            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior  * (1.0 + chromaticAberration * (i + randomCoords) / float(${t})) , material.thickness + thickness_smear * (i + randomCoords) / float(${t}),\n            material.attenuationColor, material.attenuationDistance\n          ).g;\n          transmissionB = getIBLVolumeRefraction(\n            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior * (1.0 + 2.0 * chromaticAberration * (i + randomCoords) / float(${t})), material.thickness + thickness_smear * (i + randomCoords) / float(${t}),\n            material.attenuationColor, material.attenuationDistance\n          ).b;\n          transmission.r += transmissionR;\n          transmission.g += transmissionG;\n          transmission.b += transmissionB;\n        }\n        transmission /= ${t}.0;\n        totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n`)},Object.keys(this.uniforms).forEach((t=>Object.defineProperty(this,t,{get:()=>this.uniforms[t].value,set:e=>this.uniforms[t].value=e})))}}const _v=t.forwardRef((({buffer:e,transmissionSampler:n=!1,backside:i=!1,side:r=C,transmission:s=1,thickness:a=0,backsideThickness:o=0,samples:l=10,resolution:h,backsideResolution:u,background:d,anisotropy:p,anisotropicBlur:f,...m},g)=>{yd({MeshTransmissionMaterial:vv});const v=t.useRef(null),[_]=t.useState((()=>new gv)),y=hv(u||h),x=hv(h);let M,S,b;return cp((t=>{v.current.time=t.clock.getElapsedTime(),v.current.buffer!==x.texture||n||(b=v.current.__r3f.parent,b&&(S=t.gl.toneMapping,M=t.scene.background,t.gl.toneMapping=D,d&&(t.scene.background=d),b.material=_,i&&(t.gl.setRenderTarget(y),t.gl.render(t.scene,t.camera),b.material=v.current,b.material.buffer=y.texture,b.material.thickness=o,b.material.side=R),t.gl.setRenderTarget(x),t.gl.render(t.scene,t.camera),b.material.thickness=a,b.material.side=r,b.material.buffer=x.texture,t.scene.background=M,t.gl.setRenderTarget(null),b.material=v.current,t.gl.toneMapping=S))})),t.useImperativeHandle(g,(()=>v.current),[]),t.createElement("meshTransmissionMaterial",c({args:[l,n],ref:v},m,{buffer:e||x.texture,_transmission:s,anisotropicBlur:null!=f?f:p,transmission:n?s:0,thickness:a,side:r}))})),yv=t.forwardRef((({children:e,enabled:n=!0,speed:i=1,rotationIntensity:r=1,floatIntensity:s=1,floatingRange:a=[-.1,.1],...o},l)=>{const c=t.useRef(null),h=t.useRef(1e4*Math.random());return cp((t=>{var e,o;if(!n||0===i)return;const l=h.current+t.clock.getElapsedTime();c.current.rotation.x=Math.cos(l/4*i)/8*r,c.current.rotation.y=Math.sin(l/4*i)/8*r,c.current.rotation.z=Math.sin(l/4*i)/20*r;let u=Math.sin(l/4*i)/10;u=Ae.mapLinear(u,-.1,.1,null!==(e=null==a?void 0:a[0])&&void 0!==e?e:-.1,null!==(o=null==a?void 0:a[1])&&void 0!==o?o:.1),c.current.position.y=u*s,c.current.updateMatrix()})),t.createElement("group",o,t.createElement("group",{ref:_([c,l]),matrixAutoUpdate:!1},e))})),xv={apartment:"lebombo_1k.hdr",city:"potsdamer_platz_1k.hdr",dawn:"kiara_1_dawn_1k.hdr",forest:"forest_slope_1k.hdr",lobby:"st_fagans_interior_1k.hdr",night:"dikhololo_night_1k.hdr",park:"rooitou_park_1k.hdr",studio:"studio_small_03_1k.hdr",sunset:"venice_sunset_1k.hdr",warehouse:"empty_warehouse_01_1k.hdr"},Mv="https://raw.githack.com/pmndrs/drei-assets/456060a26bbeb8fdf79326f224b6d99b8bcce736/hdri/",Sv=t=>Array.isArray(t);function bv({files:t=["/px.png","/nx.png","/py.png","/ny.png","/pz.png","/nz.png"],path:e="",preset:n,encoding:i,extensions:r}={}){var s;let a,o=null,l=!1;if(n){if(!(n in xv))throw new Error("Preset must be one of: "+Object.keys(xv).join(", "));t=xv[n],e=Mv}if(l=Sv(t),a=Sv(t)?"cube":t.startsWith("data:application/exr")?"exr":t.startsWith("data:application/hdr")?"hdr":null==(s=t.split(".").pop())?void 0:s.toLowerCase(),o=l?Dh:"hdr"===a?Wm:"exr"===a?Xm:null,!o)throw new Error("useEnvironment: Unrecognized file extension: "+t);const c=dp(o,l?[t]:t,(t=>{null==t.setPath||t.setPath(e),r&&r(t)})),h=l?c[0]:c;h.mapping=l?G:H;return"colorSpace"in h?h.colorSpace=(null!=i?i:l)?"srgb":"srgb-linear":h.encoding=(null!=i?i:l)?3001:3e3,h}const wv=t=>{return(e=t).current&&e.current.isScene?t.current:t;var e};function Tv(t,e,n,i,r=0){const s=wv(e||n),a=s.background,o=s.environment,l=s.backgroundBlurriness||0;return"only"!==t&&(s.environment=i),t&&(s.background=i),t&&void 0!==s.backgroundBlurriness&&(s.backgroundBlurriness=r),()=>{"only"!==t&&(s.environment=o),t&&(s.background=a),t&&void 0!==s.backgroundBlurriness&&(s.backgroundBlurriness=l)}}function Ev({scene:e,background:n=!1,blur:i,map:r}){const s=lp((t=>t.scene));return t.useLayoutEffect((()=>{if(r)return Tv(n,e,s,r,i)}),[s,e,r,n,i]),null}function Av({background:e=!1,scene:n,blur:i,...r}){const s=bv(r),a=lp((t=>t.scene));return t.useLayoutEffect((()=>Tv(e,n,a,s,i)),[s,e,n,a,i]),null}function Cv({children:e,near:n=1,far:i=1e3,resolution:r=256,frames:s=1,map:a,background:o=!1,blur:l,scene:c,files:h,path:u,preset:d,extensions:p}){const f=lp((t=>t.gl)),m=lp((t=>t.scene)),g=t.useRef(null),[v]=t.useState((()=>new po)),_=t.useMemo((()=>{const t=new Mr(r);return t.texture.type=at,t}),[r]);t.useLayoutEffect((()=>(1===s&&g.current.update(f,v),Tv(o,c,m,_.texture,l))),[e,v,_.texture,c,m,o,s,f]);let y=1;return cp((()=>{(s===1/0||y<s)&&(g.current.update(f,v),y++)})),t.createElement(t.Fragment,null,bp(t.createElement(t.Fragment,null,e,t.createElement("cubeCamera",{ref:g,args:[n,i,_]}),h||d?t.createElement(Av,{background:!0,files:h,preset:d,path:u,extensions:p}):a?t.createElement(Ev,{background:!0,map:a,extensions:p}):null),v))}function Rv(e){var n,i,r,s;const a=bv(e),o=e.map||a;t.useMemo((()=>yd({GroundProjectedEnvImpl:Fm})),[]);const l=t.useMemo((()=>[o]),[o]),h=null==(n=e.ground)?void 0:n.height,u=null==(i=e.ground)?void 0:i.radius,d=null!==(r=null==(s=e.ground)?void 0:s.scale)&&void 0!==r?r:1e3;return t.createElement(t.Fragment,null,t.createElement(Ev,c({},e,{map:o})),t.createElement("groundProjectedEnvImpl",{args:l,scale:d,height:h,radius:u}))}function Pv(e){return e.ground?t.createElement(Rv,e):e.map?t.createElement(Ev,e):e.children?t.createElement(Cv,e):t.createElement(Av,e)}const Uv=t.createContext(null),Lv=nv({color:new bi,blend:2,alphaTest:.75,opacity:0,map:null},"varying vec2 vUv;\n   void main() {\n     gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n     vUv = uv;\n   }","varying vec2 vUv;\n   uniform sampler2D map;\n   uniform vec3 color;\n   uniform float opacity;\n   uniform float alphaTest;\n   uniform float blend;\n   void main() {\n     vec4 sampledDiffuseColor = texture2D(map, vUv);\n     gl_FragColor = vec4(color * sampledDiffuseColor.r * blend, max(0.0, (1.0 - (sampledDiffuseColor.r + sampledDiffuseColor.g + sampledDiffuseColor.b) / alphaTest)) * opacity);\n     #include <tonemapping_fragment>\n     #include <encodings_fragment>\n   }"),Iv=t.forwardRef((({children:e,temporal:n,frames:i=40,limit:r=1/0,blend:s=20,scale:a=10,opacity:o=1,alphaTest:l=.75,color:c="black",colorBlend:h=2,resolution:u=1024,toneMapped:d=!0,...p},f)=>{yd({SoftShadowMaterial:Lv});const m=lp((t=>t.gl)),g=lp((t=>t.scene)),v=lp((t=>t.camera)),_=lp((t=>t.invalidate)),y=t.useRef(null),x=t.useRef(null),[M]=t.useState((()=>new Ov(m,g,u)));t.useLayoutEffect((()=>{M.configure(y.current)}),[]);const S=t.useMemo((()=>({lights:new Map,temporal:!!n,frames:Math.max(2,i),blend:Math.max(2,i===1/0?s:i),count:0,getMesh:()=>y.current,reset:()=>{M.clear();const t=y.current.material;t.opacity=0,t.alphaTest=0,S.count=0},update:(t=1)=>{const e=y.current.material;S.temporal?(e.opacity=Math.min(o,e.opacity+o/S.blend),e.alphaTest=Math.min(l,e.alphaTest+l/S.blend)):(e.opacity=o,e.alphaTest=l),x.current.visible=!0,M.prepare();for(let n=0;n<t;n++)S.lights.forEach((t=>t.update())),M.update(v,S.blend);x.current.visible=!1,M.finish()}})),[M,v,g,n,i,s,o,l]);return t.useLayoutEffect((()=>{S.reset(),S.temporal||S.frames===1/0||S.update(S.blend)})),t.useImperativeHandle(f,(()=>S),[S]),cp((()=>{(S.temporal||S.frames===1/0)&&S.count<S.frames&&S.count<r&&(_(),S.update(),S.count++)})),t.createElement("group",p,t.createElement("group",{traverse:()=>null,ref:x},t.createElement(Uv.Provider,{value:S},e)),t.createElement("mesh",{receiveShadow:!0,ref:y,scale:a,rotation:[-Math.PI/2,0,0]},t.createElement("planeGeometry",null),t.createElement("softShadowMaterial",{transparent:!0,depthWrite:!1,toneMapped:d,color:c,blend:h,map:M.progressiveLightMap2.texture})))})),Dv=t.forwardRef((({castShadow:e=!0,bias:n=.001,mapSize:i=512,size:r=5,near:s=.5,far:a=500,frames:o=1,position:l=[0,0,0],radius:h=1,amount:u=8,intensity:d=1,ambient:p=.5,...f},m)=>{const g=t.useRef(null),v=new nn(...l).length(),_=t.useContext(Uv),y=t.useCallback((()=>{let t;if(g.current)for(let e=0;e<g.current.children.length;e++)if(t=g.current.children[e],Math.random()>p)t.position.set(l[0]+Ae.randFloatSpread(h),l[1]+Ae.randFloatSpread(h),l[2]+Ae.randFloatSpread(h));else{let e=Math.acos(2*Math.random()-1)-Math.PI/2,n=2*Math.PI*Math.random();t.position.set(Math.cos(e)*Math.cos(n)*v,Math.abs(Math.cos(e)*Math.sin(n)*v),Math.sin(e)*v)}}),[h,p,v,...l]),x=t.useMemo((()=>({update:y})),[y]);return t.useImperativeHandle(m,(()=>x),[x]),t.useLayoutEffect((()=>{const t=g.current;return _&&_.lights.set(t.uuid,x),()=>{_.lights.delete(t.uuid)}}),[_,x]),t.createElement("group",c({ref:g},f),Array.from({length:u},((o,l)=>t.createElement("directionalLight",{key:l,castShadow:e,"shadow-bias":n,"shadow-mapSize":[i,i],intensity:d/u},t.createElement("orthographicCamera",{attach:"shadow-camera",args:[-r,r,r,-r,s,a]})))))}));class Ov{constructor(t,e,n=1024){this.renderer=t,this.res=n,this.scene=e,this.buffer1Active=!1,this.lights=[],this.meshes=[],this.object=null,this.clearColor=new bi,this.clearAlpha=0;const i=/(Android|iPad|iPhone|iPod)/g.test(navigator.userAgent)?at:st;this.progressiveLightMap1=new $e(this.res,this.res,{type:i}),this.progressiveLightMap2=new $e(this.res,this.res,{type:i}),this.discardMat=new gv,this.targetMat=new nh({fog:!1}),this.previousShadowMap={value:this.progressiveLightMap1.texture},this.averagingWindow={value:100},this.targetMat.onBeforeCompile=t=>{t.vertexShader="varying vec2 vUv;\n"+t.vertexShader.slice(0,-1)+"vUv = uv; gl_Position = vec4((uv - 0.5) * 2.0, 1.0, 1.0); }";const e=t.fragmentShader.indexOf("void main() {");t.fragmentShader="varying vec2 vUv;\n"+t.fragmentShader.slice(0,e)+"uniform sampler2D previousShadowMap;\n\tuniform float averagingWindow;\n"+t.fragmentShader.slice(e-1,-1)+"\nvec3 texelOld = texture2D(previousShadowMap, vUv).rgb;\n        gl_FragColor.rgb = mix(texelOld, gl_FragColor.rgb, 1.0/ averagingWindow);\n      }",t.uniforms.previousShadowMap=this.previousShadowMap,t.uniforms.averagingWindow=this.averagingWindow}}clear(){this.renderer.getClearColor(this.clearColor),this.clearAlpha=this.renderer.getClearAlpha(),this.renderer.setClearColor("black",1),this.renderer.setRenderTarget(this.progressiveLightMap1),this.renderer.clear(),this.renderer.setRenderTarget(this.progressiveLightMap2),this.renderer.clear(),this.renderer.setRenderTarget(null),this.renderer.setClearColor(this.clearColor,this.clearAlpha),this.lights=[],this.meshes=[],this.scene.traverse((t=>{!function(t){return!!t.geometry}(t)?function(t){return t.isLight}(t)&&this.lights.push({object:t,intensity:t.intensity}):this.meshes.push({object:t,material:t.material})}))}prepare(){this.lights.forEach((t=>t.object.intensity=0)),this.meshes.forEach((t=>t.object.material=this.discardMat))}finish(){this.lights.forEach((t=>t.object.intensity=t.intensity)),this.meshes.forEach((t=>t.object.material=t.material))}configure(t){this.object=t}update(t,e=100){if(!this.object)return;this.averagingWindow.value=e,this.object.material=this.targetMat;const n=this.buffer1Active?this.progressiveLightMap1:this.progressiveLightMap2,i=this.buffer1Active?this.progressiveLightMap2:this.progressiveLightMap1,r=this.scene.background;this.scene.background=null,this.renderer.setRenderTarget(n),this.previousShadowMap.value=i.texture,this.buffer1Active=!this.buffer1Active,this.renderer.render(this.scene,t),this.renderer.setRenderTarget(null),this.scene.background=r}}function Nv({all:e,scene:n,camera:i}){const r=lp((({gl:t})=>t)),s=lp((({camera:t})=>t)),a=lp((({scene:t})=>t));return t.useLayoutEffect((()=>{const t=[];e&&(n||a).traverse((e=>{!1===e.visible&&(t.push(e),e.visible=!0)})),r.compile(n||a,i||s);const o=new Mr(128);new yr(.01,1e5,o).update(r,n||a),o.dispose(),t.forEach((t=>t.visible=!1))}),[]),null}const Fv=t.forwardRef((({children:e,compute:n,width:i,height:r,samples:s=8,renderPriority:a=0,eventPriority:o=0,frames:l=1/0,stencilBuffer:h=!1,depthBuffer:u=!0,generateMipmaps:d=!1,...p},f)=>{const{size:m,viewport:g}=lp(),v=hv((i||m.width)*g.dpr,(r||m.height)*g.dpr,{samples:s,stencilBuffer:h,depthBuffer:u,generateMipmaps:d}),[_]=t.useState((()=>new po)),y=t.useCallback(((t,e,n)=>{var i,r;let s=null==(i=v.texture)?void 0:i.__r3f.parent;for(;s&&!(s instanceof ri);)s=s.__r3f.parent;if(!s)return!1;n.raycaster.camera||n.events.compute(t,n,null==(r=n.previousRoot)?void 0:r.getState());const[a]=n.raycaster.intersectObject(s);if(!a)return!1;const o=a.uv;if(!o)return!1;e.raycaster.setFromCamera(e.pointer.set(2*o.x-1,2*o.y-1),e.camera)}),[]);return t.useImperativeHandle(f,(()=>v.texture),[v]),t.createElement(t.Fragment,null,bp(t.createElement(Bv,{renderPriority:a,frames:l,fbo:v},e,t.createElement("group",{onPointerOver:()=>null})),_,{events:{compute:n||y,priority:o}}),t.createElement("primitive",c({object:v.texture},p)))}));function Bv({frames:e,renderPriority:n,children:i,fbo:r}){let s,a=0;return cp((t=>{(e===1/0||a<e)&&(s=t.gl.autoClear,t.gl.autoClear=!0,t.gl.setRenderTarget(r),t.gl.render(t.scene,t.camera),t.gl.setRenderTarget(null),t.gl.autoClear=s,a++)}),n),t.createElement(t.Fragment,null,i)}const zv=t.forwardRef((({id:e=1,colorWrite:n=!1,depthWrite:i=!1,...r},s)=>{const a=t.useRef(null),o=t.useMemo((()=>({colorWrite:n,depthWrite:i,stencilWrite:!0,stencilRef:e,stencilFunc:519,stencilFail:oe,stencilZFail:oe,stencilZPass:oe})),[e,n,i]);return t.useLayoutEffect((()=>{Object.assign(a.current.material,o)})),t.useImperativeHandle(s,(()=>a.current),[]),t.createElement("mesh",c({ref:a,renderOrder:-e},r))}));export{xr as $,md as A,an as B,gr as C,sd as D,pe as E,Ni as F,ql as G,Bh as H,Lc as I,Vu as J,ac as K,Fh as L,In as M,ml as N,ri as O,$u as P,Vl as Q,Ln as R,wn as S,gi as T,Oi as U,nn as V,al as W,Vr as X,vr as Y,Tr as Z,df as _,Ce as a,Hn as a0,ud as a1,en as a2,to as a3,ld as a4,Kl as a5,$l as a6,tc as a7,Al as a8,Gl as a9,hf as aA,Jg as aB,ev as aC,Iv as aD,Dv as aE,dv as aF,nv as aG,yd as aH,lp as aI,Nh as aJ,Lm as aK,Im as aL,Nm as aM,Nv as aN,cv as aO,rv as aP,Cf as aQ,_v as aR,mv as aS,Fv as aT,Pv as aU,Wl as aa,Fc as ab,Yl as ac,Gc as ad,Ur as ae,Wc as af,lr as ag,Kh as ah,Zh as ai,Wh as aj,Rh as ak,Lh as al,ju as am,zl as an,Dr as ao,Xl as ap,ff as aq,dp as ar,hp as as,yv as at,vf as au,uv as av,zv as aw,Af as ax,Cp as ay,cp as az,Wi as b,Ti as c,Fu as d,Ii as e,Je as f,hr as g,Ae as h,Re as i,bi as j,Ke as k,kl as l,Bl as m,qu as n,po as o,uo as p,su as q,Qt as r,te as s,j as t,V as u,G as v,fr as w,Ir as x,wl as y,mr as z};
